

    if (ampslice(_a_gzrf1.fixedflag ? (_temp495_a_gzrf1=a_gzrf1,&_temp495_a_gzrf1) : &a_gzrf1,(long)(4000000*cyc_rf1/
        pw_rf1),
        (float)thk_rf1,(float)gscale_rf1,
        (int)1) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf1a.fixedflag ? (_temp496_pw_gzrf1a=pw_gzrf1a,&_temp496_pw_gzrf1a) : &pw_gzrf1a,a_gzrf1,loggrd.tz,
                loggrd.zrt,1) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf1d.fixedflag ? (_temp497_pw_gzrf1d=pw_gzrf1d,&_temp497_pw_gzrf1d) : &pw_gzrf1d,a_gzrf1,loggrd.tz,
                loggrd.zft,1)== FAILURE)
    {
        return FAILURE;
    }

    ia_gzrf1  = _ia_gzrf1.fixedflag ?    ((void)((int)(a_gzrf1*MAX_PG_IAMP/loggrd.tz)), ia_gzrf1) : (int)(a_gzrf1*MAX_PG_IAMP/loggrd.tz);

    ia_rf1  = _ia_rf1.fixedflag ?    ((void)((int)(a_rf1*MAX_PG_IAMP)), ia_rf1) : (int)(a_rf1*MAX_PG_IAMP);
    if (res_rf1 == 0)
    {
        res_rf1  = _res_rf1.fixedflag ?  ((void)(pw_rf1/(RF_UPDATE_TIME)), res_rf1) : pw_rf1/(RF_UPDATE_TIME);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp498_target=target,&_temp498_target) : &target, (WF_PROCESSOR)wg_gzrf1r, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp499_rtime=rtime,&_temp499_rtime) : &rtime, _ftime.fixedflag ? (_temp500_ftime=ftime,&_temp500_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf1r, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf1r.fixedflag ? (_temp501_a_gzrf1r=a_gzrf1r,&_temp501_a_gzrf1r) : &a_gzrf1r, _pw_gzrf1ra.fixedflag ? (_temp502_pw_gzrf1ra=pw_gzrf1ra,&_temp502_pw_gzrf1ra) : &pw_gzrf1ra, _pw_gzrf1r.fixedflag ? (_temp503_pw_gzrf1r=pw_gzrf1r,&_temp503_pw_gzrf1r) : &pw_gzrf1r,
                          _pw_gzrf1rd.fixedflag ? (_temp504_pw_gzrf1rd=pw_gzrf1rd,&_temp504_pw_gzrf1rd) : &pw_gzrf1rd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf1r  = _ia_gzrf1r.fixedflag ?     ((void)((int)((a_gzrf1r/target)*MAX_PG_IAMP)), ia_gzrf1r) : (int)((a_gzrf1r/target)*MAX_PG_IAMP);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp505_target=target,&_temp505_target) : &target, (WF_PROCESSOR)wg_gz180crush1, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp506_rtime=rtime,&_temp506_rtime) : &rtime, _ftime.fixedflag ? (_temp507_ftime=ftime,&_temp507_ftime) : &ftime, (WF_PROCESSOR)wg_gz180crush1, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz180crush1.fixedflag ? (_temp508_a_gz180crush1=a_gz180crush1,&_temp508_a_gz180crush1) : &a_gz180crush1, _pw_gz180crush1a.fixedflag ? (_temp509_pw_gz180crush1a=pw_gz180crush1a,&_temp509_pw_gz180crush1a) : &pw_gz180crush1a, _pw_gz180crush1.fixedflag ? (_temp510_pw_gz180crush1=pw_gz180crush1,&_temp510_pw_gz180crush1) : &pw_gz180crush1,
                          _pw_gz180crush1d.fixedflag ? (_temp511_pw_gz180crush1d=pw_gz180crush1d,&_temp511_pw_gz180crush1d) : &pw_gz180crush1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz180crush1  = _ia_gz180crush1.fixedflag ?     ((void)((int)((a_gz180crush1/target)*MAX_PG_IAMP)), ia_gz180crush1) : (int)((a_gz180crush1/target)*MAX_PG_IAMP);
    }


    if (ampslice(_a_gzrf2.fixedflag ? (_temp512_a_gzrf2=a_gzrf2,&_temp512_a_gzrf2) : &a_gzrf2,(long)(4000000*cyc_rf2/
        pw_rf2),
        (float)thk_rf2,(float)gscale_rf2,
        (int)1) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf2a.fixedflag ? (_temp513_pw_gzrf2a=pw_gzrf2a,&_temp513_pw_gzrf2a) : &pw_gzrf2a,a_gzrf2,loggrd.tz,
                loggrd.zrt,1) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf2d.fixedflag ? (_temp514_pw_gzrf2d=pw_gzrf2d,&_temp514_pw_gzrf2d) : &pw_gzrf2d,a_gzrf2,loggrd.tz,
                loggrd.zft,1)== FAILURE)
    {
        return FAILURE;
    }

    ia_gzrf2  = _ia_gzrf2.fixedflag ?    ((void)((int)(a_gzrf2*MAX_PG_IAMP/loggrd.tz)), ia_gzrf2) : (int)(a_gzrf2*MAX_PG_IAMP/loggrd.tz);

    ia_rf2  = _ia_rf2.fixedflag ?    ((void)((int)(a_rf2*MAX_PG_IAMP)), ia_rf2) : (int)(a_rf2*MAX_PG_IAMP);
    if (res_rf2 == 0)
    {
        res_rf2  = _res_rf2.fixedflag ?  ((void)(pw_rf2/(RF_UPDATE_TIME)), res_rf2) : pw_rf2/(RF_UPDATE_TIME);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp515_target=target,&_temp515_target) : &target, (WF_PROCESSOR)wg_gz180crush2, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp516_rtime=rtime,&_temp516_rtime) : &rtime, _ftime.fixedflag ? (_temp517_ftime=ftime,&_temp517_ftime) : &ftime, (WF_PROCESSOR)wg_gz180crush2, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz180crush2.fixedflag ? (_temp518_a_gz180crush2=a_gz180crush2,&_temp518_a_gz180crush2) : &a_gz180crush2, _pw_gz180crush2a.fixedflag ? (_temp519_pw_gz180crush2a=pw_gz180crush2a,&_temp519_pw_gz180crush2a) : &pw_gz180crush2a, _pw_gz180crush2.fixedflag ? (_temp520_pw_gz180crush2=pw_gz180crush2,&_temp520_pw_gz180crush2) : &pw_gz180crush2,
                          _pw_gz180crush2d.fixedflag ? (_temp521_pw_gz180crush2d=pw_gz180crush2d,&_temp521_pw_gz180crush2d) : &pw_gz180crush2d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz180crush2  = _ia_gz180crush2.fixedflag ?     ((void)((int)((a_gz180crush2/target)*MAX_PG_IAMP)), ia_gz180crush2) : (int)((a_gz180crush2/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp522_target=target,&_temp522_target) : &target, (WF_PROCESSOR)wg_gzphase1, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp523_rtime=rtime,&_temp523_rtime) : &rtime, _ftime.fixedflag ? (_temp524_ftime=ftime,&_temp524_ftime) : &ftime, (WF_PROCESSOR)wg_gzphase1, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzphase1.fixedflag ? (_temp525_a_gzphase1=a_gzphase1,&_temp525_a_gzphase1) : &a_gzphase1, _pw_gzphase1a.fixedflag ? (_temp526_pw_gzphase1a=pw_gzphase1a,&_temp526_pw_gzphase1a) : &pw_gzphase1a, _pw_gzphase1.fixedflag ? (_temp527_pw_gzphase1=pw_gzphase1,&_temp527_pw_gzphase1) : &pw_gzphase1,
                          _pw_gzphase1d.fixedflag ? (_temp528_pw_gzphase1d=pw_gzphase1d,&_temp528_pw_gzphase1d) : &pw_gzphase1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzphase1  = _ia_gzphase1.fixedflag ?     ((void)((int)((a_gzphase1/target)*MAX_PG_IAMP)), ia_gzphase1) : (int)((a_gzphase1/target)*MAX_PG_IAMP);
    }





{
	float target;

	a_gx  = _a_gx.fixedflag ?  ((void)(gamp), a_gx) : gamp;
	res_gx  = _res_gx.fixedflag ?  ((void)(gres), res_gx) : gres;
	gettarget(_target.fixedflag ? (_temp529_target=target,&_temp529_target) : &target, XGRAD, &loggrd);
	ia_gx  = _ia_gx.fixedflag ?     ((void)((a_gx/target)*MAX_PG_IAMP), ia_gx) : (a_gx/target)*MAX_PG_IAMP;
	/*pw_$[int_name] = (int) $[int_pw] ;*/
  	pw_gx  = _pw_gx.fixedflag ?     ((void)((int)res_gx*GRAD_UPDATE_TIME), pw_gx) : (int)res_gx*GRAD_UPDATE_TIME;
}

{
	float target;

	a_gy  = _a_gy.fixedflag ?  ((void)(gamp), a_gy) : gamp;
	res_gy  = _res_gy.fixedflag ?  ((void)(gres), res_gy) : gres;
	gettarget(_target.fixedflag ? (_temp530_target=target,&_temp530_target) : &target, YGRAD, &loggrd);
	ia_gy  = _ia_gy.fixedflag ?     ((void)((a_gy/target)*MAX_PG_IAMP), ia_gy) : (a_gy/target)*MAX_PG_IAMP;
	/*pw_$[int_name] = (int) $[int_pw] ;*/
  	pw_gy  = _pw_gy.fixedflag ?     ((void)((int)res_gy*GRAD_UPDATE_TIME), pw_gy) : (int)res_gy*GRAD_UPDATE_TIME;
}







{
	float target;

	a_gx2  = _a_gx2.fixedflag ?  ((void)(gamp), a_gx2) : gamp;
	res_gx2  = _res_gx2.fixedflag ?  ((void)(gres), res_gx2) : gres;
	gettarget(_target.fixedflag ? (_temp531_target=target,&_temp531_target) : &target, XGRAD, &loggrd);
	ia_gx2  = _ia_gx2.fixedflag ?     ((void)((a_gx2/target)*MAX_PG_IAMP), ia_gx2) : (a_gx2/target)*MAX_PG_IAMP;
	/*pw_$[int_name] = (int) $[int_pw] ;*/
  	pw_gx2  = _pw_gx2.fixedflag ?     ((void)((int)res_gx2*GRAD_UPDATE_TIME), pw_gx2) : (int)res_gx2*GRAD_UPDATE_TIME;
}

{
	float target;

	a_gy2  = _a_gy2.fixedflag ?  ((void)(gamp), a_gy2) : gamp;
	res_gy2  = _res_gy2.fixedflag ?  ((void)(gres), res_gy2) : gres;
	gettarget(_target.fixedflag ? (_temp532_target=target,&_temp532_target) : &target, YGRAD, &loggrd);
	ia_gy2  = _ia_gy2.fixedflag ?     ((void)((a_gy2/target)*MAX_PG_IAMP), ia_gy2) : (a_gy2/target)*MAX_PG_IAMP;
	/*pw_$[int_name] = (int) $[int_pw] ;*/
  	pw_gy2  = _pw_gy2.fixedflag ?     ((void)((int)res_gy2*GRAD_UPDATE_TIME), pw_gy2) : (int)res_gy2*GRAD_UPDATE_TIME;
}




    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp533_target=target,&_temp533_target) : &target, (WF_PROCESSOR)wg_gzphase2, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp534_rtime=rtime,&_temp534_rtime) : &rtime, _ftime.fixedflag ? (_temp535_ftime=ftime,&_temp535_ftime) : &ftime, (WF_PROCESSOR)wg_gzphase2, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzphase2.fixedflag ? (_temp536_a_gzphase2=a_gzphase2,&_temp536_a_gzphase2) : &a_gzphase2, _pw_gzphase2a.fixedflag ? (_temp537_pw_gzphase2a=pw_gzphase2a,&_temp537_pw_gzphase2a) : &pw_gzphase2a, _pw_gzphase2.fixedflag ? (_temp538_pw_gzphase2=pw_gzphase2,&_temp538_pw_gzphase2) : &pw_gzphase2,
                          _pw_gzphase2d.fixedflag ? (_temp539_pw_gzphase2d=pw_gzphase2d,&_temp539_pw_gzphase2d) : &pw_gzphase2d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzphase2  = _ia_gzphase2.fixedflag ?     ((void)((int)((a_gzphase2/target)*MAX_PG_IAMP)), ia_gzphase2) : (int)((a_gzphase2/target)*MAX_PG_IAMP);
    }

{
  float target;
 
  gettarget(_target.fixedflag ? (_temp540_target=target,&_temp540_target) : &target,(WF_PROCESSOR)wg_gxpre,&loggrd);
  if ((wg_gxpre==TYPRHO1)||(wg_gxpre==TYPRHO2)
        ||(wg_gxpre==TYPOMEGA)||(wg_gxpre==TYPTHETA))
    {
      if (res_gxpre == 0)
        {
          res_gxpre  = _res_gxpre.fixedflag ?  ((void)(pw_gxpre/(RF_UPDATE_TIME)), res_gxpre) : pw_gxpre/(RF_UPDATE_TIME);
        }
      ia_gxpre  = _ia_gxpre.fixedflag ?    ((void)((int)(a_gxpre*MAX_PG_IAMP)), ia_gxpre) : (int)(a_gxpre*MAX_PG_IAMP);
    }    
  else
    {
      if (res_gxpre == 0)
        {
          res_gxpre  = _res_gxpre.fixedflag ?  ((void)(pw_gxpre/(GRAD_UPDATE_TIME)), res_gxpre) : pw_gxpre/(GRAD_UPDATE_TIME);
        }
      ia_gxpre  = _ia_gxpre.fixedflag ?     ((void)((int)((a_gxpre/target)*MAX_PG_IAMP)), ia_gxpre) : (int)((a_gxpre/target)*MAX_PG_IAMP);
    }    
 
  if (off_gxpre != 0)
    {
      ia_gxprew  = _ia_gxprew.fixedflag ?     ((void)((int)((a_gxpre/target)*MAX_PG_WAMP)), ia_gxprew) : (int)((a_gxpre/target)*MAX_PG_WAMP);
      ia_gxpre  = _ia_gxpre.fixedflag ?  ((void)(MAX_PG_IAMP), ia_gxpre) : MAX_PG_IAMP;
    }
}

{
  float target;
 
  gettarget(_target.fixedflag ? (_temp541_target=target,&_temp541_target) : &target,(WF_PROCESSOR)wg_gypre,&loggrd);
  if ((wg_gypre==TYPRHO1)||(wg_gypre==TYPRHO2)
        ||(wg_gypre==TYPOMEGA)||(wg_gypre==TYPTHETA))
    {
      if (res_gypre == 0)
        {
          res_gypre  = _res_gypre.fixedflag ?  ((void)(pw_gypre/(RF_UPDATE_TIME)), res_gypre) : pw_gypre/(RF_UPDATE_TIME);
        }
      ia_gypre  = _ia_gypre.fixedflag ?    ((void)((int)(a_gypre*MAX_PG_IAMP)), ia_gypre) : (int)(a_gypre*MAX_PG_IAMP);
    }    
  else
    {
      if (res_gypre == 0)
        {
          res_gypre  = _res_gypre.fixedflag ?  ((void)(pw_gypre/(GRAD_UPDATE_TIME)), res_gypre) : pw_gypre/(GRAD_UPDATE_TIME);
        }
      ia_gypre  = _ia_gypre.fixedflag ?     ((void)((int)((a_gypre/target)*MAX_PG_IAMP)), ia_gypre) : (int)((a_gypre/target)*MAX_PG_IAMP);
    }    
 
  if (off_gypre != 0)
    {
      ia_gyprew  = _ia_gyprew.fixedflag ?     ((void)((int)((a_gypre/target)*MAX_PG_WAMP)), ia_gyprew) : (int)((a_gypre/target)*MAX_PG_WAMP);
      ia_gypre  = _ia_gypre.fixedflag ?  ((void)(MAX_PG_IAMP), ia_gypre) : MAX_PG_IAMP;
    }
}




{
  float target;

  gettarget(_target.fixedflag ? (_temp542_target=target,&_temp542_target) : &target, (WF_PROCESSOR)wg_BS0rf, &loggrd);
  ia_BS0rf  = _ia_BS0rf.fixedflag ?     ((void)((int)((a_BS0rf/target)*MAX_PG_IAMP)), ia_BS0rf) : (int)((a_BS0rf/target)*MAX_PG_IAMP);
}

{
  float target;

  gettarget(_target.fixedflag ? (_temp543_target=target,&_temp543_target) : &target, (WF_PROCESSOR)wg_BS0rf_theta, &loggrd);
  ia_BS0rf_theta  = _ia_BS0rf_theta.fixedflag ?     ((void)((int)((a_BS0rf_theta/target)*MAX_PG_IAMP)), ia_BS0rf_theta) : (int)((a_BS0rf_theta/target)*MAX_PG_IAMP);
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp544_target=target,&_temp544_target) : &target, (WF_PROCESSOR)wg_gzBS0rfspoiler, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp545_rtime=rtime,&_temp545_rtime) : &rtime, _ftime.fixedflag ? (_temp546_ftime=ftime,&_temp546_ftime) : &ftime, (WF_PROCESSOR)wg_gzBS0rfspoiler, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzBS0rfspoiler.fixedflag ? (_temp547_a_gzBS0rfspoiler=a_gzBS0rfspoiler,&_temp547_a_gzBS0rfspoiler) : &a_gzBS0rfspoiler, _pw_gzBS0rfspoilera.fixedflag ? (_temp548_pw_gzBS0rfspoilera=pw_gzBS0rfspoilera,&_temp548_pw_gzBS0rfspoilera) : &pw_gzBS0rfspoilera, _pw_gzBS0rfspoiler.fixedflag ? (_temp549_pw_gzBS0rfspoiler=pw_gzBS0rfspoiler,&_temp549_pw_gzBS0rfspoiler) : &pw_gzBS0rfspoiler,
                          _pw_gzBS0rfspoilerd.fixedflag ? (_temp550_pw_gzBS0rfspoilerd=pw_gzBS0rfspoilerd,&_temp550_pw_gzBS0rfspoilerd) : &pw_gzBS0rfspoilerd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzBS0rfspoiler  = _ia_gzBS0rfspoiler.fixedflag ?     ((void)((int)((a_gzBS0rfspoiler/target)*MAX_PG_IAMP)), ia_gzBS0rfspoiler) : (int)((a_gzBS0rfspoiler/target)*MAX_PG_IAMP);
    }


{
  float target;

  gettarget(_target.fixedflag ? (_temp551_target=target,&_temp551_target) : &target, (WF_PROCESSOR)wg_rftag1, &loggrd);
  ia_rftag1  = _ia_rftag1.fixedflag ?     ((void)((int)((a_rftag1/target)*MAX_PG_IAMP)), ia_rftag1) : (int)((a_rftag1/target)*MAX_PG_IAMP);
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp552_target=target,&_temp552_target) : &target, (WF_PROCESSOR)wg_gzrftag1, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp553_rtime=rtime,&_temp553_rtime) : &rtime, _ftime.fixedflag ? (_temp554_ftime=ftime,&_temp554_ftime) : &ftime, (WF_PROCESSOR)wg_gzrftag1, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrftag1.fixedflag ? (_temp555_a_gzrftag1=a_gzrftag1,&_temp555_a_gzrftag1) : &a_gzrftag1, _pw_gzrftag1a.fixedflag ? (_temp556_pw_gzrftag1a=pw_gzrftag1a,&_temp556_pw_gzrftag1a) : &pw_gzrftag1a, _pw_gzrftag1.fixedflag ? (_temp557_pw_gzrftag1=pw_gzrftag1,&_temp557_pw_gzrftag1) : &pw_gzrftag1,
                          _pw_gzrftag1d.fixedflag ? (_temp558_pw_gzrftag1d=pw_gzrftag1d,&_temp558_pw_gzrftag1d) : &pw_gzrftag1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrftag1  = _ia_gzrftag1.fixedflag ?     ((void)((int)((a_gzrftag1/target)*MAX_PG_IAMP)), ia_gzrftag1) : (int)((a_gzrftag1/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp559_target=target,&_temp559_target) : &target, (WF_PROCESSOR)wg_gzrftag1r, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp560_rtime=rtime,&_temp560_rtime) : &rtime, _ftime.fixedflag ? (_temp561_ftime=ftime,&_temp561_ftime) : &ftime, (WF_PROCESSOR)wg_gzrftag1r, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrftag1r.fixedflag ? (_temp562_a_gzrftag1r=a_gzrftag1r,&_temp562_a_gzrftag1r) : &a_gzrftag1r, _pw_gzrftag1ra.fixedflag ? (_temp563_pw_gzrftag1ra=pw_gzrftag1ra,&_temp563_pw_gzrftag1ra) : &pw_gzrftag1ra, _pw_gzrftag1r.fixedflag ? (_temp564_pw_gzrftag1r=pw_gzrftag1r,&_temp564_pw_gzrftag1r) : &pw_gzrftag1r,
                          _pw_gzrftag1rd.fixedflag ? (_temp565_pw_gzrftag1rd=pw_gzrftag1rd,&_temp565_pw_gzrftag1rd) : &pw_gzrftag1rd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrftag1r  = _ia_gzrftag1r.fixedflag ?     ((void)((int)((a_gzrftag1r/target)*MAX_PG_IAMP)), ia_gzrftag1r) : (int)((a_gzrftag1r/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp566_target=target,&_temp566_target) : &target, (WF_PROCESSOR)wg_gxrftag1, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp567_rtime=rtime,&_temp567_rtime) : &rtime, _ftime.fixedflag ? (_temp568_ftime=ftime,&_temp568_ftime) : &ftime, (WF_PROCESSOR)wg_gxrftag1, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxrftag1.fixedflag ? (_temp569_a_gxrftag1=a_gxrftag1,&_temp569_a_gxrftag1) : &a_gxrftag1, _pw_gxrftag1a.fixedflag ? (_temp570_pw_gxrftag1a=pw_gxrftag1a,&_temp570_pw_gxrftag1a) : &pw_gxrftag1a, _pw_gxrftag1.fixedflag ? (_temp571_pw_gxrftag1=pw_gxrftag1,&_temp571_pw_gxrftag1) : &pw_gxrftag1,
                          _pw_gxrftag1d.fixedflag ? (_temp572_pw_gxrftag1d=pw_gxrftag1d,&_temp572_pw_gxrftag1d) : &pw_gxrftag1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxrftag1  = _ia_gxrftag1.fixedflag ?     ((void)((int)((a_gxrftag1/target)*MAX_PG_IAMP)), ia_gxrftag1) : (int)((a_gxrftag1/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp573_target=target,&_temp573_target) : &target, (WF_PROCESSOR)wg_gyrftag1, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp574_rtime=rtime,&_temp574_rtime) : &rtime, _ftime.fixedflag ? (_temp575_ftime=ftime,&_temp575_ftime) : &ftime, (WF_PROCESSOR)wg_gyrftag1, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gyrftag1.fixedflag ? (_temp576_a_gyrftag1=a_gyrftag1,&_temp576_a_gyrftag1) : &a_gyrftag1, _pw_gyrftag1a.fixedflag ? (_temp577_pw_gyrftag1a=pw_gyrftag1a,&_temp577_pw_gyrftag1a) : &pw_gyrftag1a, _pw_gyrftag1.fixedflag ? (_temp578_pw_gyrftag1=pw_gyrftag1,&_temp578_pw_gyrftag1) : &pw_gyrftag1,
                          _pw_gyrftag1d.fixedflag ? (_temp579_pw_gyrftag1d=pw_gyrftag1d,&_temp579_pw_gyrftag1d) : &pw_gyrftag1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gyrftag1  = _ia_gyrftag1.fixedflag ?     ((void)((int)((a_gyrftag1/target)*MAX_PG_IAMP)), ia_gyrftag1) : (int)((a_gyrftag1/target)*MAX_PG_IAMP);
    }

{
  float target;

  gettarget(_target.fixedflag ? (_temp580_target=target,&_temp580_target) : &target, (WF_PROCESSOR)wg_rftag2, &loggrd);
  ia_rftag2  = _ia_rftag2.fixedflag ?     ((void)((int)((a_rftag2/target)*MAX_PG_IAMP)), ia_rftag2) : (int)((a_rftag2/target)*MAX_PG_IAMP);
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp581_target=target,&_temp581_target) : &target, (WF_PROCESSOR)wg_gzrftag2, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp582_rtime=rtime,&_temp582_rtime) : &rtime, _ftime.fixedflag ? (_temp583_ftime=ftime,&_temp583_ftime) : &ftime, (WF_PROCESSOR)wg_gzrftag2, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrftag2.fixedflag ? (_temp584_a_gzrftag2=a_gzrftag2,&_temp584_a_gzrftag2) : &a_gzrftag2, _pw_gzrftag2a.fixedflag ? (_temp585_pw_gzrftag2a=pw_gzrftag2a,&_temp585_pw_gzrftag2a) : &pw_gzrftag2a, _pw_gzrftag2.fixedflag ? (_temp586_pw_gzrftag2=pw_gzrftag2,&_temp586_pw_gzrftag2) : &pw_gzrftag2,
                          _pw_gzrftag2d.fixedflag ? (_temp587_pw_gzrftag2d=pw_gzrftag2d,&_temp587_pw_gzrftag2d) : &pw_gzrftag2d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrftag2  = _ia_gzrftag2.fixedflag ?     ((void)((int)((a_gzrftag2/target)*MAX_PG_IAMP)), ia_gzrftag2) : (int)((a_gzrftag2/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp588_target=target,&_temp588_target) : &target, (WF_PROCESSOR)wg_gzrftag2r, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp589_rtime=rtime,&_temp589_rtime) : &rtime, _ftime.fixedflag ? (_temp590_ftime=ftime,&_temp590_ftime) : &ftime, (WF_PROCESSOR)wg_gzrftag2r, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrftag2r.fixedflag ? (_temp591_a_gzrftag2r=a_gzrftag2r,&_temp591_a_gzrftag2r) : &a_gzrftag2r, _pw_gzrftag2ra.fixedflag ? (_temp592_pw_gzrftag2ra=pw_gzrftag2ra,&_temp592_pw_gzrftag2ra) : &pw_gzrftag2ra, _pw_gzrftag2r.fixedflag ? (_temp593_pw_gzrftag2r=pw_gzrftag2r,&_temp593_pw_gzrftag2r) : &pw_gzrftag2r,
                          _pw_gzrftag2rd.fixedflag ? (_temp594_pw_gzrftag2rd=pw_gzrftag2rd,&_temp594_pw_gzrftag2rd) : &pw_gzrftag2rd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrftag2r  = _ia_gzrftag2r.fixedflag ?     ((void)((int)((a_gzrftag2r/target)*MAX_PG_IAMP)), ia_gzrftag2r) : (int)((a_gzrftag2r/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp595_target=target,&_temp595_target) : &target, (WF_PROCESSOR)wg_gxrftag2, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp596_rtime=rtime,&_temp596_rtime) : &rtime, _ftime.fixedflag ? (_temp597_ftime=ftime,&_temp597_ftime) : &ftime, (WF_PROCESSOR)wg_gxrftag2, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxrftag2.fixedflag ? (_temp598_a_gxrftag2=a_gxrftag2,&_temp598_a_gxrftag2) : &a_gxrftag2, _pw_gxrftag2a.fixedflag ? (_temp599_pw_gxrftag2a=pw_gxrftag2a,&_temp599_pw_gxrftag2a) : &pw_gxrftag2a, _pw_gxrftag2.fixedflag ? (_temp600_pw_gxrftag2=pw_gxrftag2,&_temp600_pw_gxrftag2) : &pw_gxrftag2,
                          _pw_gxrftag2d.fixedflag ? (_temp601_pw_gxrftag2d=pw_gxrftag2d,&_temp601_pw_gxrftag2d) : &pw_gxrftag2d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxrftag2  = _ia_gxrftag2.fixedflag ?     ((void)((int)((a_gxrftag2/target)*MAX_PG_IAMP)), ia_gxrftag2) : (int)((a_gxrftag2/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp602_target=target,&_temp602_target) : &target, (WF_PROCESSOR)wg_gyrftag2, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp603_rtime=rtime,&_temp603_rtime) : &rtime, _ftime.fixedflag ? (_temp604_ftime=ftime,&_temp604_ftime) : &ftime, (WF_PROCESSOR)wg_gyrftag2, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gyrftag2.fixedflag ? (_temp605_a_gyrftag2=a_gyrftag2,&_temp605_a_gyrftag2) : &a_gyrftag2, _pw_gyrftag2a.fixedflag ? (_temp606_pw_gyrftag2a=pw_gyrftag2a,&_temp606_pw_gyrftag2a) : &pw_gyrftag2a, _pw_gyrftag2.fixedflag ? (_temp607_pw_gyrftag2=pw_gyrftag2,&_temp607_pw_gyrftag2) : &pw_gyrftag2,
                          _pw_gyrftag2d.fixedflag ? (_temp608_pw_gyrftag2d=pw_gyrftag2d,&_temp608_pw_gyrftag2d) : &pw_gyrftag2d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gyrftag2  = _ia_gyrftag2.fixedflag ?     ((void)((int)((a_gyrftag2/target)*MAX_PG_IAMP)), ia_gyrftag2) : (int)((a_gyrftag2/target)*MAX_PG_IAMP);
    }


{
  float target;

  gettarget(_target.fixedflag ? (_temp609_target=target,&_temp609_target) : &target, (WF_PROCESSOR)wg_rftag1c, &loggrd);
  ia_rftag1c  = _ia_rftag1c.fixedflag ?     ((void)((int)((a_rftag1c/target)*MAX_PG_IAMP)), ia_rftag1c) : (int)((a_rftag1c/target)*MAX_PG_IAMP);
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp610_target=target,&_temp610_target) : &target, (WF_PROCESSOR)wg_gzrftag1c, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp611_rtime=rtime,&_temp611_rtime) : &rtime, _ftime.fixedflag ? (_temp612_ftime=ftime,&_temp612_ftime) : &ftime, (WF_PROCESSOR)wg_gzrftag1c, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrftag1c.fixedflag ? (_temp613_a_gzrftag1c=a_gzrftag1c,&_temp613_a_gzrftag1c) : &a_gzrftag1c, _pw_gzrftag1ca.fixedflag ? (_temp614_pw_gzrftag1ca=pw_gzrftag1ca,&_temp614_pw_gzrftag1ca) : &pw_gzrftag1ca, _pw_gzrftag1c.fixedflag ? (_temp615_pw_gzrftag1c=pw_gzrftag1c,&_temp615_pw_gzrftag1c) : &pw_gzrftag1c,
                          _pw_gzrftag1cd.fixedflag ? (_temp616_pw_gzrftag1cd=pw_gzrftag1cd,&_temp616_pw_gzrftag1cd) : &pw_gzrftag1cd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrftag1c  = _ia_gzrftag1c.fixedflag ?     ((void)((int)((a_gzrftag1c/target)*MAX_PG_IAMP)), ia_gzrftag1c) : (int)((a_gzrftag1c/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp617_target=target,&_temp617_target) : &target, (WF_PROCESSOR)wg_gzrftag1rc, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp618_rtime=rtime,&_temp618_rtime) : &rtime, _ftime.fixedflag ? (_temp619_ftime=ftime,&_temp619_ftime) : &ftime, (WF_PROCESSOR)wg_gzrftag1rc, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrftag1rc.fixedflag ? (_temp620_a_gzrftag1rc=a_gzrftag1rc,&_temp620_a_gzrftag1rc) : &a_gzrftag1rc, _pw_gzrftag1rca.fixedflag ? (_temp621_pw_gzrftag1rca=pw_gzrftag1rca,&_temp621_pw_gzrftag1rca) : &pw_gzrftag1rca, _pw_gzrftag1rc.fixedflag ? (_temp622_pw_gzrftag1rc=pw_gzrftag1rc,&_temp622_pw_gzrftag1rc) : &pw_gzrftag1rc,
                          _pw_gzrftag1rcd.fixedflag ? (_temp623_pw_gzrftag1rcd=pw_gzrftag1rcd,&_temp623_pw_gzrftag1rcd) : &pw_gzrftag1rcd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrftag1rc  = _ia_gzrftag1rc.fixedflag ?     ((void)((int)((a_gzrftag1rc/target)*MAX_PG_IAMP)), ia_gzrftag1rc) : (int)((a_gzrftag1rc/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp624_target=target,&_temp624_target) : &target, (WF_PROCESSOR)wg_gxrftag1c, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp625_rtime=rtime,&_temp625_rtime) : &rtime, _ftime.fixedflag ? (_temp626_ftime=ftime,&_temp626_ftime) : &ftime, (WF_PROCESSOR)wg_gxrftag1c, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxrftag1c.fixedflag ? (_temp627_a_gxrftag1c=a_gxrftag1c,&_temp627_a_gxrftag1c) : &a_gxrftag1c, _pw_gxrftag1ca.fixedflag ? (_temp628_pw_gxrftag1ca=pw_gxrftag1ca,&_temp628_pw_gxrftag1ca) : &pw_gxrftag1ca, _pw_gxrftag1c.fixedflag ? (_temp629_pw_gxrftag1c=pw_gxrftag1c,&_temp629_pw_gxrftag1c) : &pw_gxrftag1c,
                          _pw_gxrftag1cd.fixedflag ? (_temp630_pw_gxrftag1cd=pw_gxrftag1cd,&_temp630_pw_gxrftag1cd) : &pw_gxrftag1cd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxrftag1c  = _ia_gxrftag1c.fixedflag ?     ((void)((int)((a_gxrftag1c/target)*MAX_PG_IAMP)), ia_gxrftag1c) : (int)((a_gxrftag1c/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp631_target=target,&_temp631_target) : &target, (WF_PROCESSOR)wg_gyrftag1c, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp632_rtime=rtime,&_temp632_rtime) : &rtime, _ftime.fixedflag ? (_temp633_ftime=ftime,&_temp633_ftime) : &ftime, (WF_PROCESSOR)wg_gyrftag1c, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gyrftag1c.fixedflag ? (_temp634_a_gyrftag1c=a_gyrftag1c,&_temp634_a_gyrftag1c) : &a_gyrftag1c, _pw_gyrftag1ca.fixedflag ? (_temp635_pw_gyrftag1ca=pw_gyrftag1ca,&_temp635_pw_gyrftag1ca) : &pw_gyrftag1ca, _pw_gyrftag1c.fixedflag ? (_temp636_pw_gyrftag1c=pw_gyrftag1c,&_temp636_pw_gyrftag1c) : &pw_gyrftag1c,
                          _pw_gyrftag1cd.fixedflag ? (_temp637_pw_gyrftag1cd=pw_gyrftag1cd,&_temp637_pw_gyrftag1cd) : &pw_gyrftag1cd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gyrftag1c  = _ia_gyrftag1c.fixedflag ?     ((void)((int)((a_gyrftag1c/target)*MAX_PG_IAMP)), ia_gyrftag1c) : (int)((a_gyrftag1c/target)*MAX_PG_IAMP);
    }

{
  float target;

  gettarget(_target.fixedflag ? (_temp638_target=target,&_temp638_target) : &target, (WF_PROCESSOR)wg_rftag2c, &loggrd);
  ia_rftag2c  = _ia_rftag2c.fixedflag ?     ((void)((int)((a_rftag2c/target)*MAX_PG_IAMP)), ia_rftag2c) : (int)((a_rftag2c/target)*MAX_PG_IAMP);
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp639_target=target,&_temp639_target) : &target, (WF_PROCESSOR)wg_gzrftag2c, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp640_rtime=rtime,&_temp640_rtime) : &rtime, _ftime.fixedflag ? (_temp641_ftime=ftime,&_temp641_ftime) : &ftime, (WF_PROCESSOR)wg_gzrftag2c, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrftag2c.fixedflag ? (_temp642_a_gzrftag2c=a_gzrftag2c,&_temp642_a_gzrftag2c) : &a_gzrftag2c, _pw_gzrftag2ca.fixedflag ? (_temp643_pw_gzrftag2ca=pw_gzrftag2ca,&_temp643_pw_gzrftag2ca) : &pw_gzrftag2ca, _pw_gzrftag2c.fixedflag ? (_temp644_pw_gzrftag2c=pw_gzrftag2c,&_temp644_pw_gzrftag2c) : &pw_gzrftag2c,
                          _pw_gzrftag2cd.fixedflag ? (_temp645_pw_gzrftag2cd=pw_gzrftag2cd,&_temp645_pw_gzrftag2cd) : &pw_gzrftag2cd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrftag2c  = _ia_gzrftag2c.fixedflag ?     ((void)((int)((a_gzrftag2c/target)*MAX_PG_IAMP)), ia_gzrftag2c) : (int)((a_gzrftag2c/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp646_target=target,&_temp646_target) : &target, (WF_PROCESSOR)wg_gzrftag2rc, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp647_rtime=rtime,&_temp647_rtime) : &rtime, _ftime.fixedflag ? (_temp648_ftime=ftime,&_temp648_ftime) : &ftime, (WF_PROCESSOR)wg_gzrftag2rc, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrftag2rc.fixedflag ? (_temp649_a_gzrftag2rc=a_gzrftag2rc,&_temp649_a_gzrftag2rc) : &a_gzrftag2rc, _pw_gzrftag2rca.fixedflag ? (_temp650_pw_gzrftag2rca=pw_gzrftag2rca,&_temp650_pw_gzrftag2rca) : &pw_gzrftag2rca, _pw_gzrftag2rc.fixedflag ? (_temp651_pw_gzrftag2rc=pw_gzrftag2rc,&_temp651_pw_gzrftag2rc) : &pw_gzrftag2rc,
                          _pw_gzrftag2rcd.fixedflag ? (_temp652_pw_gzrftag2rcd=pw_gzrftag2rcd,&_temp652_pw_gzrftag2rcd) : &pw_gzrftag2rcd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrftag2rc  = _ia_gzrftag2rc.fixedflag ?     ((void)((int)((a_gzrftag2rc/target)*MAX_PG_IAMP)), ia_gzrftag2rc) : (int)((a_gzrftag2rc/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp653_target=target,&_temp653_target) : &target, (WF_PROCESSOR)wg_gxrftag2c, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp654_rtime=rtime,&_temp654_rtime) : &rtime, _ftime.fixedflag ? (_temp655_ftime=ftime,&_temp655_ftime) : &ftime, (WF_PROCESSOR)wg_gxrftag2c, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxrftag2c.fixedflag ? (_temp656_a_gxrftag2c=a_gxrftag2c,&_temp656_a_gxrftag2c) : &a_gxrftag2c, _pw_gxrftag2ca.fixedflag ? (_temp657_pw_gxrftag2ca=pw_gxrftag2ca,&_temp657_pw_gxrftag2ca) : &pw_gxrftag2ca, _pw_gxrftag2c.fixedflag ? (_temp658_pw_gxrftag2c=pw_gxrftag2c,&_temp658_pw_gxrftag2c) : &pw_gxrftag2c,
                          _pw_gxrftag2cd.fixedflag ? (_temp659_pw_gxrftag2cd=pw_gxrftag2cd,&_temp659_pw_gxrftag2cd) : &pw_gxrftag2cd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxrftag2c  = _ia_gxrftag2c.fixedflag ?     ((void)((int)((a_gxrftag2c/target)*MAX_PG_IAMP)), ia_gxrftag2c) : (int)((a_gxrftag2c/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp660_target=target,&_temp660_target) : &target, (WF_PROCESSOR)wg_gyrftag2c, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp661_rtime=rtime,&_temp661_rtime) : &rtime, _ftime.fixedflag ? (_temp662_ftime=ftime,&_temp662_ftime) : &ftime, (WF_PROCESSOR)wg_gyrftag2c, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gyrftag2c.fixedflag ? (_temp663_a_gyrftag2c=a_gyrftag2c,&_temp663_a_gyrftag2c) : &a_gyrftag2c, _pw_gyrftag2ca.fixedflag ? (_temp664_pw_gyrftag2ca=pw_gyrftag2ca,&_temp664_pw_gyrftag2ca) : &pw_gyrftag2ca, _pw_gyrftag2c.fixedflag ? (_temp665_pw_gyrftag2c=pw_gyrftag2c,&_temp665_pw_gyrftag2c) : &pw_gyrftag2c,
                          _pw_gyrftag2cd.fixedflag ? (_temp666_pw_gyrftag2cd=pw_gyrftag2cd,&_temp666_pw_gyrftag2cd) : &pw_gyrftag2cd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gyrftag2c  = _ia_gyrftag2c.fixedflag ?     ((void)((int)((a_gyrftag2c/target)*MAX_PG_IAMP)), ia_gyrftag2c) : (int)((a_gyrftag2c/target)*MAX_PG_IAMP);
    }


{
  float target;

  gettarget(_target.fixedflag ? (_temp667_target=target,&_temp667_target) : &target, (WF_PROCESSOR)wg_BS1rf, &loggrd);
  ia_BS1rf  = _ia_BS1rf.fixedflag ?     ((void)((int)((a_BS1rf/target)*MAX_PG_IAMP)), ia_BS1rf) : (int)((a_BS1rf/target)*MAX_PG_IAMP);
}

{
  float target;

  gettarget(_target.fixedflag ? (_temp668_target=target,&_temp668_target) : &target, (WF_PROCESSOR)wg_BS1rf_theta, &loggrd);
  ia_BS1rf_theta  = _ia_BS1rf_theta.fixedflag ?     ((void)((int)((a_BS1rf_theta/target)*MAX_PG_IAMP)), ia_BS1rf_theta) : (int)((a_BS1rf_theta/target)*MAX_PG_IAMP);
}

{
  float target;

  gettarget(_target.fixedflag ? (_temp669_target=target,&_temp669_target) : &target, (WF_PROCESSOR)wg_BS2rf, &loggrd);
  ia_BS2rf  = _ia_BS2rf.fixedflag ?     ((void)((int)((a_BS2rf/target)*MAX_PG_IAMP)), ia_BS2rf) : (int)((a_BS2rf/target)*MAX_PG_IAMP);
}

{
  float target;

  gettarget(_target.fixedflag ? (_temp670_target=target,&_temp670_target) : &target, (WF_PROCESSOR)wg_BS2rf_theta, &loggrd);
  ia_BS2rf_theta  = _ia_BS2rf_theta.fixedflag ?     ((void)((int)((a_BS2rf_theta/target)*MAX_PG_IAMP)), ia_BS2rf_theta) : (int)((a_BS2rf_theta/target)*MAX_PG_IAMP);
}

{
  float target;
  gettarget(_target.fixedflag ? (_temp671_target=target,&_temp671_target) : &target,(WF_PROCESSOR)wg_rf0,&loggrd);
  if ((wg_rf0==TYPRHO1)||(wg_rf0==TYPRHO2)
        ||(wg_rf0==TYPOMEGA)||(wg_rf0==TYPTHETA))
    {
      if (res_rf0 == 0)
        {
          res_rf0  = _res_rf0.fixedflag ?  ((void)(pw_rf0/(RF_UPDATE_TIME)), res_rf0) : pw_rf0/(RF_UPDATE_TIME);
        }
      ia_rf0  = _ia_rf0.fixedflag ?    ((void)((int)(a_rf0*MAX_PG_IAMP)), ia_rf0) : (int)(a_rf0*MAX_PG_IAMP);
    }    
  else
    {
      if (res_rf0 == 0)
        {
          res_rf0  = _res_rf0.fixedflag ?  ((void)(pw_rf0/(GRAD_UPDATE_TIME)), res_rf0) : pw_rf0/(GRAD_UPDATE_TIME);
        }
      ia_rf0  = _ia_rf0.fixedflag ?     ((void)((int)((a_rf0/target)*MAX_PG_IAMP)), ia_rf0) : (int)((a_rf0/target)*MAX_PG_IAMP);
    }    
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp672_target=target,&_temp672_target) : &target, (WF_PROCESSOR)wg_gz0, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp673_rtime=rtime,&_temp673_rtime) : &rtime, _ftime.fixedflag ? (_temp674_ftime=ftime,&_temp674_ftime) : &ftime, (WF_PROCESSOR)wg_gz0, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz0.fixedflag ? (_temp675_a_gz0=a_gz0,&_temp675_a_gz0) : &a_gz0, _pw_gz0a.fixedflag ? (_temp676_pw_gz0a=pw_gz0a,&_temp676_pw_gz0a) : &pw_gz0a, _pw_gz0.fixedflag ? (_temp677_pw_gz0=pw_gz0,&_temp677_pw_gz0) : &pw_gz0,
                          _pw_gz0d.fixedflag ? (_temp678_pw_gz0d=pw_gz0d,&_temp678_pw_gz0d) : &pw_gz0d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz0  = _ia_gz0.fixedflag ?     ((void)((int)((a_gz0/target)*MAX_PG_IAMP)), ia_gz0) : (int)((a_gz0/target)*MAX_PG_IAMP);
    }










{
  float target;
  gettarget(_target.fixedflag ? (_temp679_target=target,&_temp679_target) : &target,(WF_PROCESSOR)wg_rf1mps1,&ps1loggrd);
  if ((wg_rf1mps1==TYPRHO1)||(wg_rf1mps1==TYPRHO2)
        ||(wg_rf1mps1==TYPOMEGA)||(wg_rf1mps1==TYPTHETA))
    {
      if (res_rf1mps1 == 0)
        {
          res_rf1mps1  = _res_rf1mps1.fixedflag ?  ((void)(pw_rf1mps1/(RF_UPDATE_TIME)), res_rf1mps1) : pw_rf1mps1/(RF_UPDATE_TIME);
        }
      ia_rf1mps1  = _ia_rf1mps1.fixedflag ?    ((void)((int)(a_rf1mps1*MAX_PG_IAMP)), ia_rf1mps1) : (int)(a_rf1mps1*MAX_PG_IAMP);
    }    
  else
    {
      if (res_rf1mps1 == 0)
        {
          res_rf1mps1  = _res_rf1mps1.fixedflag ?  ((void)(pw_rf1mps1/(GRAD_UPDATE_TIME)), res_rf1mps1) : pw_rf1mps1/(GRAD_UPDATE_TIME);
        }
      ia_rf1mps1  = _ia_rf1mps1.fixedflag ?     ((void)((int)((a_rf1mps1/target)*MAX_PG_IAMP)), ia_rf1mps1) : (int)((a_rf1mps1/target)*MAX_PG_IAMP);
    }    
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp680_target=target,&_temp680_target) : &target, (WF_PROCESSOR)wg_gyrf1mps1, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp681_rtime=rtime,&_temp681_rtime) : &rtime, _ftime.fixedflag ? (_temp682_ftime=ftime,&_temp682_ftime) : &ftime, (WF_PROCESSOR)wg_gyrf1mps1, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gyrf1mps1.fixedflag ? (_temp683_a_gyrf1mps1=a_gyrf1mps1,&_temp683_a_gyrf1mps1) : &a_gyrf1mps1, _pw_gyrf1mps1a.fixedflag ? (_temp684_pw_gyrf1mps1a=pw_gyrf1mps1a,&_temp684_pw_gyrf1mps1a) : &pw_gyrf1mps1a, _pw_gyrf1mps1.fixedflag ? (_temp685_pw_gyrf1mps1=pw_gyrf1mps1,&_temp685_pw_gyrf1mps1) : &pw_gyrf1mps1,
                          _pw_gyrf1mps1d.fixedflag ? (_temp686_pw_gyrf1mps1d=pw_gyrf1mps1d,&_temp686_pw_gyrf1mps1d) : &pw_gyrf1mps1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gyrf1mps1  = _ia_gyrf1mps1.fixedflag ?     ((void)((int)((a_gyrf1mps1/target)*MAX_PG_IAMP)), ia_gyrf1mps1) : (int)((a_gyrf1mps1/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp687_target=target,&_temp687_target) : &target, (WF_PROCESSOR)wg_gy1mps1, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp688_rtime=rtime,&_temp688_rtime) : &rtime, _ftime.fixedflag ? (_temp689_ftime=ftime,&_temp689_ftime) : &ftime, (WF_PROCESSOR)wg_gy1mps1, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gy1mps1.fixedflag ? (_temp690_a_gy1mps1=a_gy1mps1,&_temp690_a_gy1mps1) : &a_gy1mps1, _pw_gy1mps1a.fixedflag ? (_temp691_pw_gy1mps1a=pw_gy1mps1a,&_temp691_pw_gy1mps1a) : &pw_gy1mps1a, _pw_gy1mps1.fixedflag ? (_temp692_pw_gy1mps1=pw_gy1mps1,&_temp692_pw_gy1mps1) : &pw_gy1mps1,
                          _pw_gy1mps1d.fixedflag ? (_temp693_pw_gy1mps1d=pw_gy1mps1d,&_temp693_pw_gy1mps1d) : &pw_gy1mps1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gy1mps1  = _ia_gy1mps1.fixedflag ?     ((void)((int)((a_gy1mps1/target)*MAX_PG_IAMP)), ia_gy1mps1) : (int)((a_gy1mps1/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp694_target=target,&_temp694_target) : &target, (WF_PROCESSOR)wg_gzrf1mps1, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp695_rtime=rtime,&_temp695_rtime) : &rtime, _ftime.fixedflag ? (_temp696_ftime=ftime,&_temp696_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf1mps1, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf1mps1.fixedflag ? (_temp697_a_gzrf1mps1=a_gzrf1mps1,&_temp697_a_gzrf1mps1) : &a_gzrf1mps1, _pw_gzrf1mps1a.fixedflag ? (_temp698_pw_gzrf1mps1a=pw_gzrf1mps1a,&_temp698_pw_gzrf1mps1a) : &pw_gzrf1mps1a, _pw_gzrf1mps1.fixedflag ? (_temp699_pw_gzrf1mps1=pw_gzrf1mps1,&_temp699_pw_gzrf1mps1) : &pw_gzrf1mps1,
                          _pw_gzrf1mps1d.fixedflag ? (_temp700_pw_gzrf1mps1d=pw_gzrf1mps1d,&_temp700_pw_gzrf1mps1d) : &pw_gzrf1mps1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf1mps1  = _ia_gzrf1mps1.fixedflag ?     ((void)((int)((a_gzrf1mps1/target)*MAX_PG_IAMP)), ia_gzrf1mps1) : (int)((a_gzrf1mps1/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp701_target=target,&_temp701_target) : &target, (WF_PROCESSOR)wg_gz1mps1, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp702_rtime=rtime,&_temp702_rtime) : &rtime, _ftime.fixedflag ? (_temp703_ftime=ftime,&_temp703_ftime) : &ftime, (WF_PROCESSOR)wg_gz1mps1, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz1mps1.fixedflag ? (_temp704_a_gz1mps1=a_gz1mps1,&_temp704_a_gz1mps1) : &a_gz1mps1, _pw_gz1mps1a.fixedflag ? (_temp705_pw_gz1mps1a=pw_gz1mps1a,&_temp705_pw_gz1mps1a) : &pw_gz1mps1a, _pw_gz1mps1.fixedflag ? (_temp706_pw_gz1mps1=pw_gz1mps1,&_temp706_pw_gz1mps1) : &pw_gz1mps1,
                          _pw_gz1mps1d.fixedflag ? (_temp707_pw_gz1mps1d=pw_gz1mps1d,&_temp707_pw_gz1mps1d) : &pw_gz1mps1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz1mps1  = _ia_gz1mps1.fixedflag ?     ((void)((int)((a_gz1mps1/target)*MAX_PG_IAMP)), ia_gz1mps1) : (int)((a_gz1mps1/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp708_target=target,&_temp708_target) : &target, (WF_PROCESSOR)wg_gx1mps1, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp709_rtime=rtime,&_temp709_rtime) : &rtime, _ftime.fixedflag ? (_temp710_ftime=ftime,&_temp710_ftime) : &ftime, (WF_PROCESSOR)wg_gx1mps1, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx1mps1.fixedflag ? (_temp711_a_gx1mps1=a_gx1mps1,&_temp711_a_gx1mps1) : &a_gx1mps1, _pw_gx1mps1a.fixedflag ? (_temp712_pw_gx1mps1a=pw_gx1mps1a,&_temp712_pw_gx1mps1a) : &pw_gx1mps1a, _pw_gx1mps1.fixedflag ? (_temp713_pw_gx1mps1=pw_gx1mps1,&_temp713_pw_gx1mps1) : &pw_gx1mps1,
                          _pw_gx1mps1d.fixedflag ? (_temp714_pw_gx1mps1d=pw_gx1mps1d,&_temp714_pw_gx1mps1d) : &pw_gx1mps1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx1mps1  = _ia_gx1mps1.fixedflag ?     ((void)((int)((a_gx1mps1/target)*MAX_PG_IAMP)), ia_gx1mps1) : (int)((a_gx1mps1/target)*MAX_PG_IAMP);
    }


    if (ampslice(_a_gzrf2mps1.fixedflag ? (_temp715_a_gzrf2mps1=a_gzrf2mps1,&_temp715_a_gzrf2mps1) : &a_gzrf2mps1,(LONG)(4000000*cyc_rf2mps1/
        pw_rf2mps1),
        (float)thk_rf2mps1,(float)gscale_rf2mps1,
        (int)TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf2mps1a.fixedflag ? (_temp716_pw_gzrf2mps1a=pw_gzrf2mps1a,&_temp716_pw_gzrf2mps1a) : &pw_gzrf2mps1a,a_gzrf2mps1,ps1loggrd.tz,
                ps1loggrd.zrt,TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf2mps1d.fixedflag ? (_temp717_pw_gzrf2mps1d=pw_gzrf2mps1d,&_temp717_pw_gzrf2mps1d) : &pw_gzrf2mps1d,a_gzrf2mps1,ps1loggrd.tz,
                ps1loggrd.zft,TYPNDEF)== FAILURE)
    {
        return FAILURE;
    }

    ia_gzrf2mps1  = _ia_gzrf2mps1.fixedflag ?    ((void)((int)(a_gzrf2mps1*MAX_PG_IAMP/ps1loggrd.tz)), ia_gzrf2mps1) : (int)(a_gzrf2mps1*MAX_PG_IAMP/ps1loggrd.tz);

    ia_rf2mps1  = _ia_rf2mps1.fixedflag ?    ((void)((int)(a_rf2mps1*MAX_PG_IAMP)), ia_rf2mps1) : (int)(a_rf2mps1*MAX_PG_IAMP);
    if (res_rf2mps1 == 0)
    {
        res_rf2mps1  = _res_rf2mps1.fixedflag ?  ((void)(pw_rf2mps1/(RF_UPDATE_TIME)), res_rf2mps1) : pw_rf2mps1/(RF_UPDATE_TIME);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp718_target=target,&_temp718_target) : &target, (WF_PROCESSOR)wg_gzrf2lmps1, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp719_rtime=rtime,&_temp719_rtime) : &rtime, _ftime.fixedflag ? (_temp720_ftime=ftime,&_temp720_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf2lmps1, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf2lmps1.fixedflag ? (_temp721_a_gzrf2lmps1=a_gzrf2lmps1,&_temp721_a_gzrf2lmps1) : &a_gzrf2lmps1, _pw_gzrf2lmps1a.fixedflag ? (_temp722_pw_gzrf2lmps1a=pw_gzrf2lmps1a,&_temp722_pw_gzrf2lmps1a) : &pw_gzrf2lmps1a, _pw_gzrf2lmps1.fixedflag ? (_temp723_pw_gzrf2lmps1=pw_gzrf2lmps1,&_temp723_pw_gzrf2lmps1) : &pw_gzrf2lmps1,
                          _pw_gzrf2lmps1d.fixedflag ? (_temp724_pw_gzrf2lmps1d=pw_gzrf2lmps1d,&_temp724_pw_gzrf2lmps1d) : &pw_gzrf2lmps1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf2lmps1  = _ia_gzrf2lmps1.fixedflag ?     ((void)((int)((a_gzrf2lmps1/target)*MAX_PG_IAMP)), ia_gzrf2lmps1) : (int)((a_gzrf2lmps1/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp725_target=target,&_temp725_target) : &target, (WF_PROCESSOR)wg_gzrf2rmps1, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp726_rtime=rtime,&_temp726_rtime) : &rtime, _ftime.fixedflag ? (_temp727_ftime=ftime,&_temp727_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf2rmps1, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf2rmps1.fixedflag ? (_temp728_a_gzrf2rmps1=a_gzrf2rmps1,&_temp728_a_gzrf2rmps1) : &a_gzrf2rmps1, _pw_gzrf2rmps1a.fixedflag ? (_temp729_pw_gzrf2rmps1a=pw_gzrf2rmps1a,&_temp729_pw_gzrf2rmps1a) : &pw_gzrf2rmps1a, _pw_gzrf2rmps1.fixedflag ? (_temp730_pw_gzrf2rmps1=pw_gzrf2rmps1,&_temp730_pw_gzrf2rmps1) : &pw_gzrf2rmps1,
                          _pw_gzrf2rmps1d.fixedflag ? (_temp731_pw_gzrf2rmps1d=pw_gzrf2rmps1d,&_temp731_pw_gzrf2rmps1d) : &pw_gzrf2rmps1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf2rmps1  = _ia_gzrf2rmps1.fixedflag ?     ((void)((int)((a_gzrf2rmps1/target)*MAX_PG_IAMP)), ia_gzrf2rmps1) : (int)((a_gzrf2rmps1/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp732_target=target,&_temp732_target) : &target, (WF_PROCESSOR)wg_gxwmps1, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp733_rtime=rtime,&_temp733_rtime) : &rtime, _ftime.fixedflag ? (_temp734_ftime=ftime,&_temp734_ftime) : &ftime, (WF_PROCESSOR)wg_gxwmps1, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxwmps1.fixedflag ? (_temp735_a_gxwmps1=a_gxwmps1,&_temp735_a_gxwmps1) : &a_gxwmps1, _pw_gxwmps1a.fixedflag ? (_temp736_pw_gxwmps1a=pw_gxwmps1a,&_temp736_pw_gxwmps1a) : &pw_gxwmps1a, _pw_gxwmps1.fixedflag ? (_temp737_pw_gxwmps1=pw_gxwmps1,&_temp737_pw_gxwmps1) : &pw_gxwmps1,
                          _pw_gxwmps1d.fixedflag ? (_temp738_pw_gxwmps1d=pw_gxwmps1d,&_temp738_pw_gxwmps1d) : &pw_gxwmps1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxwmps1  = _ia_gxwmps1.fixedflag ?     ((void)((int)((a_gxwmps1/target)*MAX_PG_IAMP)), ia_gxwmps1) : (int)((a_gxwmps1/target)*MAX_PG_IAMP);
    }




    if (ampslice(_a_gzrf1cfl.fixedflag ? (_temp739_a_gzrf1cfl=a_gzrf1cfl,&_temp739_a_gzrf1cfl) : &a_gzrf1cfl,(LONG)(4000000*cyc_rf1cfl/
        pw_rf1cfl),
        (float)thk_rf1cfl,(float)gscale_rf1cfl,
        (int)TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf1cfla.fixedflag ? (_temp740_pw_gzrf1cfla=pw_gzrf1cfla,&_temp740_pw_gzrf1cfla) : &pw_gzrf1cfla,a_gzrf1cfl,cflloggrd.tz,
                cflloggrd.zrt,TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf1cfld.fixedflag ? (_temp741_pw_gzrf1cfld=pw_gzrf1cfld,&_temp741_pw_gzrf1cfld) : &pw_gzrf1cfld,a_gzrf1cfl,cflloggrd.tz,
                cflloggrd.zft,TYPNDEF)== FAILURE)
    {
        return FAILURE;
    }

    ia_gzrf1cfl  = _ia_gzrf1cfl.fixedflag ?    ((void)((int)(a_gzrf1cfl*MAX_PG_IAMP/cflloggrd.tz)), ia_gzrf1cfl) : (int)(a_gzrf1cfl*MAX_PG_IAMP/cflloggrd.tz);

    ia_rf1cfl  = _ia_rf1cfl.fixedflag ?    ((void)((int)(a_rf1cfl*MAX_PG_IAMP)), ia_rf1cfl) : (int)(a_rf1cfl*MAX_PG_IAMP);
    if (res_rf1cfl == 0)
    {
        res_rf1cfl  = _res_rf1cfl.fixedflag ?  ((void)(pw_rf1cfl/(RF_UPDATE_TIME)), res_rf1cfl) : pw_rf1cfl/(RF_UPDATE_TIME);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp742_target=target,&_temp742_target) : &target, (WF_PROCESSOR)wg_gz1cfl, &cflloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp743_rtime=rtime,&_temp743_rtime) : &rtime, _ftime.fixedflag ? (_temp744_ftime=ftime,&_temp744_ftime) : &ftime, (WF_PROCESSOR)wg_gz1cfl, &cflloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz1cfl.fixedflag ? (_temp745_a_gz1cfl=a_gz1cfl,&_temp745_a_gz1cfl) : &a_gz1cfl, _pw_gz1cfla.fixedflag ? (_temp746_pw_gz1cfla=pw_gz1cfla,&_temp746_pw_gz1cfla) : &pw_gz1cfla, _pw_gz1cfl.fixedflag ? (_temp747_pw_gz1cfl=pw_gz1cfl,&_temp747_pw_gz1cfl) : &pw_gz1cfl,
                          _pw_gz1cfld.fixedflag ? (_temp748_pw_gz1cfld=pw_gz1cfld,&_temp748_pw_gz1cfld) : &pw_gz1cfld) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz1cfl  = _ia_gz1cfl.fixedflag ?     ((void)((int)((a_gz1cfl/target)*MAX_PG_IAMP)), ia_gz1cfl) : (int)((a_gz1cfl/target)*MAX_PG_IAMP);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp749_target=target,&_temp749_target) : &target, (WF_PROCESSOR)wg_gykcfl, &cflloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp750_rtime=rtime,&_temp750_rtime) : &rtime, _ftime.fixedflag ? (_temp751_ftime=ftime,&_temp751_ftime) : &ftime, (WF_PROCESSOR)wg_gykcfl, &cflloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gykcfl.fixedflag ? (_temp752_a_gykcfl=a_gykcfl,&_temp752_a_gykcfl) : &a_gykcfl, _pw_gykcfla.fixedflag ? (_temp753_pw_gykcfla=pw_gykcfla,&_temp753_pw_gykcfla) : &pw_gykcfla, _pw_gykcfl.fixedflag ? (_temp754_pw_gykcfl=pw_gykcfl,&_temp754_pw_gykcfl) : &pw_gykcfl,
                          _pw_gykcfld.fixedflag ? (_temp755_pw_gykcfld=pw_gykcfld,&_temp755_pw_gykcfld) : &pw_gykcfld) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gykcfl  = _ia_gykcfl.fixedflag ?     ((void)((int)((a_gykcfl/target)*MAX_PG_IAMP)), ia_gykcfl) : (int)((a_gykcfl/target)*MAX_PG_IAMP);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp756_target=target,&_temp756_target) : &target, (WF_PROCESSOR)wg_gxkrcvn, &rcvnloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp757_rtime=rtime,&_temp757_rtime) : &rtime, _ftime.fixedflag ? (_temp758_ftime=ftime,&_temp758_ftime) : &ftime, (WF_PROCESSOR)wg_gxkrcvn, &rcvnloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxkrcvn.fixedflag ? (_temp759_a_gxkrcvn=a_gxkrcvn,&_temp759_a_gxkrcvn) : &a_gxkrcvn, _pw_gxkrcvna.fixedflag ? (_temp760_pw_gxkrcvna=pw_gxkrcvna,&_temp760_pw_gxkrcvna) : &pw_gxkrcvna, _pw_gxkrcvn.fixedflag ? (_temp761_pw_gxkrcvn=pw_gxkrcvn,&_temp761_pw_gxkrcvn) : &pw_gxkrcvn,
                          _pw_gxkrcvnd.fixedflag ? (_temp762_pw_gxkrcvnd=pw_gxkrcvnd,&_temp762_pw_gxkrcvnd) : &pw_gxkrcvnd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxkrcvn  = _ia_gxkrcvn.fixedflag ?     ((void)((int)((a_gxkrcvn/target)*MAX_PG_IAMP)), ia_gxkrcvn) : (int)((a_gxkrcvn/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp763_target=target,&_temp763_target) : &target, (WF_PROCESSOR)wg_gykrcvn, &rcvnloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp764_rtime=rtime,&_temp764_rtime) : &rtime, _ftime.fixedflag ? (_temp765_ftime=ftime,&_temp765_ftime) : &ftime, (WF_PROCESSOR)wg_gykrcvn, &rcvnloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gykrcvn.fixedflag ? (_temp766_a_gykrcvn=a_gykrcvn,&_temp766_a_gykrcvn) : &a_gykrcvn, _pw_gykrcvna.fixedflag ? (_temp767_pw_gykrcvna=pw_gykrcvna,&_temp767_pw_gykrcvna) : &pw_gykrcvna, _pw_gykrcvn.fixedflag ? (_temp768_pw_gykrcvn=pw_gykrcvn,&_temp768_pw_gykrcvn) : &pw_gykrcvn,
                          _pw_gykrcvnd.fixedflag ? (_temp769_pw_gykrcvnd=pw_gykrcvnd,&_temp769_pw_gykrcvnd) : &pw_gykrcvnd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gykrcvn  = _ia_gykrcvn.fixedflag ?     ((void)((int)((a_gykrcvn/target)*MAX_PG_IAMP)), ia_gykrcvn) : (int)((a_gykrcvn/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp770_target=target,&_temp770_target) : &target, (WF_PROCESSOR)wg_gzkrcvn, &rcvnloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp771_rtime=rtime,&_temp771_rtime) : &rtime, _ftime.fixedflag ? (_temp772_ftime=ftime,&_temp772_ftime) : &ftime, (WF_PROCESSOR)wg_gzkrcvn, &rcvnloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzkrcvn.fixedflag ? (_temp773_a_gzkrcvn=a_gzkrcvn,&_temp773_a_gzkrcvn) : &a_gzkrcvn, _pw_gzkrcvna.fixedflag ? (_temp774_pw_gzkrcvna=pw_gzkrcvna,&_temp774_pw_gzkrcvna) : &pw_gzkrcvna, _pw_gzkrcvn.fixedflag ? (_temp775_pw_gzkrcvn=pw_gzkrcvn,&_temp775_pw_gzkrcvn) : &pw_gzkrcvn,
                          _pw_gzkrcvnd.fixedflag ? (_temp776_pw_gzkrcvnd=pw_gzkrcvnd,&_temp776_pw_gzkrcvnd) : &pw_gzkrcvnd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzkrcvn  = _ia_gzkrcvn.fixedflag ?     ((void)((int)((a_gzkrcvn/target)*MAX_PG_IAMP)), ia_gzkrcvn) : (int)((a_gzkrcvn/target)*MAX_PG_IAMP);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp777_target=target,&_temp777_target) : &target, (WF_PROCESSOR)wg_gxk2rcvn, &rcvnloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp778_rtime=rtime,&_temp778_rtime) : &rtime, _ftime.fixedflag ? (_temp779_ftime=ftime,&_temp779_ftime) : &ftime, (WF_PROCESSOR)wg_gxk2rcvn, &rcvnloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxk2rcvn.fixedflag ? (_temp780_a_gxk2rcvn=a_gxk2rcvn,&_temp780_a_gxk2rcvn) : &a_gxk2rcvn, _pw_gxk2rcvna.fixedflag ? (_temp781_pw_gxk2rcvna=pw_gxk2rcvna,&_temp781_pw_gxk2rcvna) : &pw_gxk2rcvna, _pw_gxk2rcvn.fixedflag ? (_temp782_pw_gxk2rcvn=pw_gxk2rcvn,&_temp782_pw_gxk2rcvn) : &pw_gxk2rcvn,
                          _pw_gxk2rcvnd.fixedflag ? (_temp783_pw_gxk2rcvnd=pw_gxk2rcvnd,&_temp783_pw_gxk2rcvnd) : &pw_gxk2rcvnd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxk2rcvn  = _ia_gxk2rcvn.fixedflag ?     ((void)((int)((a_gxk2rcvn/target)*MAX_PG_IAMP)), ia_gxk2rcvn) : (int)((a_gxk2rcvn/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp784_target=target,&_temp784_target) : &target, (WF_PROCESSOR)wg_gyk2rcvn, &rcvnloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp785_rtime=rtime,&_temp785_rtime) : &rtime, _ftime.fixedflag ? (_temp786_ftime=ftime,&_temp786_ftime) : &ftime, (WF_PROCESSOR)wg_gyk2rcvn, &rcvnloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gyk2rcvn.fixedflag ? (_temp787_a_gyk2rcvn=a_gyk2rcvn,&_temp787_a_gyk2rcvn) : &a_gyk2rcvn, _pw_gyk2rcvna.fixedflag ? (_temp788_pw_gyk2rcvna=pw_gyk2rcvna,&_temp788_pw_gyk2rcvna) : &pw_gyk2rcvna, _pw_gyk2rcvn.fixedflag ? (_temp789_pw_gyk2rcvn=pw_gyk2rcvn,&_temp789_pw_gyk2rcvn) : &pw_gyk2rcvn,
                          _pw_gyk2rcvnd.fixedflag ? (_temp790_pw_gyk2rcvnd=pw_gyk2rcvnd,&_temp790_pw_gyk2rcvnd) : &pw_gyk2rcvnd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gyk2rcvn  = _ia_gyk2rcvn.fixedflag ?     ((void)((int)((a_gyk2rcvn/target)*MAX_PG_IAMP)), ia_gyk2rcvn) : (int)((a_gyk2rcvn/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp791_target=target,&_temp791_target) : &target, (WF_PROCESSOR)wg_gzk2rcvn, &rcvnloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp792_rtime=rtime,&_temp792_rtime) : &rtime, _ftime.fixedflag ? (_temp793_ftime=ftime,&_temp793_ftime) : &ftime, (WF_PROCESSOR)wg_gzk2rcvn, &rcvnloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzk2rcvn.fixedflag ? (_temp794_a_gzk2rcvn=a_gzk2rcvn,&_temp794_a_gzk2rcvn) : &a_gzk2rcvn, _pw_gzk2rcvna.fixedflag ? (_temp795_pw_gzk2rcvna=pw_gzk2rcvna,&_temp795_pw_gzk2rcvna) : &pw_gzk2rcvna, _pw_gzk2rcvn.fixedflag ? (_temp796_pw_gzk2rcvn=pw_gzk2rcvn,&_temp796_pw_gzk2rcvn) : &pw_gzk2rcvn,
                          _pw_gzk2rcvnd.fixedflag ? (_temp797_pw_gzk2rcvnd=pw_gzk2rcvnd,&_temp797_pw_gzk2rcvnd) : &pw_gzk2rcvnd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzk2rcvn  = _ia_gzk2rcvn.fixedflag ?     ((void)((int)((a_gzk2rcvn/target)*MAX_PG_IAMP)), ia_gzk2rcvn) : (int)((a_gzk2rcvn/target)*MAX_PG_IAMP);
    }



  ia_rcvrbl  = _ia_rcvrbl.fixedflag ?  ((void)(0), ia_rcvrbl) : 0;


  ia_rcvrbl2  = _ia_rcvrbl2.fixedflag ?  ((void)(0), ia_rcvrbl2) : 0;


  if (ampslice(_a_gzrf0cfh.fixedflag ? (_temp798_a_gzrf0cfh=a_gzrf0cfh,&_temp798_a_gzrf0cfh) : &a_gzrf0cfh,(LONG)(4000000*cyc_rf0cfh/
					 pw_rf0cfh),
	       (float)thk_rf0cfh,(float)gscale_rf0cfh,
	       (int)TYPNDEF) == FAILURE) return FAILURE;
  if (optramp(_pw_gzrf0cfha.fixedflag ? (_temp799_pw_gzrf0cfha=pw_gzrf0cfha,&_temp799_pw_gzrf0cfha) : &pw_gzrf0cfha,a_gzrf0cfh,cfhloggrd.tz,
	      cfhloggrd.zrt,(int)TYPNDEF) 
      == FAILURE) return FAILURE;
  if (optramp(_pw_gzrf0cfhd.fixedflag ? (_temp800_pw_gzrf0cfhd=pw_gzrf0cfhd,&_temp800_pw_gzrf0cfhd) : &pw_gzrf0cfhd,a_gzrf0cfh,cfhloggrd.tz,
	      cfhloggrd.zft,(int)TYPNDEF) 
      == FAILURE) return FAILURE;
 
  ia_gzrf0cfh  = _ia_gzrf0cfh.fixedflag ?    ((void)((int)(a_gzrf0cfh*MAX_PG_IAMP/cfhloggrd.tz)), ia_gzrf0cfh) : (int)(a_gzrf0cfh*MAX_PG_IAMP/cfhloggrd.tz);
  ia_rf0cfh  = _ia_rf0cfh.fixedflag ?    ((void)((int)(a_rf0cfh*MAX_PG_IAMP)), ia_rf0cfh) : (int)(a_rf0cfh*MAX_PG_IAMP);


    {
        ia_omegarf0cfh    = _ia_omegarf0cfh.fixedflag ?    ((void)((int)(a_omegarf0cfh*MAX_PG_IAMP)), ia_omegarf0cfh) : (int)(a_omegarf0cfh*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp801_target=target,&_temp801_target) : &target, (WF_PROCESSOR)wg_gyrf0kcfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp802_rtime=rtime,&_temp802_rtime) : &rtime, _ftime.fixedflag ? (_temp803_ftime=ftime,&_temp803_ftime) : &ftime, (WF_PROCESSOR)wg_gyrf0kcfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gyrf0kcfh.fixedflag ? (_temp804_a_gyrf0kcfh=a_gyrf0kcfh,&_temp804_a_gyrf0kcfh) : &a_gyrf0kcfh, _pw_gyrf0kcfha.fixedflag ? (_temp805_pw_gyrf0kcfha=pw_gyrf0kcfha,&_temp805_pw_gyrf0kcfha) : &pw_gyrf0kcfha, _pw_gyrf0kcfh.fixedflag ? (_temp806_pw_gyrf0kcfh=pw_gyrf0kcfh,&_temp806_pw_gyrf0kcfh) : &pw_gyrf0kcfh,
                          _pw_gyrf0kcfhd.fixedflag ? (_temp807_pw_gyrf0kcfhd=pw_gyrf0kcfhd,&_temp807_pw_gyrf0kcfhd) : &pw_gyrf0kcfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gyrf0kcfh  = _ia_gyrf0kcfh.fixedflag ?     ((void)((int)((a_gyrf0kcfh/target)*MAX_PG_IAMP)), ia_gyrf0kcfh) : (int)((a_gyrf0kcfh/target)*MAX_PG_IAMP);
    }







    if (ampslice(_a_gzrf1cfh.fixedflag ? (_temp808_a_gzrf1cfh=a_gzrf1cfh,&_temp808_a_gzrf1cfh) : &a_gzrf1cfh,(LONG)(4000000*cyc_rf1cfh/
        pw_rf1cfh),
        (float)thk_rf1cfh,(float)gscale_rf1cfh,
        (int)TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf1cfha.fixedflag ? (_temp809_pw_gzrf1cfha=pw_gzrf1cfha,&_temp809_pw_gzrf1cfha) : &pw_gzrf1cfha,a_gzrf1cfh,cfhloggrd.tz,
                cfhloggrd.zrt,TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf1cfhd.fixedflag ? (_temp810_pw_gzrf1cfhd=pw_gzrf1cfhd,&_temp810_pw_gzrf1cfhd) : &pw_gzrf1cfhd,a_gzrf1cfh,cfhloggrd.tz,
                cfhloggrd.zft,TYPNDEF)== FAILURE)
    {
        return FAILURE;
    }

    ia_gzrf1cfh  = _ia_gzrf1cfh.fixedflag ?    ((void)((int)(a_gzrf1cfh*MAX_PG_IAMP/cfhloggrd.tz)), ia_gzrf1cfh) : (int)(a_gzrf1cfh*MAX_PG_IAMP/cfhloggrd.tz);

    ia_rf1cfh  = _ia_rf1cfh.fixedflag ?    ((void)((int)(a_rf1cfh*MAX_PG_IAMP)), ia_rf1cfh) : (int)(a_rf1cfh*MAX_PG_IAMP);
    if (res_rf1cfh == 0)
    {
        res_rf1cfh  = _res_rf1cfh.fixedflag ?  ((void)(pw_rf1cfh/(RF_UPDATE_TIME)), res_rf1cfh) : pw_rf1cfh/(RF_UPDATE_TIME);
    }


{
  float target;
  gettarget(_target.fixedflag ? (_temp811_target=target,&_temp811_target) : &target,(WF_PROCESSOR)wg_rf2cfh,&cfhloggrd);
  if ((wg_rf2cfh==TYPRHO1)||(wg_rf2cfh==TYPRHO2)
        ||(wg_rf2cfh==TYPOMEGA)||(wg_rf2cfh==TYPTHETA))
    {
      if (res_rf2cfh == 0)
        {
          res_rf2cfh  = _res_rf2cfh.fixedflag ?  ((void)(pw_rf2cfh/(RF_UPDATE_TIME)), res_rf2cfh) : pw_rf2cfh/(RF_UPDATE_TIME);
        }
      ia_rf2cfh  = _ia_rf2cfh.fixedflag ?    ((void)((int)(a_rf2cfh*MAX_PG_IAMP)), ia_rf2cfh) : (int)(a_rf2cfh*MAX_PG_IAMP);
    }    
  else
    {
      if (res_rf2cfh == 0)
        {
          res_rf2cfh  = _res_rf2cfh.fixedflag ?  ((void)(pw_rf2cfh/(GRAD_UPDATE_TIME)), res_rf2cfh) : pw_rf2cfh/(GRAD_UPDATE_TIME);
        }
      ia_rf2cfh  = _ia_rf2cfh.fixedflag ?     ((void)((int)((a_rf2cfh/target)*MAX_PG_IAMP)), ia_rf2cfh) : (int)((a_rf2cfh/target)*MAX_PG_IAMP);
    }    
}

{
  float target;
  gettarget(_target.fixedflag ? (_temp812_target=target,&_temp812_target) : &target,(WF_PROCESSOR)wg_rf3cfh,&cfhloggrd);
  if ((wg_rf3cfh==TYPRHO1)||(wg_rf3cfh==TYPRHO2)
        ||(wg_rf3cfh==TYPOMEGA)||(wg_rf3cfh==TYPTHETA))
    {
      if (res_rf3cfh == 0)
        {
          res_rf3cfh  = _res_rf3cfh.fixedflag ?  ((void)(pw_rf3cfh/(RF_UPDATE_TIME)), res_rf3cfh) : pw_rf3cfh/(RF_UPDATE_TIME);
        }
      ia_rf3cfh  = _ia_rf3cfh.fixedflag ?    ((void)((int)(a_rf3cfh*MAX_PG_IAMP)), ia_rf3cfh) : (int)(a_rf3cfh*MAX_PG_IAMP);
    }    
  else
    {
      if (res_rf3cfh == 0)
        {
          res_rf3cfh  = _res_rf3cfh.fixedflag ?  ((void)(pw_rf3cfh/(GRAD_UPDATE_TIME)), res_rf3cfh) : pw_rf3cfh/(GRAD_UPDATE_TIME);
        }
      ia_rf3cfh  = _ia_rf3cfh.fixedflag ?     ((void)((int)((a_rf3cfh/target)*MAX_PG_IAMP)), ia_rf3cfh) : (int)((a_rf3cfh/target)*MAX_PG_IAMP);
    }    
}

{
  float target;
  gettarget(_target.fixedflag ? (_temp813_target=target,&_temp813_target) : &target,(WF_PROCESSOR)wg_rf4cfh,&loggrd);
  if ((wg_rf4cfh==TYPRHO1)||(wg_rf4cfh==TYPRHO2)
        ||(wg_rf4cfh==TYPOMEGA)||(wg_rf4cfh==TYPTHETA))
    {
      if (res_rf4cfh == 0)
        {
          res_rf4cfh  = _res_rf4cfh.fixedflag ?  ((void)(pw_rf4cfh/(RF_UPDATE_TIME)), res_rf4cfh) : pw_rf4cfh/(RF_UPDATE_TIME);
        }
      ia_rf4cfh  = _ia_rf4cfh.fixedflag ?    ((void)((int)(a_rf4cfh*MAX_PG_IAMP)), ia_rf4cfh) : (int)(a_rf4cfh*MAX_PG_IAMP);
    }    
  else
    {
      if (res_rf4cfh == 0)
        {
          res_rf4cfh  = _res_rf4cfh.fixedflag ?  ((void)(pw_rf4cfh/(GRAD_UPDATE_TIME)), res_rf4cfh) : pw_rf4cfh/(GRAD_UPDATE_TIME);
        }
      ia_rf4cfh  = _ia_rf4cfh.fixedflag ?     ((void)((int)((a_rf4cfh/target)*MAX_PG_IAMP)), ia_rf4cfh) : (int)((a_rf4cfh/target)*MAX_PG_IAMP);
    }    
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp814_target=target,&_temp814_target) : &target, (WF_PROCESSOR)wg_gxrf2cfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp815_rtime=rtime,&_temp815_rtime) : &rtime, _ftime.fixedflag ? (_temp816_ftime=ftime,&_temp816_ftime) : &ftime, (WF_PROCESSOR)wg_gxrf2cfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxrf2cfh.fixedflag ? (_temp817_a_gxrf2cfh=a_gxrf2cfh,&_temp817_a_gxrf2cfh) : &a_gxrf2cfh, _pw_gxrf2cfha.fixedflag ? (_temp818_pw_gxrf2cfha=pw_gxrf2cfha,&_temp818_pw_gxrf2cfha) : &pw_gxrf2cfha, _pw_gxrf2cfh.fixedflag ? (_temp819_pw_gxrf2cfh=pw_gxrf2cfh,&_temp819_pw_gxrf2cfh) : &pw_gxrf2cfh,
                          _pw_gxrf2cfhd.fixedflag ? (_temp820_pw_gxrf2cfhd=pw_gxrf2cfhd,&_temp820_pw_gxrf2cfhd) : &pw_gxrf2cfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxrf2cfh  = _ia_gxrf2cfh.fixedflag ?     ((void)((int)((a_gxrf2cfh/target)*MAX_PG_IAMP)), ia_gxrf2cfh) : (int)((a_gxrf2cfh/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp821_target=target,&_temp821_target) : &target, (WF_PROCESSOR)wg_gyrf2cfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp822_rtime=rtime,&_temp822_rtime) : &rtime, _ftime.fixedflag ? (_temp823_ftime=ftime,&_temp823_ftime) : &ftime, (WF_PROCESSOR)wg_gyrf2cfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gyrf2cfh.fixedflag ? (_temp824_a_gyrf2cfh=a_gyrf2cfh,&_temp824_a_gyrf2cfh) : &a_gyrf2cfh, _pw_gyrf2cfha.fixedflag ? (_temp825_pw_gyrf2cfha=pw_gyrf2cfha,&_temp825_pw_gyrf2cfha) : &pw_gyrf2cfha, _pw_gyrf2cfh.fixedflag ? (_temp826_pw_gyrf2cfh=pw_gyrf2cfh,&_temp826_pw_gyrf2cfh) : &pw_gyrf2cfh,
                          _pw_gyrf2cfhd.fixedflag ? (_temp827_pw_gyrf2cfhd=pw_gyrf2cfhd,&_temp827_pw_gyrf2cfhd) : &pw_gyrf2cfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gyrf2cfh  = _ia_gyrf2cfh.fixedflag ?     ((void)((int)((a_gyrf2cfh/target)*MAX_PG_IAMP)), ia_gyrf2cfh) : (int)((a_gyrf2cfh/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp828_target=target,&_temp828_target) : &target, (WF_PROCESSOR)wg_gzrf2lcfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp829_rtime=rtime,&_temp829_rtime) : &rtime, _ftime.fixedflag ? (_temp830_ftime=ftime,&_temp830_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf2lcfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf2lcfh.fixedflag ? (_temp831_a_gzrf2lcfh=a_gzrf2lcfh,&_temp831_a_gzrf2lcfh) : &a_gzrf2lcfh, _pw_gzrf2lcfha.fixedflag ? (_temp832_pw_gzrf2lcfha=pw_gzrf2lcfha,&_temp832_pw_gzrf2lcfha) : &pw_gzrf2lcfha, _pw_gzrf2lcfh.fixedflag ? (_temp833_pw_gzrf2lcfh=pw_gzrf2lcfh,&_temp833_pw_gzrf2lcfh) : &pw_gzrf2lcfh,
                          _pw_gzrf2lcfhd.fixedflag ? (_temp834_pw_gzrf2lcfhd=pw_gzrf2lcfhd,&_temp834_pw_gzrf2lcfhd) : &pw_gzrf2lcfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf2lcfh  = _ia_gzrf2lcfh.fixedflag ?     ((void)((int)((a_gzrf2lcfh/target)*MAX_PG_IAMP)), ia_gzrf2lcfh) : (int)((a_gzrf2lcfh/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp835_target=target,&_temp835_target) : &target, (WF_PROCESSOR)wg_gzrf2rcfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp836_rtime=rtime,&_temp836_rtime) : &rtime, _ftime.fixedflag ? (_temp837_ftime=ftime,&_temp837_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf2rcfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf2rcfh.fixedflag ? (_temp838_a_gzrf2rcfh=a_gzrf2rcfh,&_temp838_a_gzrf2rcfh) : &a_gzrf2rcfh, _pw_gzrf2rcfha.fixedflag ? (_temp839_pw_gzrf2rcfha=pw_gzrf2rcfha,&_temp839_pw_gzrf2rcfha) : &pw_gzrf2rcfha, _pw_gzrf2rcfh.fixedflag ? (_temp840_pw_gzrf2rcfh=pw_gzrf2rcfh,&_temp840_pw_gzrf2rcfh) : &pw_gzrf2rcfh,
                          _pw_gzrf2rcfhd.fixedflag ? (_temp841_pw_gzrf2rcfhd=pw_gzrf2rcfhd,&_temp841_pw_gzrf2rcfhd) : &pw_gzrf2rcfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf2rcfh  = _ia_gzrf2rcfh.fixedflag ?     ((void)((int)((a_gzrf2rcfh/target)*MAX_PG_IAMP)), ia_gzrf2rcfh) : (int)((a_gzrf2rcfh/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp842_target=target,&_temp842_target) : &target, (WF_PROCESSOR)wg_gyrf3cfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp843_rtime=rtime,&_temp843_rtime) : &rtime, _ftime.fixedflag ? (_temp844_ftime=ftime,&_temp844_ftime) : &ftime, (WF_PROCESSOR)wg_gyrf3cfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gyrf3cfh.fixedflag ? (_temp845_a_gyrf3cfh=a_gyrf3cfh,&_temp845_a_gyrf3cfh) : &a_gyrf3cfh, _pw_gyrf3cfha.fixedflag ? (_temp846_pw_gyrf3cfha=pw_gyrf3cfha,&_temp846_pw_gyrf3cfha) : &pw_gyrf3cfha, _pw_gyrf3cfh.fixedflag ? (_temp847_pw_gyrf3cfh=pw_gyrf3cfh,&_temp847_pw_gyrf3cfh) : &pw_gyrf3cfh,
                          _pw_gyrf3cfhd.fixedflag ? (_temp848_pw_gyrf3cfhd=pw_gyrf3cfhd,&_temp848_pw_gyrf3cfhd) : &pw_gyrf3cfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gyrf3cfh  = _ia_gyrf3cfh.fixedflag ?     ((void)((int)((a_gyrf3cfh/target)*MAX_PG_IAMP)), ia_gyrf3cfh) : (int)((a_gyrf3cfh/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp849_target=target,&_temp849_target) : &target, (WF_PROCESSOR)wg_gzrf3lcfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp850_rtime=rtime,&_temp850_rtime) : &rtime, _ftime.fixedflag ? (_temp851_ftime=ftime,&_temp851_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf3lcfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf3lcfh.fixedflag ? (_temp852_a_gzrf3lcfh=a_gzrf3lcfh,&_temp852_a_gzrf3lcfh) : &a_gzrf3lcfh, _pw_gzrf3lcfha.fixedflag ? (_temp853_pw_gzrf3lcfha=pw_gzrf3lcfha,&_temp853_pw_gzrf3lcfha) : &pw_gzrf3lcfha, _pw_gzrf3lcfh.fixedflag ? (_temp854_pw_gzrf3lcfh=pw_gzrf3lcfh,&_temp854_pw_gzrf3lcfh) : &pw_gzrf3lcfh,
                          _pw_gzrf3lcfhd.fixedflag ? (_temp855_pw_gzrf3lcfhd=pw_gzrf3lcfhd,&_temp855_pw_gzrf3lcfhd) : &pw_gzrf3lcfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf3lcfh  = _ia_gzrf3lcfh.fixedflag ?     ((void)((int)((a_gzrf3lcfh/target)*MAX_PG_IAMP)), ia_gzrf3lcfh) : (int)((a_gzrf3lcfh/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp856_target=target,&_temp856_target) : &target, (WF_PROCESSOR)wg_gzrf3rcfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp857_rtime=rtime,&_temp857_rtime) : &rtime, _ftime.fixedflag ? (_temp858_ftime=ftime,&_temp858_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf3rcfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf3rcfh.fixedflag ? (_temp859_a_gzrf3rcfh=a_gzrf3rcfh,&_temp859_a_gzrf3rcfh) : &a_gzrf3rcfh, _pw_gzrf3rcfha.fixedflag ? (_temp860_pw_gzrf3rcfha=pw_gzrf3rcfha,&_temp860_pw_gzrf3rcfha) : &pw_gzrf3rcfha, _pw_gzrf3rcfh.fixedflag ? (_temp861_pw_gzrf3rcfh=pw_gzrf3rcfh,&_temp861_pw_gzrf3rcfh) : &pw_gzrf3rcfh,
                          _pw_gzrf3rcfhd.fixedflag ? (_temp862_pw_gzrf3rcfhd=pw_gzrf3rcfhd,&_temp862_pw_gzrf3rcfhd) : &pw_gzrf3rcfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf3rcfh  = _ia_gzrf3rcfh.fixedflag ?     ((void)((int)((a_gzrf3rcfh/target)*MAX_PG_IAMP)), ia_gzrf3rcfh) : (int)((a_gzrf3rcfh/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp863_target=target,&_temp863_target) : &target, (WF_PROCESSOR)wg_gy1cfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp864_rtime=rtime,&_temp864_rtime) : &rtime, _ftime.fixedflag ? (_temp865_ftime=ftime,&_temp865_ftime) : &ftime, (WF_PROCESSOR)wg_gy1cfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gy1cfh.fixedflag ? (_temp866_a_gy1cfh=a_gy1cfh,&_temp866_a_gy1cfh) : &a_gy1cfh, _pw_gy1cfha.fixedflag ? (_temp867_pw_gy1cfha=pw_gy1cfha,&_temp867_pw_gy1cfha) : &pw_gy1cfha, _pw_gy1cfh.fixedflag ? (_temp868_pw_gy1cfh=pw_gy1cfh,&_temp868_pw_gy1cfh) : &pw_gy1cfh,
                          _pw_gy1cfhd.fixedflag ? (_temp869_pw_gy1cfhd=pw_gy1cfhd,&_temp869_pw_gy1cfhd) : &pw_gy1cfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gy1cfh  = _ia_gy1cfh.fixedflag ?     ((void)((int)((a_gy1cfh/target)*MAX_PG_IAMP)), ia_gy1cfh) : (int)((a_gy1cfh/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp870_target=target,&_temp870_target) : &target, (WF_PROCESSOR)wg_gx1cfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp871_rtime=rtime,&_temp871_rtime) : &rtime, _ftime.fixedflag ? (_temp872_ftime=ftime,&_temp872_ftime) : &ftime, (WF_PROCESSOR)wg_gx1cfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx1cfh.fixedflag ? (_temp873_a_gx1cfh=a_gx1cfh,&_temp873_a_gx1cfh) : &a_gx1cfh, _pw_gx1cfha.fixedflag ? (_temp874_pw_gx1cfha=pw_gx1cfha,&_temp874_pw_gx1cfha) : &pw_gx1cfha, _pw_gx1cfh.fixedflag ? (_temp875_pw_gx1cfh=pw_gx1cfh,&_temp875_pw_gx1cfh) : &pw_gx1cfh,
                          _pw_gx1cfhd.fixedflag ? (_temp876_pw_gx1cfhd=pw_gx1cfhd,&_temp876_pw_gx1cfhd) : &pw_gx1cfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx1cfh  = _ia_gx1cfh.fixedflag ?     ((void)((int)((a_gx1cfh/target)*MAX_PG_IAMP)), ia_gx1cfh) : (int)((a_gx1cfh/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp877_target=target,&_temp877_target) : &target, (WF_PROCESSOR)wg_gzrf4cfh, &loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp878_rtime=rtime,&_temp878_rtime) : &rtime, _ftime.fixedflag ? (_temp879_ftime=ftime,&_temp879_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf4cfh, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf4cfh.fixedflag ? (_temp880_a_gzrf4cfh=a_gzrf4cfh,&_temp880_a_gzrf4cfh) : &a_gzrf4cfh, _pw_gzrf4cfha.fixedflag ? (_temp881_pw_gzrf4cfha=pw_gzrf4cfha,&_temp881_pw_gzrf4cfha) : &pw_gzrf4cfha, _pw_gzrf4cfh.fixedflag ? (_temp882_pw_gzrf4cfh=pw_gzrf4cfh,&_temp882_pw_gzrf4cfh) : &pw_gzrf4cfh,
                          _pw_gzrf4cfhd.fixedflag ? (_temp883_pw_gzrf4cfhd=pw_gzrf4cfhd,&_temp883_pw_gzrf4cfhd) : &pw_gzrf4cfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf4cfh  = _ia_gzrf4cfh.fixedflag ?     ((void)((int)((a_gzrf4cfh/target)*MAX_PG_IAMP)), ia_gzrf4cfh) : (int)((a_gzrf4cfh/target)*MAX_PG_IAMP);
    }





    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp884_target=target,&_temp884_target) : &target, (WF_PROCESSOR)wg_gzrf4lcfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp885_rtime=rtime,&_temp885_rtime) : &rtime, _ftime.fixedflag ? (_temp886_ftime=ftime,&_temp886_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf4lcfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf4lcfh.fixedflag ? (_temp887_a_gzrf4lcfh=a_gzrf4lcfh,&_temp887_a_gzrf4lcfh) : &a_gzrf4lcfh, _pw_gzrf4lcfha.fixedflag ? (_temp888_pw_gzrf4lcfha=pw_gzrf4lcfha,&_temp888_pw_gzrf4lcfha) : &pw_gzrf4lcfha, _pw_gzrf4lcfh.fixedflag ? (_temp889_pw_gzrf4lcfh=pw_gzrf4lcfh,&_temp889_pw_gzrf4lcfh) : &pw_gzrf4lcfh,
                          _pw_gzrf4lcfhd.fixedflag ? (_temp890_pw_gzrf4lcfhd=pw_gzrf4lcfhd,&_temp890_pw_gzrf4lcfhd) : &pw_gzrf4lcfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf4lcfh  = _ia_gzrf4lcfh.fixedflag ?     ((void)((int)((a_gzrf4lcfh/target)*MAX_PG_IAMP)), ia_gzrf4lcfh) : (int)((a_gzrf4lcfh/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp891_target=target,&_temp891_target) : &target, (WF_PROCESSOR)wg_gzrf4rcfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp892_rtime=rtime,&_temp892_rtime) : &rtime, _ftime.fixedflag ? (_temp893_ftime=ftime,&_temp893_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf4rcfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf4rcfh.fixedflag ? (_temp894_a_gzrf4rcfh=a_gzrf4rcfh,&_temp894_a_gzrf4rcfh) : &a_gzrf4rcfh, _pw_gzrf4rcfha.fixedflag ? (_temp895_pw_gzrf4rcfha=pw_gzrf4rcfha,&_temp895_pw_gzrf4rcfha) : &pw_gzrf4rcfha, _pw_gzrf4rcfh.fixedflag ? (_temp896_pw_gzrf4rcfh=pw_gzrf4rcfh,&_temp896_pw_gzrf4rcfh) : &pw_gzrf4rcfh,
                          _pw_gzrf4rcfhd.fixedflag ? (_temp897_pw_gzrf4rcfhd=pw_gzrf4rcfhd,&_temp897_pw_gzrf4rcfhd) : &pw_gzrf4rcfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf4rcfh  = _ia_gzrf4rcfh.fixedflag ?     ((void)((int)((a_gzrf4rcfh/target)*MAX_PG_IAMP)), ia_gzrf4rcfh) : (int)((a_gzrf4rcfh/target)*MAX_PG_IAMP);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp898_target=target,&_temp898_target) : &target, (WF_PROCESSOR)wg_gykcfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp899_rtime=rtime,&_temp899_rtime) : &rtime, _ftime.fixedflag ? (_temp900_ftime=ftime,&_temp900_ftime) : &ftime, (WF_PROCESSOR)wg_gykcfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gykcfh.fixedflag ? (_temp901_a_gykcfh=a_gykcfh,&_temp901_a_gykcfh) : &a_gykcfh, _pw_gykcfha.fixedflag ? (_temp902_pw_gykcfha=pw_gykcfha,&_temp902_pw_gykcfha) : &pw_gykcfha, _pw_gykcfh.fixedflag ? (_temp903_pw_gykcfh=pw_gykcfh,&_temp903_pw_gykcfh) : &pw_gykcfh,
                          _pw_gykcfhd.fixedflag ? (_temp904_pw_gykcfhd=pw_gykcfhd,&_temp904_pw_gykcfhd) : &pw_gykcfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gykcfh  = _ia_gykcfh.fixedflag ?     ((void)((int)((a_gykcfh/target)*MAX_PG_IAMP)), ia_gykcfh) : (int)((a_gykcfh/target)*MAX_PG_IAMP);
    }









    if (ampslice(_a_gzrf1ftg.fixedflag ? (_temp905_a_gzrf1ftg=a_gzrf1ftg,&_temp905_a_gzrf1ftg) : &a_gzrf1ftg,(LONG)(4000000*cyc_rf1ftg/
        pw_rf1ftg),
        (float)thk_rf1ftg,(float)gscale_rf1ftg,
        (int)TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf1ftga.fixedflag ? (_temp906_pw_gzrf1ftga=pw_gzrf1ftga,&_temp906_pw_gzrf1ftga) : &pw_gzrf1ftga,a_gzrf1ftg,ps1loggrd.tz,
                ps1loggrd.zrt,TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf1ftgd.fixedflag ? (_temp907_pw_gzrf1ftgd=pw_gzrf1ftgd,&_temp907_pw_gzrf1ftgd) : &pw_gzrf1ftgd,a_gzrf1ftg,ps1loggrd.tz,
                ps1loggrd.zft,TYPNDEF)== FAILURE)
    {
        return FAILURE;
    }

    ia_gzrf1ftg  = _ia_gzrf1ftg.fixedflag ?    ((void)((int)(a_gzrf1ftg*MAX_PG_IAMP/ps1loggrd.tz)), ia_gzrf1ftg) : (int)(a_gzrf1ftg*MAX_PG_IAMP/ps1loggrd.tz);

    ia_rf1ftg  = _ia_rf1ftg.fixedflag ?    ((void)((int)(a_rf1ftg*MAX_PG_IAMP)), ia_rf1ftg) : (int)(a_rf1ftg*MAX_PG_IAMP);
    if (res_rf1ftg == 0)
    {
        res_rf1ftg  = _res_rf1ftg.fixedflag ?  ((void)(pw_rf1ftg/(RF_UPDATE_TIME)), res_rf1ftg) : pw_rf1ftg/(RF_UPDATE_TIME);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp908_target=target,&_temp908_target) : &target, (WF_PROCESSOR)wg_gz1ftg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp909_rtime=rtime,&_temp909_rtime) : &rtime, _ftime.fixedflag ? (_temp910_ftime=ftime,&_temp910_ftime) : &ftime, (WF_PROCESSOR)wg_gz1ftg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz1ftg.fixedflag ? (_temp911_a_gz1ftg=a_gz1ftg,&_temp911_a_gz1ftg) : &a_gz1ftg, _pw_gz1ftga.fixedflag ? (_temp912_pw_gz1ftga=pw_gz1ftga,&_temp912_pw_gz1ftga) : &pw_gz1ftga, _pw_gz1ftg.fixedflag ? (_temp913_pw_gz1ftg=pw_gz1ftg,&_temp913_pw_gz1ftg) : &pw_gz1ftg,
                          _pw_gz1ftgd.fixedflag ? (_temp914_pw_gz1ftgd=pw_gz1ftgd,&_temp914_pw_gz1ftgd) : &pw_gz1ftgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz1ftg  = _ia_gz1ftg.fixedflag ?     ((void)((int)((a_gz1ftg/target)*MAX_PG_IAMP)), ia_gz1ftg) : (int)((a_gz1ftg/target)*MAX_PG_IAMP);
    }


    if (ampslice(_a_gzrf2ftg.fixedflag ? (_temp915_a_gzrf2ftg=a_gzrf2ftg,&_temp915_a_gzrf2ftg) : &a_gzrf2ftg,(LONG)(4000000*cyc_rf2ftg/
        pw_rf2ftg),
        (float)thk_rf2ftg,(float)gscale_rf2ftg,
        (int)TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf2ftga.fixedflag ? (_temp916_pw_gzrf2ftga=pw_gzrf2ftga,&_temp916_pw_gzrf2ftga) : &pw_gzrf2ftga,a_gzrf2ftg,ps1loggrd.tz,
                ps1loggrd.zrt,TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf2ftgd.fixedflag ? (_temp917_pw_gzrf2ftgd=pw_gzrf2ftgd,&_temp917_pw_gzrf2ftgd) : &pw_gzrf2ftgd,a_gzrf2ftg,ps1loggrd.tz,
                ps1loggrd.zft,TYPNDEF)== FAILURE)
    {
        return FAILURE;
    }

    ia_gzrf2ftg  = _ia_gzrf2ftg.fixedflag ?    ((void)((int)(a_gzrf2ftg*MAX_PG_IAMP/ps1loggrd.tz)), ia_gzrf2ftg) : (int)(a_gzrf2ftg*MAX_PG_IAMP/ps1loggrd.tz);

    ia_rf2ftg  = _ia_rf2ftg.fixedflag ?    ((void)((int)(a_rf2ftg*MAX_PG_IAMP)), ia_rf2ftg) : (int)(a_rf2ftg*MAX_PG_IAMP);
    if (res_rf2ftg == 0)
    {
        res_rf2ftg  = _res_rf2ftg.fixedflag ?  ((void)(pw_rf2ftg/(RF_UPDATE_TIME)), res_rf2ftg) : pw_rf2ftg/(RF_UPDATE_TIME);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp918_target=target,&_temp918_target) : &target, (WF_PROCESSOR)wg_gz2ftg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp919_rtime=rtime,&_temp919_rtime) : &rtime, _ftime.fixedflag ? (_temp920_ftime=ftime,&_temp920_ftime) : &ftime, (WF_PROCESSOR)wg_gz2ftg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz2ftg.fixedflag ? (_temp921_a_gz2ftg=a_gz2ftg,&_temp921_a_gz2ftg) : &a_gz2ftg, _pw_gz2ftga.fixedflag ? (_temp922_pw_gz2ftga=pw_gz2ftga,&_temp922_pw_gz2ftga) : &pw_gz2ftga, _pw_gz2ftg.fixedflag ? (_temp923_pw_gz2ftg=pw_gz2ftg,&_temp923_pw_gz2ftg) : &pw_gz2ftg,
                          _pw_gz2ftgd.fixedflag ? (_temp924_pw_gz2ftgd=pw_gz2ftgd,&_temp924_pw_gz2ftgd) : &pw_gz2ftgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz2ftg  = _ia_gz2ftg.fixedflag ?     ((void)((int)((a_gz2ftg/target)*MAX_PG_IAMP)), ia_gz2ftg) : (int)((a_gz2ftg/target)*MAX_PG_IAMP);
    }


    if (ampslice(_a_gzrf3ftg.fixedflag ? (_temp925_a_gzrf3ftg=a_gzrf3ftg,&_temp925_a_gzrf3ftg) : &a_gzrf3ftg,(LONG)(4000000*cyc_rf3ftg/
        pw_rf3ftg),
        (float)thk_rf3ftg,(float)gscale_rf3ftg,
        (int)TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf3ftga.fixedflag ? (_temp926_pw_gzrf3ftga=pw_gzrf3ftga,&_temp926_pw_gzrf3ftga) : &pw_gzrf3ftga,a_gzrf3ftg,ps1loggrd.tz,
                ps1loggrd.zrt,TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf3ftgd.fixedflag ? (_temp927_pw_gzrf3ftgd=pw_gzrf3ftgd,&_temp927_pw_gzrf3ftgd) : &pw_gzrf3ftgd,a_gzrf3ftg,ps1loggrd.tz,
                ps1loggrd.zft,TYPNDEF)== FAILURE)
    {
        return FAILURE;
    }

    ia_gzrf3ftg  = _ia_gzrf3ftg.fixedflag ?    ((void)((int)(a_gzrf3ftg*MAX_PG_IAMP/ps1loggrd.tz)), ia_gzrf3ftg) : (int)(a_gzrf3ftg*MAX_PG_IAMP/ps1loggrd.tz);

    ia_rf3ftg  = _ia_rf3ftg.fixedflag ?    ((void)((int)(a_rf3ftg*MAX_PG_IAMP)), ia_rf3ftg) : (int)(a_rf3ftg*MAX_PG_IAMP);
    if (res_rf3ftg == 0)
    {
        res_rf3ftg  = _res_rf3ftg.fixedflag ?  ((void)(pw_rf3ftg/(RF_UPDATE_TIME)), res_rf3ftg) : pw_rf3ftg/(RF_UPDATE_TIME);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp928_target=target,&_temp928_target) : &target, (WF_PROCESSOR)wg_gz3ftg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp929_rtime=rtime,&_temp929_rtime) : &rtime, _ftime.fixedflag ? (_temp930_ftime=ftime,&_temp930_ftime) : &ftime, (WF_PROCESSOR)wg_gz3ftg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz3ftg.fixedflag ? (_temp931_a_gz3ftg=a_gz3ftg,&_temp931_a_gz3ftg) : &a_gz3ftg, _pw_gz3ftga.fixedflag ? (_temp932_pw_gz3ftga=pw_gz3ftga,&_temp932_pw_gz3ftga) : &pw_gz3ftga, _pw_gz3ftg.fixedflag ? (_temp933_pw_gz3ftg=pw_gz3ftg,&_temp933_pw_gz3ftg) : &pw_gz3ftg,
                          _pw_gz3ftgd.fixedflag ? (_temp934_pw_gz3ftgd=pw_gz3ftgd,&_temp934_pw_gz3ftgd) : &pw_gz3ftgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz3ftg  = _ia_gz3ftg.fixedflag ?     ((void)((int)((a_gz3ftg/target)*MAX_PG_IAMP)), ia_gz3ftg) : (int)((a_gz3ftg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp935_target=target,&_temp935_target) : &target, (WF_PROCESSOR)wg_gx1ftg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp936_rtime=rtime,&_temp936_rtime) : &rtime, _ftime.fixedflag ? (_temp937_ftime=ftime,&_temp937_ftime) : &ftime, (WF_PROCESSOR)wg_gx1ftg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx1ftg.fixedflag ? (_temp938_a_gx1ftg=a_gx1ftg,&_temp938_a_gx1ftg) : &a_gx1ftg, _pw_gx1ftga.fixedflag ? (_temp939_pw_gx1ftga=pw_gx1ftga,&_temp939_pw_gx1ftga) : &pw_gx1ftga, _pw_gx1ftg.fixedflag ? (_temp940_pw_gx1ftg=pw_gx1ftg,&_temp940_pw_gx1ftg) : &pw_gx1ftg,
                          _pw_gx1ftgd.fixedflag ? (_temp941_pw_gx1ftgd=pw_gx1ftgd,&_temp941_pw_gx1ftgd) : &pw_gx1ftgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx1ftg  = _ia_gx1ftg.fixedflag ?     ((void)((int)((a_gx1ftg/target)*MAX_PG_IAMP)), ia_gx1ftg) : (int)((a_gx1ftg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp942_target=target,&_temp942_target) : &target, (WF_PROCESSOR)wg_gx1bftg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp943_rtime=rtime,&_temp943_rtime) : &rtime, _ftime.fixedflag ? (_temp944_ftime=ftime,&_temp944_ftime) : &ftime, (WF_PROCESSOR)wg_gx1bftg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx1bftg.fixedflag ? (_temp945_a_gx1bftg=a_gx1bftg,&_temp945_a_gx1bftg) : &a_gx1bftg, _pw_gx1bftga.fixedflag ? (_temp946_pw_gx1bftga=pw_gx1bftga,&_temp946_pw_gx1bftga) : &pw_gx1bftga, _pw_gx1bftg.fixedflag ? (_temp947_pw_gx1bftg=pw_gx1bftg,&_temp947_pw_gx1bftg) : &pw_gx1bftg,
                          _pw_gx1bftgd.fixedflag ? (_temp948_pw_gx1bftgd=pw_gx1bftgd,&_temp948_pw_gx1bftgd) : &pw_gx1bftgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx1bftg  = _ia_gx1bftg.fixedflag ?     ((void)((int)((a_gx1bftg/target)*MAX_PG_IAMP)), ia_gx1bftg) : (int)((a_gx1bftg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp949_target=target,&_temp949_target) : &target, (WF_PROCESSOR)wg_gxw1ftg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp950_rtime=rtime,&_temp950_rtime) : &rtime, _ftime.fixedflag ? (_temp951_ftime=ftime,&_temp951_ftime) : &ftime, (WF_PROCESSOR)wg_gxw1ftg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxw1ftg.fixedflag ? (_temp952_a_gxw1ftg=a_gxw1ftg,&_temp952_a_gxw1ftg) : &a_gxw1ftg, _pw_gxw1ftga.fixedflag ? (_temp953_pw_gxw1ftga=pw_gxw1ftga,&_temp953_pw_gxw1ftga) : &pw_gxw1ftga, _pw_gxw1ftg.fixedflag ? (_temp954_pw_gxw1ftg=pw_gxw1ftg,&_temp954_pw_gxw1ftg) : &pw_gxw1ftg,
                          _pw_gxw1ftgd.fixedflag ? (_temp955_pw_gxw1ftgd=pw_gxw1ftgd,&_temp955_pw_gxw1ftgd) : &pw_gxw1ftgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxw1ftg  = _ia_gxw1ftg.fixedflag ?     ((void)((int)((a_gxw1ftg/target)*MAX_PG_IAMP)), ia_gxw1ftg) : (int)((a_gxw1ftg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp956_target=target,&_temp956_target) : &target, (WF_PROCESSOR)wg_postgxw1ftg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp957_rtime=rtime,&_temp957_rtime) : &rtime, _ftime.fixedflag ? (_temp958_ftime=ftime,&_temp958_ftime) : &ftime, (WF_PROCESSOR)wg_postgxw1ftg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_postgxw1ftg.fixedflag ? (_temp959_a_postgxw1ftg=a_postgxw1ftg,&_temp959_a_postgxw1ftg) : &a_postgxw1ftg, _pw_postgxw1ftga.fixedflag ? (_temp960_pw_postgxw1ftga=pw_postgxw1ftga,&_temp960_pw_postgxw1ftga) : &pw_postgxw1ftga, _pw_postgxw1ftg.fixedflag ? (_temp961_pw_postgxw1ftg=pw_postgxw1ftg,&_temp961_pw_postgxw1ftg) : &pw_postgxw1ftg,
                          _pw_postgxw1ftgd.fixedflag ? (_temp962_pw_postgxw1ftgd=pw_postgxw1ftgd,&_temp962_pw_postgxw1ftgd) : &pw_postgxw1ftgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_postgxw1ftg  = _ia_postgxw1ftg.fixedflag ?     ((void)((int)((a_postgxw1ftg/target)*MAX_PG_IAMP)), ia_postgxw1ftg) : (int)((a_postgxw1ftg/target)*MAX_PG_IAMP);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp963_target=target,&_temp963_target) : &target, (WF_PROCESSOR)wg_gz2bftg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp964_rtime=rtime,&_temp964_rtime) : &rtime, _ftime.fixedflag ? (_temp965_ftime=ftime,&_temp965_ftime) : &ftime, (WF_PROCESSOR)wg_gz2bftg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz2bftg.fixedflag ? (_temp966_a_gz2bftg=a_gz2bftg,&_temp966_a_gz2bftg) : &a_gz2bftg, _pw_gz2bftga.fixedflag ? (_temp967_pw_gz2bftga=pw_gz2bftga,&_temp967_pw_gz2bftga) : &pw_gz2bftga, _pw_gz2bftg.fixedflag ? (_temp968_pw_gz2bftg=pw_gz2bftg,&_temp968_pw_gz2bftg) : &pw_gz2bftg,
                          _pw_gz2bftgd.fixedflag ? (_temp969_pw_gz2bftgd=pw_gz2bftgd,&_temp969_pw_gz2bftgd) : &pw_gz2bftgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz2bftg  = _ia_gz2bftg.fixedflag ?     ((void)((int)((a_gz2bftg/target)*MAX_PG_IAMP)), ia_gz2bftg) : (int)((a_gz2bftg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp970_target=target,&_temp970_target) : &target, (WF_PROCESSOR)wg_gx2ftg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp971_rtime=rtime,&_temp971_rtime) : &rtime, _ftime.fixedflag ? (_temp972_ftime=ftime,&_temp972_ftime) : &ftime, (WF_PROCESSOR)wg_gx2ftg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx2ftg.fixedflag ? (_temp973_a_gx2ftg=a_gx2ftg,&_temp973_a_gx2ftg) : &a_gx2ftg, _pw_gx2ftga.fixedflag ? (_temp974_pw_gx2ftga=pw_gx2ftga,&_temp974_pw_gx2ftga) : &pw_gx2ftga, _pw_gx2ftg.fixedflag ? (_temp975_pw_gx2ftg=pw_gx2ftg,&_temp975_pw_gx2ftg) : &pw_gx2ftg,
                          _pw_gx2ftgd.fixedflag ? (_temp976_pw_gx2ftgd=pw_gx2ftgd,&_temp976_pw_gx2ftgd) : &pw_gx2ftgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx2ftg  = _ia_gx2ftg.fixedflag ?     ((void)((int)((a_gx2ftg/target)*MAX_PG_IAMP)), ia_gx2ftg) : (int)((a_gx2ftg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp977_target=target,&_temp977_target) : &target, (WF_PROCESSOR)wg_gxw2ftg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp978_rtime=rtime,&_temp978_rtime) : &rtime, _ftime.fixedflag ? (_temp979_ftime=ftime,&_temp979_ftime) : &ftime, (WF_PROCESSOR)wg_gxw2ftg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxw2ftg.fixedflag ? (_temp980_a_gxw2ftg=a_gxw2ftg,&_temp980_a_gxw2ftg) : &a_gxw2ftg, _pw_gxw2ftga.fixedflag ? (_temp981_pw_gxw2ftga=pw_gxw2ftga,&_temp981_pw_gxw2ftga) : &pw_gxw2ftga, _pw_gxw2ftg.fixedflag ? (_temp982_pw_gxw2ftg=pw_gxw2ftg,&_temp982_pw_gxw2ftg) : &pw_gxw2ftg,
                          _pw_gxw2ftgd.fixedflag ? (_temp983_pw_gxw2ftgd=pw_gxw2ftgd,&_temp983_pw_gxw2ftgd) : &pw_gxw2ftgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxw2ftg  = _ia_gxw2ftg.fixedflag ?     ((void)((int)((a_gxw2ftg/target)*MAX_PG_IAMP)), ia_gxw2ftg) : (int)((a_gxw2ftg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp984_target=target,&_temp984_target) : &target, (WF_PROCESSOR)wg_gx2test, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp985_rtime=rtime,&_temp985_rtime) : &rtime, _ftime.fixedflag ? (_temp986_ftime=ftime,&_temp986_ftime) : &ftime, (WF_PROCESSOR)wg_gx2test, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx2test.fixedflag ? (_temp987_a_gx2test=a_gx2test,&_temp987_a_gx2test) : &a_gx2test, _pw_gx2testa.fixedflag ? (_temp988_pw_gx2testa=pw_gx2testa,&_temp988_pw_gx2testa) : &pw_gx2testa, _pw_gx2test.fixedflag ? (_temp989_pw_gx2test=pw_gx2test,&_temp989_pw_gx2test) : &pw_gx2test,
                          _pw_gx2testd.fixedflag ? (_temp990_pw_gx2testd=pw_gx2testd,&_temp990_pw_gx2testd) : &pw_gx2testd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx2test  = _ia_gx2test.fixedflag ?     ((void)((int)((a_gx2test/target)*MAX_PG_IAMP)), ia_gx2test) : (int)((a_gx2test/target)*MAX_PG_IAMP);
    }



{
  float target;
  gettarget(_target.fixedflag ? (_temp991_target=target,&_temp991_target) : &target,(WF_PROCESSOR)wg_rf1xtg,&ps1loggrd);
  if ((wg_rf1xtg==TYPRHO1)||(wg_rf1xtg==TYPRHO2)
        ||(wg_rf1xtg==TYPOMEGA)||(wg_rf1xtg==TYPTHETA))
    {
      if (res_rf1xtg == 0)
        {
          res_rf1xtg  = _res_rf1xtg.fixedflag ?  ((void)(pw_rf1xtg/(RF_UPDATE_TIME)), res_rf1xtg) : pw_rf1xtg/(RF_UPDATE_TIME);
        }
      ia_rf1xtg  = _ia_rf1xtg.fixedflag ?    ((void)((int)(a_rf1xtg*MAX_PG_IAMP)), ia_rf1xtg) : (int)(a_rf1xtg*MAX_PG_IAMP);
    }    
  else
    {
      if (res_rf1xtg == 0)
        {
          res_rf1xtg  = _res_rf1xtg.fixedflag ?  ((void)(pw_rf1xtg/(GRAD_UPDATE_TIME)), res_rf1xtg) : pw_rf1xtg/(GRAD_UPDATE_TIME);
        }
      ia_rf1xtg  = _ia_rf1xtg.fixedflag ?     ((void)((int)((a_rf1xtg/target)*MAX_PG_IAMP)), ia_rf1xtg) : (int)((a_rf1xtg/target)*MAX_PG_IAMP);
    }    
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp992_target=target,&_temp992_target) : &target, (WF_PROCESSOR)wg_gyrf1xtg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp993_rtime=rtime,&_temp993_rtime) : &rtime, _ftime.fixedflag ? (_temp994_ftime=ftime,&_temp994_ftime) : &ftime, (WF_PROCESSOR)wg_gyrf1xtg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gyrf1xtg.fixedflag ? (_temp995_a_gyrf1xtg=a_gyrf1xtg,&_temp995_a_gyrf1xtg) : &a_gyrf1xtg, _pw_gyrf1xtga.fixedflag ? (_temp996_pw_gyrf1xtga=pw_gyrf1xtga,&_temp996_pw_gyrf1xtga) : &pw_gyrf1xtga, _pw_gyrf1xtg.fixedflag ? (_temp997_pw_gyrf1xtg=pw_gyrf1xtg,&_temp997_pw_gyrf1xtg) : &pw_gyrf1xtg,
                          _pw_gyrf1xtgd.fixedflag ? (_temp998_pw_gyrf1xtgd=pw_gyrf1xtgd,&_temp998_pw_gyrf1xtgd) : &pw_gyrf1xtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gyrf1xtg  = _ia_gyrf1xtg.fixedflag ?     ((void)((int)((a_gyrf1xtg/target)*MAX_PG_IAMP)), ia_gyrf1xtg) : (int)((a_gyrf1xtg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp999_target=target,&_temp999_target) : &target, (WF_PROCESSOR)wg_gzrf1xtg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1000_rtime=rtime,&_temp1000_rtime) : &rtime, _ftime.fixedflag ? (_temp1001_ftime=ftime,&_temp1001_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf1xtg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf1xtg.fixedflag ? (_temp1002_a_gzrf1xtg=a_gzrf1xtg,&_temp1002_a_gzrf1xtg) : &a_gzrf1xtg, _pw_gzrf1xtga.fixedflag ? (_temp1003_pw_gzrf1xtga=pw_gzrf1xtga,&_temp1003_pw_gzrf1xtga) : &pw_gzrf1xtga, _pw_gzrf1xtg.fixedflag ? (_temp1004_pw_gzrf1xtg=pw_gzrf1xtg,&_temp1004_pw_gzrf1xtg) : &pw_gzrf1xtg,
                          _pw_gzrf1xtgd.fixedflag ? (_temp1005_pw_gzrf1xtgd=pw_gzrf1xtgd,&_temp1005_pw_gzrf1xtgd) : &pw_gzrf1xtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf1xtg  = _ia_gzrf1xtg.fixedflag ?     ((void)((int)((a_gzrf1xtg/target)*MAX_PG_IAMP)), ia_gzrf1xtg) : (int)((a_gzrf1xtg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1006_target=target,&_temp1006_target) : &target, (WF_PROCESSOR)wg_gykxtgl, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1007_rtime=rtime,&_temp1007_rtime) : &rtime, _ftime.fixedflag ? (_temp1008_ftime=ftime,&_temp1008_ftime) : &ftime, (WF_PROCESSOR)wg_gykxtgl, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gykxtgl.fixedflag ? (_temp1009_a_gykxtgl=a_gykxtgl,&_temp1009_a_gykxtgl) : &a_gykxtgl, _pw_gykxtgla.fixedflag ? (_temp1010_pw_gykxtgla=pw_gykxtgla,&_temp1010_pw_gykxtgla) : &pw_gykxtgla, _pw_gykxtgl.fixedflag ? (_temp1011_pw_gykxtgl=pw_gykxtgl,&_temp1011_pw_gykxtgl) : &pw_gykxtgl,
                          _pw_gykxtgld.fixedflag ? (_temp1012_pw_gykxtgld=pw_gykxtgld,&_temp1012_pw_gykxtgld) : &pw_gykxtgld) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gykxtgl  = _ia_gykxtgl.fixedflag ?     ((void)((int)((a_gykxtgl/target)*MAX_PG_IAMP)), ia_gykxtgl) : (int)((a_gykxtgl/target)*MAX_PG_IAMP);
    }


            ia_rf3xtg  = _ia_rf3xtg.fixedflag ?    ((void)((int)(a_rf3xtg*MAX_PG_IAMP)), ia_rf3xtg) : (int)(a_rf3xtg*MAX_PG_IAMP);
            if (res_rf3xtg == 0)
                res_rf3xtg  = _res_rf3xtg.fixedflag ?  ((void)(RES_FERMI_BLS), res_rf3xtg) : RES_FERMI_BLS;

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1013_target=target,&_temp1013_target) : &target, (WF_PROCESSOR)wg_gz1xtg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1014_rtime=rtime,&_temp1014_rtime) : &rtime, _ftime.fixedflag ? (_temp1015_ftime=ftime,&_temp1015_ftime) : &ftime, (WF_PROCESSOR)wg_gz1xtg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz1xtg.fixedflag ? (_temp1016_a_gz1xtg=a_gz1xtg,&_temp1016_a_gz1xtg) : &a_gz1xtg, _pw_gz1xtga.fixedflag ? (_temp1017_pw_gz1xtga=pw_gz1xtga,&_temp1017_pw_gz1xtga) : &pw_gz1xtga, _pw_gz1xtg.fixedflag ? (_temp1018_pw_gz1xtg=pw_gz1xtg,&_temp1018_pw_gz1xtg) : &pw_gz1xtg,
                          _pw_gz1xtgd.fixedflag ? (_temp1019_pw_gz1xtgd=pw_gz1xtgd,&_temp1019_pw_gz1xtgd) : &pw_gz1xtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz1xtg  = _ia_gz1xtg.fixedflag ?     ((void)((int)((a_gz1xtg/target)*MAX_PG_IAMP)), ia_gz1xtg) : (int)((a_gz1xtg/target)*MAX_PG_IAMP);
    }


    if (ampslice(_a_gzrf2xtg.fixedflag ? (_temp1020_a_gzrf2xtg=a_gzrf2xtg,&_temp1020_a_gzrf2xtg) : &a_gzrf2xtg,(LONG)(4000000*cyc_rf2xtg/
        pw_rf2xtg),
        (float)thk_rf2xtg,(float)gscale_rf2xtg,
        (int)TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf2xtga.fixedflag ? (_temp1021_pw_gzrf2xtga=pw_gzrf2xtga,&_temp1021_pw_gzrf2xtga) : &pw_gzrf2xtga,a_gzrf2xtg,ps1loggrd.tz,
                ps1loggrd.zrt,TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf2xtgd.fixedflag ? (_temp1022_pw_gzrf2xtgd=pw_gzrf2xtgd,&_temp1022_pw_gzrf2xtgd) : &pw_gzrf2xtgd,a_gzrf2xtg,ps1loggrd.tz,
                ps1loggrd.zft,TYPNDEF)== FAILURE)
    {
        return FAILURE;
    }

    ia_gzrf2xtg  = _ia_gzrf2xtg.fixedflag ?    ((void)((int)(a_gzrf2xtg*MAX_PG_IAMP/ps1loggrd.tz)), ia_gzrf2xtg) : (int)(a_gzrf2xtg*MAX_PG_IAMP/ps1loggrd.tz);

    ia_rf2xtg  = _ia_rf2xtg.fixedflag ?    ((void)((int)(a_rf2xtg*MAX_PG_IAMP)), ia_rf2xtg) : (int)(a_rf2xtg*MAX_PG_IAMP);
    if (res_rf2xtg == 0)
    {
        res_rf2xtg  = _res_rf2xtg.fixedflag ?  ((void)(pw_rf2xtg/(RF_UPDATE_TIME)), res_rf2xtg) : pw_rf2xtg/(RF_UPDATE_TIME);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1023_target=target,&_temp1023_target) : &target, (WF_PROCESSOR)wg_gz2xtg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1024_rtime=rtime,&_temp1024_rtime) : &rtime, _ftime.fixedflag ? (_temp1025_ftime=ftime,&_temp1025_ftime) : &ftime, (WF_PROCESSOR)wg_gz2xtg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz2xtg.fixedflag ? (_temp1026_a_gz2xtg=a_gz2xtg,&_temp1026_a_gz2xtg) : &a_gz2xtg, _pw_gz2xtga.fixedflag ? (_temp1027_pw_gz2xtga=pw_gz2xtga,&_temp1027_pw_gz2xtga) : &pw_gz2xtga, _pw_gz2xtg.fixedflag ? (_temp1028_pw_gz2xtg=pw_gz2xtg,&_temp1028_pw_gz2xtg) : &pw_gz2xtg,
                          _pw_gz2xtgd.fixedflag ? (_temp1029_pw_gz2xtgd=pw_gz2xtgd,&_temp1029_pw_gz2xtgd) : &pw_gz2xtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz2xtg  = _ia_gz2xtg.fixedflag ?     ((void)((int)((a_gz2xtg/target)*MAX_PG_IAMP)), ia_gz2xtg) : (int)((a_gz2xtg/target)*MAX_PG_IAMP);
    }


            ia_rf4xtg  = _ia_rf4xtg.fixedflag ?    ((void)((int)(a_rf4xtg*MAX_PG_IAMP)), ia_rf4xtg) : (int)(a_rf4xtg*MAX_PG_IAMP);
            if (res_rf4xtg == 0)
                res_rf4xtg  = _res_rf4xtg.fixedflag ?  ((void)(RES_FERMI_BLS), res_rf4xtg) : RES_FERMI_BLS;

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1030_target=target,&_temp1030_target) : &target, (WF_PROCESSOR)wg_gykxtgr, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1031_rtime=rtime,&_temp1031_rtime) : &rtime, _ftime.fixedflag ? (_temp1032_ftime=ftime,&_temp1032_ftime) : &ftime, (WF_PROCESSOR)wg_gykxtgr, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gykxtgr.fixedflag ? (_temp1033_a_gykxtgr=a_gykxtgr,&_temp1033_a_gykxtgr) : &a_gykxtgr, _pw_gykxtgra.fixedflag ? (_temp1034_pw_gykxtgra=pw_gykxtgra,&_temp1034_pw_gykxtgra) : &pw_gykxtgra, _pw_gykxtgr.fixedflag ? (_temp1035_pw_gykxtgr=pw_gykxtgr,&_temp1035_pw_gykxtgr) : &pw_gykxtgr,
                          _pw_gykxtgrd.fixedflag ? (_temp1036_pw_gykxtgrd=pw_gykxtgrd,&_temp1036_pw_gykxtgrd) : &pw_gykxtgrd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gykxtgr  = _ia_gykxtgr.fixedflag ?     ((void)((int)((a_gykxtgr/target)*MAX_PG_IAMP)), ia_gykxtgr) : (int)((a_gykxtgr/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1037_target=target,&_temp1037_target) : &target, (WF_PROCESSOR)wg_gx1bxtg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1038_rtime=rtime,&_temp1038_rtime) : &rtime, _ftime.fixedflag ? (_temp1039_ftime=ftime,&_temp1039_ftime) : &ftime, (WF_PROCESSOR)wg_gx1bxtg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx1bxtg.fixedflag ? (_temp1040_a_gx1bxtg=a_gx1bxtg,&_temp1040_a_gx1bxtg) : &a_gx1bxtg, _pw_gx1bxtga.fixedflag ? (_temp1041_pw_gx1bxtga=pw_gx1bxtga,&_temp1041_pw_gx1bxtga) : &pw_gx1bxtga, _pw_gx1bxtg.fixedflag ? (_temp1042_pw_gx1bxtg=pw_gx1bxtg,&_temp1042_pw_gx1bxtg) : &pw_gx1bxtg,
                          _pw_gx1bxtgd.fixedflag ? (_temp1043_pw_gx1bxtgd=pw_gx1bxtgd,&_temp1043_pw_gx1bxtgd) : &pw_gx1bxtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx1bxtg  = _ia_gx1bxtg.fixedflag ?     ((void)((int)((a_gx1bxtg/target)*MAX_PG_IAMP)), ia_gx1bxtg) : (int)((a_gx1bxtg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1044_target=target,&_temp1044_target) : &target, (WF_PROCESSOR)wg_gxw1xtg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1045_rtime=rtime,&_temp1045_rtime) : &rtime, _ftime.fixedflag ? (_temp1046_ftime=ftime,&_temp1046_ftime) : &ftime, (WF_PROCESSOR)wg_gxw1xtg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxw1xtg.fixedflag ? (_temp1047_a_gxw1xtg=a_gxw1xtg,&_temp1047_a_gxw1xtg) : &a_gxw1xtg, _pw_gxw1xtga.fixedflag ? (_temp1048_pw_gxw1xtga=pw_gxw1xtga,&_temp1048_pw_gxw1xtga) : &pw_gxw1xtga, _pw_gxw1xtg.fixedflag ? (_temp1049_pw_gxw1xtg=pw_gxw1xtg,&_temp1049_pw_gxw1xtg) : &pw_gxw1xtg,
                          _pw_gxw1xtgd.fixedflag ? (_temp1050_pw_gxw1xtgd=pw_gxw1xtgd,&_temp1050_pw_gxw1xtgd) : &pw_gxw1xtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxw1xtg  = _ia_gxw1xtg.fixedflag ?     ((void)((int)((a_gxw1xtg/target)*MAX_PG_IAMP)), ia_gxw1xtg) : (int)((a_gxw1xtg/target)*MAX_PG_IAMP);
    }




    if (ampslice(_a_gzrf1as.fixedflag ? (_temp1051_a_gzrf1as=a_gzrf1as,&_temp1051_a_gzrf1as) : &a_gzrf1as,(LONG)(4000000*cyc_rf1as/
        pw_rf1as),
        (float)thk_rf1as,(float)gscale_rf1as,
        (int)TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf1asa.fixedflag ? (_temp1052_pw_gzrf1asa=pw_gzrf1asa,&_temp1052_pw_gzrf1asa) : &pw_gzrf1asa,a_gzrf1as,asloggrd.tz,
                asloggrd.zrt,TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf1asd.fixedflag ? (_temp1053_pw_gzrf1asd=pw_gzrf1asd,&_temp1053_pw_gzrf1asd) : &pw_gzrf1asd,a_gzrf1as,asloggrd.tz,
                asloggrd.zft,TYPNDEF)== FAILURE)
    {
        return FAILURE;
    }

    ia_gzrf1as  = _ia_gzrf1as.fixedflag ?    ((void)((int)(a_gzrf1as*MAX_PG_IAMP/asloggrd.tz)), ia_gzrf1as) : (int)(a_gzrf1as*MAX_PG_IAMP/asloggrd.tz);

    ia_rf1as  = _ia_rf1as.fixedflag ?    ((void)((int)(a_rf1as*MAX_PG_IAMP)), ia_rf1as) : (int)(a_rf1as*MAX_PG_IAMP);
    if (res_rf1as == 0)
    {
        res_rf1as  = _res_rf1as.fixedflag ?  ((void)(pw_rf1as/(RF_UPDATE_TIME)), res_rf1as) : pw_rf1as/(RF_UPDATE_TIME);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1054_target=target,&_temp1054_target) : &target, (WF_PROCESSOR)wg_gz1as, &asloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1055_rtime=rtime,&_temp1055_rtime) : &rtime, _ftime.fixedflag ? (_temp1056_ftime=ftime,&_temp1056_ftime) : &ftime, (WF_PROCESSOR)wg_gz1as, &asloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz1as.fixedflag ? (_temp1057_a_gz1as=a_gz1as,&_temp1057_a_gz1as) : &a_gz1as, _pw_gz1asa.fixedflag ? (_temp1058_pw_gz1asa=pw_gz1asa,&_temp1058_pw_gz1asa) : &pw_gz1asa, _pw_gz1as.fixedflag ? (_temp1059_pw_gz1as=pw_gz1as,&_temp1059_pw_gz1as) : &pw_gz1as,
                          _pw_gz1asd.fixedflag ? (_temp1060_pw_gz1asd=pw_gz1asd,&_temp1060_pw_gz1asd) : &pw_gz1asd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz1as  = _ia_gz1as.fixedflag ?     ((void)((int)((a_gz1as/target)*MAX_PG_IAMP)), ia_gz1as) : (int)((a_gz1as/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1061_target=target,&_temp1061_target) : &target, (WF_PROCESSOR)wg_gxwas, &asloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1062_rtime=rtime,&_temp1062_rtime) : &rtime, _ftime.fixedflag ? (_temp1063_ftime=ftime,&_temp1063_ftime) : &ftime, (WF_PROCESSOR)wg_gxwas, &asloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxwas.fixedflag ? (_temp1064_a_gxwas=a_gxwas,&_temp1064_a_gxwas) : &a_gxwas, _pw_gxwasa.fixedflag ? (_temp1065_pw_gxwasa=pw_gxwasa,&_temp1065_pw_gxwasa) : &pw_gxwasa, _pw_gxwas.fixedflag ? (_temp1066_pw_gxwas=pw_gxwas,&_temp1066_pw_gxwas) : &pw_gxwas,
                          _pw_gxwasd.fixedflag ? (_temp1067_pw_gxwasd=pw_gxwasd,&_temp1067_pw_gxwasd) : &pw_gxwasd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxwas  = _ia_gxwas.fixedflag ?     ((void)((int)((a_gxwas/target)*MAX_PG_IAMP)), ia_gxwas) : (int)((a_gxwas/target)*MAX_PG_IAMP);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1068_target=target,&_temp1068_target) : &target, (WF_PROCESSOR)wg_gx1as, &asloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1069_rtime=rtime,&_temp1069_rtime) : &rtime, _ftime.fixedflag ? (_temp1070_ftime=ftime,&_temp1070_ftime) : &ftime, (WF_PROCESSOR)wg_gx1as, &asloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx1as.fixedflag ? (_temp1071_a_gx1as=a_gx1as,&_temp1071_a_gx1as) : &a_gx1as, _pw_gx1asa.fixedflag ? (_temp1072_pw_gx1asa=pw_gx1asa,&_temp1072_pw_gx1asa) : &pw_gx1asa, _pw_gx1as.fixedflag ? (_temp1073_pw_gx1as=pw_gx1as,&_temp1073_pw_gx1as) : &pw_gx1as,
                          _pw_gx1asd.fixedflag ? (_temp1074_pw_gx1asd=pw_gx1asd,&_temp1074_pw_gx1asd) : &pw_gx1asd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx1as  = _ia_gx1as.fixedflag ?     ((void)((int)((a_gx1as/target)*MAX_PG_IAMP)), ia_gx1as) : (int)((a_gx1as/target)*MAX_PG_IAMP);
    }

    {
        float target;

        gettarget(_target.fixedflag ? (_temp1075_target=target,&_temp1075_target) : &target,(WF_PROCESSOR)wg_gy1as,&asloggrd);
        ia_gy1as  = _ia_gy1as.fixedflag ?      
            ((void)((int)((endview_scaleas*a_gy1as/target)*MAX_PG_IAMP)), ia_gy1as) : (int)((endview_scaleas*a_gy1as/target)*MAX_PG_IAMP);
        ia_gy1aswa  = _ia_gy1aswa.fixedflag ?      
            ((void)((int)((endview_scaleas*a_gy1asa/target)*MAX_PG_IAMP)), ia_gy1aswa) : (int)((endview_scaleas*a_gy1asa/target)*MAX_PG_IAMP);
        ia_gy1aswb  = _ia_gy1aswb.fixedflag ?      
            ((void)((int)((endview_scaleas*a_gy1asb/target)*MAX_PG_IAMP)), ia_gy1aswb) : (int)((endview_scaleas*a_gy1asb/target)*MAX_PG_IAMP);
    }

    {
        float target;

        gettarget(_target.fixedflag ? (_temp1076_target=target,&_temp1076_target) : &target,(WF_PROCESSOR)wg_gy1ras,&asloggrd);
        ia_gy1ras  = _ia_gy1ras.fixedflag ?      
            ((void)((int)((endview_scaleas*a_gy1ras/target)*MAX_PG_IAMP)), ia_gy1ras) : (int)((endview_scaleas*a_gy1ras/target)*MAX_PG_IAMP);
        ia_gy1raswa  = _ia_gy1raswa.fixedflag ?      
            ((void)((int)((endview_scaleas*a_gy1rasa/target)*MAX_PG_IAMP)), ia_gy1raswa) : (int)((endview_scaleas*a_gy1rasa/target)*MAX_PG_IAMP);
        ia_gy1raswb  = _ia_gy1raswb.fixedflag ?      
            ((void)((int)((endview_scaleas*a_gy1rasb/target)*MAX_PG_IAMP)), ia_gy1raswb) : (int)((endview_scaleas*a_gy1rasb/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1077_target=target,&_temp1077_target) : &target, (WF_PROCESSOR)wg_gxkas, &asloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1078_rtime=rtime,&_temp1078_rtime) : &rtime, _ftime.fixedflag ? (_temp1079_ftime=ftime,&_temp1079_ftime) : &ftime, (WF_PROCESSOR)wg_gxkas, &asloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxkas.fixedflag ? (_temp1080_a_gxkas=a_gxkas,&_temp1080_a_gxkas) : &a_gxkas, _pw_gxkasa.fixedflag ? (_temp1081_pw_gxkasa=pw_gxkasa,&_temp1081_pw_gxkasa) : &pw_gxkasa, _pw_gxkas.fixedflag ? (_temp1082_pw_gxkas=pw_gxkas,&_temp1082_pw_gxkas) : &pw_gxkas,
                          _pw_gxkasd.fixedflag ? (_temp1083_pw_gxkasd=pw_gxkasd,&_temp1083_pw_gxkasd) : &pw_gxkasd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxkas  = _ia_gxkas.fixedflag ?     ((void)((int)((a_gxkas/target)*MAX_PG_IAMP)), ia_gxkas) : (int)((a_gxkas/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1084_target=target,&_temp1084_target) : &target, (WF_PROCESSOR)wg_gzkas, &asloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1085_rtime=rtime,&_temp1085_rtime) : &rtime, _ftime.fixedflag ? (_temp1086_ftime=ftime,&_temp1086_ftime) : &ftime, (WF_PROCESSOR)wg_gzkas, &asloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzkas.fixedflag ? (_temp1087_a_gzkas=a_gzkas,&_temp1087_a_gzkas) : &a_gzkas, _pw_gzkasa.fixedflag ? (_temp1088_pw_gzkasa=pw_gzkasa,&_temp1088_pw_gzkasa) : &pw_gzkasa, _pw_gzkas.fixedflag ? (_temp1089_pw_gzkas=pw_gzkas,&_temp1089_pw_gzkas) : &pw_gzkas,
                          _pw_gzkasd.fixedflag ? (_temp1090_pw_gzkasd=pw_gzkasd,&_temp1090_pw_gzkasd) : &pw_gzkasd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzkas  = _ia_gzkas.fixedflag ?     ((void)((int)((a_gzkas/target)*MAX_PG_IAMP)), ia_gzkas) : (int)((a_gzkas/target)*MAX_PG_IAMP);
    }

{
  float target;
  gettarget(_target.fixedflag ? (_temp1091_target=target,&_temp1091_target) : &target, (WF_PROCESSOR)wg_xdixon, &asloggrd);
  ia_xdixon  = _ia_xdixon.fixedflag ?     ((void)((int)((a_xdixon/target)*MAX_PG_IAMP)), ia_xdixon) : (int)((a_xdixon/target)*MAX_PG_IAMP);
}

{
  float target;
  gettarget(_target.fixedflag ? (_temp1092_target=target,&_temp1092_target) : &target, (WF_PROCESSOR)wg_ydixon, &asloggrd);
  ia_ydixon  = _ia_ydixon.fixedflag ?     ((void)((int)((a_ydixon/target)*MAX_PG_IAMP)), ia_ydixon) : (int)((a_ydixon/target)*MAX_PG_IAMP);
}

{
  float target;
  gettarget(_target.fixedflag ? (_temp1093_target=target,&_temp1093_target) : &target, (WF_PROCESSOR)wg_zdixon, &asloggrd);
  ia_zdixon  = _ia_zdixon.fixedflag ?     ((void)((int)((a_zdixon/target)*MAX_PG_IAMP)), ia_zdixon) : (int)((a_zdixon/target)*MAX_PG_IAMP);
}

{
  float target;
  gettarget(_target.fixedflag ? (_temp1094_target=target,&_temp1094_target) : &target, (WF_PROCESSOR)wg_sdixon, &asloggrd);
  ia_sdixon  = _ia_sdixon.fixedflag ?     ((void)((int)((a_sdixon/target)*MAX_PG_IAMP)), ia_sdixon) : (int)((a_sdixon/target)*MAX_PG_IAMP);
}

{
  float target;
  gettarget(_target.fixedflag ? (_temp1095_target=target,&_temp1095_target) : &target, (WF_PROCESSOR)wg_sdixon2, &asloggrd);
  ia_sdixon2  = _ia_sdixon2.fixedflag ?     ((void)((int)((a_sdixon2/target)*MAX_PG_IAMP)), ia_sdixon2) : (int)((a_sdixon2/target)*MAX_PG_IAMP);
}







    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1096_target=target,&_temp1096_target) : &target, (WF_PROCESSOR)wg_gzrf1rs, &rsloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1097_rtime=rtime,&_temp1097_rtime) : &rtime, _ftime.fixedflag ? (_temp1098_ftime=ftime,&_temp1098_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf1rs, &rsloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf1rs.fixedflag ? (_temp1099_a_gzrf1rs=a_gzrf1rs,&_temp1099_a_gzrf1rs) : &a_gzrf1rs, _pw_gzrf1rsa.fixedflag ? (_temp1100_pw_gzrf1rsa=pw_gzrf1rsa,&_temp1100_pw_gzrf1rsa) : &pw_gzrf1rsa, _pw_gzrf1rs.fixedflag ? (_temp1101_pw_gzrf1rs=pw_gzrf1rs,&_temp1101_pw_gzrf1rs) : &pw_gzrf1rs,
                          _pw_gzrf1rsd.fixedflag ? (_temp1102_pw_gzrf1rsd=pw_gzrf1rsd,&_temp1102_pw_gzrf1rsd) : &pw_gzrf1rsd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf1rs  = _ia_gzrf1rs.fixedflag ?     ((void)((int)((a_gzrf1rs/target)*MAX_PG_IAMP)), ia_gzrf1rs) : (int)((a_gzrf1rs/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1103_target=target,&_temp1103_target) : &target, (WF_PROCESSOR)wg_gxkbsrs, &rsloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1104_rtime=rtime,&_temp1104_rtime) : &rtime, _ftime.fixedflag ? (_temp1105_ftime=ftime,&_temp1105_ftime) : &ftime, (WF_PROCESSOR)wg_gxkbsrs, &rsloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxkbsrs.fixedflag ? (_temp1106_a_gxkbsrs=a_gxkbsrs,&_temp1106_a_gxkbsrs) : &a_gxkbsrs, _pw_gxkbsrsa.fixedflag ? (_temp1107_pw_gxkbsrsa=pw_gxkbsrsa,&_temp1107_pw_gxkbsrsa) : &pw_gxkbsrsa, _pw_gxkbsrs.fixedflag ? (_temp1108_pw_gxkbsrs=pw_gxkbsrs,&_temp1108_pw_gxkbsrs) : &pw_gxkbsrs,
                          _pw_gxkbsrsd.fixedflag ? (_temp1109_pw_gxkbsrsd=pw_gxkbsrsd,&_temp1109_pw_gxkbsrsd) : &pw_gxkbsrsd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxkbsrs  = _ia_gxkbsrs.fixedflag ?     ((void)((int)((a_gxkbsrs/target)*MAX_PG_IAMP)), ia_gxkbsrs) : (int)((a_gxkbsrs/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1110_target=target,&_temp1110_target) : &target, (WF_PROCESSOR)wg_gz1rs, &rsloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1111_rtime=rtime,&_temp1111_rtime) : &rtime, _ftime.fixedflag ? (_temp1112_ftime=ftime,&_temp1112_ftime) : &ftime, (WF_PROCESSOR)wg_gz1rs, &rsloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz1rs.fixedflag ? (_temp1113_a_gz1rs=a_gz1rs,&_temp1113_a_gz1rs) : &a_gz1rs, _pw_gz1rsa.fixedflag ? (_temp1114_pw_gz1rsa=pw_gz1rsa,&_temp1114_pw_gz1rsa) : &pw_gz1rsa, _pw_gz1rs.fixedflag ? (_temp1115_pw_gz1rs=pw_gz1rs,&_temp1115_pw_gz1rs) : &pw_gz1rs,
                          _pw_gz1rsd.fixedflag ? (_temp1116_pw_gz1rsd=pw_gz1rsd,&_temp1116_pw_gz1rsd) : &pw_gz1rsd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz1rs  = _ia_gz1rs.fixedflag ?     ((void)((int)((a_gz1rs/target)*MAX_PG_IAMP)), ia_gz1rs) : (int)((a_gz1rs/target)*MAX_PG_IAMP);
    }

    {
        ia_rfbrs    = _ia_rfbrs.fixedflag ?    ((void)((int)(a_rfbrs*MAX_PG_IAMP)), ia_rfbrs) : (int)(a_rfbrs*MAX_PG_IAMP);
    }

    {
        ia_thetarfbrs    = _ia_thetarfbrs.fixedflag ?    ((void)((int)(a_thetarfbrs*MAX_PG_IAMP)), ia_thetarfbrs) : (int)(a_thetarfbrs*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1117_target=target,&_temp1117_target) : &target, (WF_PROCESSOR)wg_gzkbsrs, &rsloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1118_rtime=rtime,&_temp1118_rtime) : &rtime, _ftime.fixedflag ? (_temp1119_ftime=ftime,&_temp1119_ftime) : &ftime, (WF_PROCESSOR)wg_gzkbsrs, &rsloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzkbsrs.fixedflag ? (_temp1120_a_gzkbsrs=a_gzkbsrs,&_temp1120_a_gzkbsrs) : &a_gzkbsrs, _pw_gzkbsrsa.fixedflag ? (_temp1121_pw_gzkbsrsa=pw_gzkbsrsa,&_temp1121_pw_gzkbsrsa) : &pw_gzkbsrsa, _pw_gzkbsrs.fixedflag ? (_temp1122_pw_gzkbsrs=pw_gzkbsrs,&_temp1122_pw_gzkbsrs) : &pw_gzkbsrs,
                          _pw_gzkbsrsd.fixedflag ? (_temp1123_pw_gzkbsrsd=pw_gzkbsrsd,&_temp1123_pw_gzkbsrsd) : &pw_gzkbsrsd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzkbsrs  = _ia_gzkbsrs.fixedflag ?     ((void)((int)((a_gzkbsrs/target)*MAX_PG_IAMP)), ia_gzkbsrs) : (int)((a_gzkbsrs/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1124_target=target,&_temp1124_target) : &target, (WF_PROCESSOR)wg_gxwrs, &rsloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1125_rtime=rtime,&_temp1125_rtime) : &rtime, _ftime.fixedflag ? (_temp1126_ftime=ftime,&_temp1126_ftime) : &ftime, (WF_PROCESSOR)wg_gxwrs, &rsloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxwrs.fixedflag ? (_temp1127_a_gxwrs=a_gxwrs,&_temp1127_a_gxwrs) : &a_gxwrs, _pw_gxwrsa.fixedflag ? (_temp1128_pw_gxwrsa=pw_gxwrsa,&_temp1128_pw_gxwrsa) : &pw_gxwrsa, _pw_gxwrs.fixedflag ? (_temp1129_pw_gxwrs=pw_gxwrs,&_temp1129_pw_gxwrs) : &pw_gxwrs,
                          _pw_gxwrsd.fixedflag ? (_temp1130_pw_gxwrsd=pw_gxwrsd,&_temp1130_pw_gxwrsd) : &pw_gxwrsd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxwrs  = _ia_gxwrs.fixedflag ?     ((void)((int)((a_gxwrs/target)*MAX_PG_IAMP)), ia_gxwrs) : (int)((a_gxwrs/target)*MAX_PG_IAMP);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1131_target=target,&_temp1131_target) : &target, (WF_PROCESSOR)wg_gx2rs, &rsloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1132_rtime=rtime,&_temp1132_rtime) : &rtime, _ftime.fixedflag ? (_temp1133_ftime=ftime,&_temp1133_ftime) : &ftime, (WF_PROCESSOR)wg_gx2rs, &rsloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx2rs.fixedflag ? (_temp1134_a_gx2rs=a_gx2rs,&_temp1134_a_gx2rs) : &a_gx2rs, _pw_gx2rsa.fixedflag ? (_temp1135_pw_gx2rsa=pw_gx2rsa,&_temp1135_pw_gx2rsa) : &pw_gx2rsa, _pw_gx2rs.fixedflag ? (_temp1136_pw_gx2rs=pw_gx2rs,&_temp1136_pw_gx2rs) : &pw_gx2rs,
                          _pw_gx2rsd.fixedflag ? (_temp1137_pw_gx2rsd=pw_gx2rsd,&_temp1137_pw_gx2rsd) : &pw_gx2rsd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx2rs  = _ia_gx2rs.fixedflag ?     ((void)((int)((a_gx2rs/target)*MAX_PG_IAMP)), ia_gx2rs) : (int)((a_gx2rs/target)*MAX_PG_IAMP);
    }

    {
        float target;

        gettarget(_target.fixedflag ? (_temp1138_target=target,&_temp1138_target) : &target,(WF_PROCESSOR)wg_gy2rs,&rsloggrd);
        ia_gy2rs  = _ia_gy2rs.fixedflag ?      
            ((void)((int)((endview_scalers*a_gy2rs/target)*MAX_PG_IAMP)), ia_gy2rs) : (int)((endview_scalers*a_gy2rs/target)*MAX_PG_IAMP);
        ia_gy2rswa  = _ia_gy2rswa.fixedflag ?      
            ((void)((int)((endview_scalers*a_gy2rsa/target)*MAX_PG_IAMP)), ia_gy2rswa) : (int)((endview_scalers*a_gy2rsa/target)*MAX_PG_IAMP);
        ia_gy2rswb  = _ia_gy2rswb.fixedflag ?      
            ((void)((int)((endview_scalers*a_gy2rsb/target)*MAX_PG_IAMP)), ia_gy2rswb) : (int)((endview_scalers*a_gy2rsb/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1139_target=target,&_temp1139_target) : &target, (WF_PROCESSOR)wg_gxw2rs, &rsloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1140_rtime=rtime,&_temp1140_rtime) : &rtime, _ftime.fixedflag ? (_temp1141_ftime=ftime,&_temp1141_ftime) : &ftime, (WF_PROCESSOR)wg_gxw2rs, &rsloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxw2rs.fixedflag ? (_temp1142_a_gxw2rs=a_gxw2rs,&_temp1142_a_gxw2rs) : &a_gxw2rs, _pw_gxw2rsa.fixedflag ? (_temp1143_pw_gxw2rsa=pw_gxw2rsa,&_temp1143_pw_gxw2rsa) : &pw_gxw2rsa, _pw_gxw2rs.fixedflag ? (_temp1144_pw_gxw2rs=pw_gxw2rs,&_temp1144_pw_gxw2rs) : &pw_gxw2rs,
                          _pw_gxw2rsd.fixedflag ? (_temp1145_pw_gxw2rsd=pw_gxw2rsd,&_temp1145_pw_gxw2rsd) : &pw_gxw2rsd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxw2rs  = _ia_gxw2rs.fixedflag ?     ((void)((int)((a_gxw2rs/target)*MAX_PG_IAMP)), ia_gxw2rs) : (int)((a_gxw2rs/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1146_target=target,&_temp1146_target) : &target, (WF_PROCESSOR)wg_gx1rs, &rsloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1147_rtime=rtime,&_temp1147_rtime) : &rtime, _ftime.fixedflag ? (_temp1148_ftime=ftime,&_temp1148_ftime) : &ftime, (WF_PROCESSOR)wg_gx1rs, &rsloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx1rs.fixedflag ? (_temp1149_a_gx1rs=a_gx1rs,&_temp1149_a_gx1rs) : &a_gx1rs, _pw_gx1rsa.fixedflag ? (_temp1150_pw_gx1rsa=pw_gx1rsa,&_temp1150_pw_gx1rsa) : &pw_gx1rsa, _pw_gx1rs.fixedflag ? (_temp1151_pw_gx1rs=pw_gx1rs,&_temp1151_pw_gx1rs) : &pw_gx1rs,
                          _pw_gx1rsd.fixedflag ? (_temp1152_pw_gx1rsd=pw_gx1rsd,&_temp1152_pw_gx1rsd) : &pw_gx1rsd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx1rs  = _ia_gx1rs.fixedflag ?     ((void)((int)((a_gx1rs/target)*MAX_PG_IAMP)), ia_gx1rs) : (int)((a_gx1rs/target)*MAX_PG_IAMP);
    }

    {
        float target;

        gettarget(_target.fixedflag ? (_temp1153_target=target,&_temp1153_target) : &target,(WF_PROCESSOR)wg_gy1rrs,&rsloggrd);
        ia_gy1rrs  = _ia_gy1rrs.fixedflag ?      
            ((void)((int)((endview_scalers*a_gy1rrs/target)*MAX_PG_IAMP)), ia_gy1rrs) : (int)((endview_scalers*a_gy1rrs/target)*MAX_PG_IAMP);
        ia_gy1rrswa  = _ia_gy1rrswa.fixedflag ?      
            ((void)((int)((endview_scalers*a_gy1rrsa/target)*MAX_PG_IAMP)), ia_gy1rrswa) : (int)((endview_scalers*a_gy1rrsa/target)*MAX_PG_IAMP);
        ia_gy1rrswb  = _ia_gy1rrswb.fixedflag ?      
            ((void)((int)((endview_scalers*a_gy1rrsb/target)*MAX_PG_IAMP)), ia_gy1rrswb) : (int)((endview_scalers*a_gy1rrsb/target)*MAX_PG_IAMP);
    }

    {
        float target;

        gettarget(_target.fixedflag ? (_temp1154_target=target,&_temp1154_target) : &target,(WF_PROCESSOR)wg_gy1rs,&rsloggrd);
        ia_gy1rs  = _ia_gy1rs.fixedflag ?      
            ((void)((int)((endview_scalers*a_gy1rs/target)*MAX_PG_IAMP)), ia_gy1rs) : (int)((endview_scalers*a_gy1rs/target)*MAX_PG_IAMP);
        ia_gy1rswa  = _ia_gy1rswa.fixedflag ?      
            ((void)((int)((endview_scalers*a_gy1rsa/target)*MAX_PG_IAMP)), ia_gy1rswa) : (int)((endview_scalers*a_gy1rsa/target)*MAX_PG_IAMP);
        ia_gy1rswb  = _ia_gy1rswb.fixedflag ?      
            ((void)((int)((endview_scalers*a_gy1rsb/target)*MAX_PG_IAMP)), ia_gy1rswb) : (int)((endview_scalers*a_gy1rsb/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1155_target=target,&_temp1155_target) : &target, (WF_PROCESSOR)wg_gzkrs, &rsloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1156_rtime=rtime,&_temp1156_rtime) : &rtime, _ftime.fixedflag ? (_temp1157_ftime=ftime,&_temp1157_ftime) : &ftime, (WF_PROCESSOR)wg_gzkrs, &rsloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzkrs.fixedflag ? (_temp1158_a_gzkrs=a_gzkrs,&_temp1158_a_gzkrs) : &a_gzkrs, _pw_gzkrsa.fixedflag ? (_temp1159_pw_gzkrsa=pw_gzkrsa,&_temp1159_pw_gzkrsa) : &pw_gzkrsa, _pw_gzkrs.fixedflag ? (_temp1160_pw_gzkrs=pw_gzkrs,&_temp1160_pw_gzkrs) : &pw_gzkrs,
                          _pw_gzkrsd.fixedflag ? (_temp1161_pw_gzkrsd=pw_gzkrsd,&_temp1161_pw_gzkrsd) : &pw_gzkrsd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzkrs  = _ia_gzkrs.fixedflag ?     ((void)((int)((a_gzkrs/target)*MAX_PG_IAMP)), ia_gzkrs) : (int)((a_gzkrs/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1162_target=target,&_temp1162_target) : &target, (WF_PROCESSOR)wg_gxkrs, &rsloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1163_rtime=rtime,&_temp1163_rtime) : &rtime, _ftime.fixedflag ? (_temp1164_ftime=ftime,&_temp1164_ftime) : &ftime, (WF_PROCESSOR)wg_gxkrs, &rsloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxkrs.fixedflag ? (_temp1165_a_gxkrs=a_gxkrs,&_temp1165_a_gxkrs) : &a_gxkrs, _pw_gxkrsa.fixedflag ? (_temp1166_pw_gxkrsa=pw_gxkrsa,&_temp1166_pw_gxkrsa) : &pw_gxkrsa, _pw_gxkrs.fixedflag ? (_temp1167_pw_gxkrs=pw_gxkrs,&_temp1167_pw_gxkrs) : &pw_gxkrs,
                          _pw_gxkrsd.fixedflag ? (_temp1168_pw_gxkrsd=pw_gxkrsd,&_temp1168_pw_gxkrsd) : &pw_gxkrsd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxkrs  = _ia_gxkrs.fixedflag ?     ((void)((int)((a_gxkrs/target)*MAX_PG_IAMP)), ia_gxkrs) : (int)((a_gxkrs/target)*MAX_PG_IAMP);
    }





    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1169_target=target,&_temp1169_target) : &target, (WF_PROCESSOR)wg_gzrf1dtg, &dtgloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1170_rtime=rtime,&_temp1170_rtime) : &rtime, _ftime.fixedflag ? (_temp1171_ftime=ftime,&_temp1171_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf1dtg, &dtgloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf1dtg.fixedflag ? (_temp1172_a_gzrf1dtg=a_gzrf1dtg,&_temp1172_a_gzrf1dtg) : &a_gzrf1dtg, _pw_gzrf1dtga.fixedflag ? (_temp1173_pw_gzrf1dtga=pw_gzrf1dtga,&_temp1173_pw_gzrf1dtga) : &pw_gzrf1dtga, _pw_gzrf1dtg.fixedflag ? (_temp1174_pw_gzrf1dtg=pw_gzrf1dtg,&_temp1174_pw_gzrf1dtg) : &pw_gzrf1dtg,
                          _pw_gzrf1dtgd.fixedflag ? (_temp1175_pw_gzrf1dtgd=pw_gzrf1dtgd,&_temp1175_pw_gzrf1dtgd) : &pw_gzrf1dtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf1dtg  = _ia_gzrf1dtg.fixedflag ?     ((void)((int)((a_gzrf1dtg/target)*MAX_PG_IAMP)), ia_gzrf1dtg) : (int)((a_gzrf1dtg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1176_target=target,&_temp1176_target) : &target, (WF_PROCESSOR)wg_gxkbsdtg, &dtgloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1177_rtime=rtime,&_temp1177_rtime) : &rtime, _ftime.fixedflag ? (_temp1178_ftime=ftime,&_temp1178_ftime) : &ftime, (WF_PROCESSOR)wg_gxkbsdtg, &dtgloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxkbsdtg.fixedflag ? (_temp1179_a_gxkbsdtg=a_gxkbsdtg,&_temp1179_a_gxkbsdtg) : &a_gxkbsdtg, _pw_gxkbsdtga.fixedflag ? (_temp1180_pw_gxkbsdtga=pw_gxkbsdtga,&_temp1180_pw_gxkbsdtga) : &pw_gxkbsdtga, _pw_gxkbsdtg.fixedflag ? (_temp1181_pw_gxkbsdtg=pw_gxkbsdtg,&_temp1181_pw_gxkbsdtg) : &pw_gxkbsdtg,
                          _pw_gxkbsdtgd.fixedflag ? (_temp1182_pw_gxkbsdtgd=pw_gxkbsdtgd,&_temp1182_pw_gxkbsdtgd) : &pw_gxkbsdtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxkbsdtg  = _ia_gxkbsdtg.fixedflag ?     ((void)((int)((a_gxkbsdtg/target)*MAX_PG_IAMP)), ia_gxkbsdtg) : (int)((a_gxkbsdtg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1183_target=target,&_temp1183_target) : &target, (WF_PROCESSOR)wg_gz1dtg, &dtgloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1184_rtime=rtime,&_temp1184_rtime) : &rtime, _ftime.fixedflag ? (_temp1185_ftime=ftime,&_temp1185_ftime) : &ftime, (WF_PROCESSOR)wg_gz1dtg, &dtgloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz1dtg.fixedflag ? (_temp1186_a_gz1dtg=a_gz1dtg,&_temp1186_a_gz1dtg) : &a_gz1dtg, _pw_gz1dtga.fixedflag ? (_temp1187_pw_gz1dtga=pw_gz1dtga,&_temp1187_pw_gz1dtga) : &pw_gz1dtga, _pw_gz1dtg.fixedflag ? (_temp1188_pw_gz1dtg=pw_gz1dtg,&_temp1188_pw_gz1dtg) : &pw_gz1dtg,
                          _pw_gz1dtgd.fixedflag ? (_temp1189_pw_gz1dtgd=pw_gz1dtgd,&_temp1189_pw_gz1dtgd) : &pw_gz1dtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz1dtg  = _ia_gz1dtg.fixedflag ?     ((void)((int)((a_gz1dtg/target)*MAX_PG_IAMP)), ia_gz1dtg) : (int)((a_gz1dtg/target)*MAX_PG_IAMP);
    }

    {
        ia_rfbdtg    = _ia_rfbdtg.fixedflag ?    ((void)((int)(a_rfbdtg*MAX_PG_IAMP)), ia_rfbdtg) : (int)(a_rfbdtg*MAX_PG_IAMP);
    }

    {
        ia_thetarfbdtg    = _ia_thetarfbdtg.fixedflag ?    ((void)((int)(a_thetarfbdtg*MAX_PG_IAMP)), ia_thetarfbdtg) : (int)(a_thetarfbdtg*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1190_target=target,&_temp1190_target) : &target, (WF_PROCESSOR)wg_gzkbsdtg, &dtgloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1191_rtime=rtime,&_temp1191_rtime) : &rtime, _ftime.fixedflag ? (_temp1192_ftime=ftime,&_temp1192_ftime) : &ftime, (WF_PROCESSOR)wg_gzkbsdtg, &dtgloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzkbsdtg.fixedflag ? (_temp1193_a_gzkbsdtg=a_gzkbsdtg,&_temp1193_a_gzkbsdtg) : &a_gzkbsdtg, _pw_gzkbsdtga.fixedflag ? (_temp1194_pw_gzkbsdtga=pw_gzkbsdtga,&_temp1194_pw_gzkbsdtga) : &pw_gzkbsdtga, _pw_gzkbsdtg.fixedflag ? (_temp1195_pw_gzkbsdtg=pw_gzkbsdtg,&_temp1195_pw_gzkbsdtg) : &pw_gzkbsdtg,
                          _pw_gzkbsdtgd.fixedflag ? (_temp1196_pw_gzkbsdtgd=pw_gzkbsdtgd,&_temp1196_pw_gzkbsdtgd) : &pw_gzkbsdtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzkbsdtg  = _ia_gzkbsdtg.fixedflag ?     ((void)((int)((a_gzkbsdtg/target)*MAX_PG_IAMP)), ia_gzkbsdtg) : (int)((a_gzkbsdtg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1197_target=target,&_temp1197_target) : &target, (WF_PROCESSOR)wg_gxwdtg, &dtgloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1198_rtime=rtime,&_temp1198_rtime) : &rtime, _ftime.fixedflag ? (_temp1199_ftime=ftime,&_temp1199_ftime) : &ftime, (WF_PROCESSOR)wg_gxwdtg, &dtgloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxwdtg.fixedflag ? (_temp1200_a_gxwdtg=a_gxwdtg,&_temp1200_a_gxwdtg) : &a_gxwdtg, _pw_gxwdtga.fixedflag ? (_temp1201_pw_gxwdtga=pw_gxwdtga,&_temp1201_pw_gxwdtga) : &pw_gxwdtga, _pw_gxwdtg.fixedflag ? (_temp1202_pw_gxwdtg=pw_gxwdtg,&_temp1202_pw_gxwdtg) : &pw_gxwdtg,
                          _pw_gxwdtgd.fixedflag ? (_temp1203_pw_gxwdtgd=pw_gxwdtgd,&_temp1203_pw_gxwdtgd) : &pw_gxwdtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxwdtg  = _ia_gxwdtg.fixedflag ?     ((void)((int)((a_gxwdtg/target)*MAX_PG_IAMP)), ia_gxwdtg) : (int)((a_gxwdtg/target)*MAX_PG_IAMP);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1204_target=target,&_temp1204_target) : &target, (WF_PROCESSOR)wg_gx2dtg, &dtgloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1205_rtime=rtime,&_temp1205_rtime) : &rtime, _ftime.fixedflag ? (_temp1206_ftime=ftime,&_temp1206_ftime) : &ftime, (WF_PROCESSOR)wg_gx2dtg, &dtgloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx2dtg.fixedflag ? (_temp1207_a_gx2dtg=a_gx2dtg,&_temp1207_a_gx2dtg) : &a_gx2dtg, _pw_gx2dtga.fixedflag ? (_temp1208_pw_gx2dtga=pw_gx2dtga,&_temp1208_pw_gx2dtga) : &pw_gx2dtga, _pw_gx2dtg.fixedflag ? (_temp1209_pw_gx2dtg=pw_gx2dtg,&_temp1209_pw_gx2dtg) : &pw_gx2dtg,
                          _pw_gx2dtgd.fixedflag ? (_temp1210_pw_gx2dtgd=pw_gx2dtgd,&_temp1210_pw_gx2dtgd) : &pw_gx2dtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx2dtg  = _ia_gx2dtg.fixedflag ?     ((void)((int)((a_gx2dtg/target)*MAX_PG_IAMP)), ia_gx2dtg) : (int)((a_gx2dtg/target)*MAX_PG_IAMP);
    }

    {
        float target;

        gettarget(_target.fixedflag ? (_temp1211_target=target,&_temp1211_target) : &target,(WF_PROCESSOR)wg_gy2dtg,&dtgloggrd);
        ia_gy2dtg  = _ia_gy2dtg.fixedflag ?      
            ((void)((int)((endview_scaledtg*a_gy2dtg/target)*MAX_PG_IAMP)), ia_gy2dtg) : (int)((endview_scaledtg*a_gy2dtg/target)*MAX_PG_IAMP);
        ia_gy2dtgwa  = _ia_gy2dtgwa.fixedflag ?      
            ((void)((int)((endview_scaledtg*a_gy2dtga/target)*MAX_PG_IAMP)), ia_gy2dtgwa) : (int)((endview_scaledtg*a_gy2dtga/target)*MAX_PG_IAMP);
        ia_gy2dtgwb  = _ia_gy2dtgwb.fixedflag ?      
            ((void)((int)((endview_scaledtg*a_gy2dtgb/target)*MAX_PG_IAMP)), ia_gy2dtgwb) : (int)((endview_scaledtg*a_gy2dtgb/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1212_target=target,&_temp1212_target) : &target, (WF_PROCESSOR)wg_gxw2dtg, &dtgloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1213_rtime=rtime,&_temp1213_rtime) : &rtime, _ftime.fixedflag ? (_temp1214_ftime=ftime,&_temp1214_ftime) : &ftime, (WF_PROCESSOR)wg_gxw2dtg, &dtgloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxw2dtg.fixedflag ? (_temp1215_a_gxw2dtg=a_gxw2dtg,&_temp1215_a_gxw2dtg) : &a_gxw2dtg, _pw_gxw2dtga.fixedflag ? (_temp1216_pw_gxw2dtga=pw_gxw2dtga,&_temp1216_pw_gxw2dtga) : &pw_gxw2dtga, _pw_gxw2dtg.fixedflag ? (_temp1217_pw_gxw2dtg=pw_gxw2dtg,&_temp1217_pw_gxw2dtg) : &pw_gxw2dtg,
                          _pw_gxw2dtgd.fixedflag ? (_temp1218_pw_gxw2dtgd=pw_gxw2dtgd,&_temp1218_pw_gxw2dtgd) : &pw_gxw2dtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxw2dtg  = _ia_gxw2dtg.fixedflag ?     ((void)((int)((a_gxw2dtg/target)*MAX_PG_IAMP)), ia_gxw2dtg) : (int)((a_gxw2dtg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1219_target=target,&_temp1219_target) : &target, (WF_PROCESSOR)wg_gx1dtg, &dtgloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1220_rtime=rtime,&_temp1220_rtime) : &rtime, _ftime.fixedflag ? (_temp1221_ftime=ftime,&_temp1221_ftime) : &ftime, (WF_PROCESSOR)wg_gx1dtg, &dtgloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx1dtg.fixedflag ? (_temp1222_a_gx1dtg=a_gx1dtg,&_temp1222_a_gx1dtg) : &a_gx1dtg, _pw_gx1dtga.fixedflag ? (_temp1223_pw_gx1dtga=pw_gx1dtga,&_temp1223_pw_gx1dtga) : &pw_gx1dtga, _pw_gx1dtg.fixedflag ? (_temp1224_pw_gx1dtg=pw_gx1dtg,&_temp1224_pw_gx1dtg) : &pw_gx1dtg,
                          _pw_gx1dtgd.fixedflag ? (_temp1225_pw_gx1dtgd=pw_gx1dtgd,&_temp1225_pw_gx1dtgd) : &pw_gx1dtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx1dtg  = _ia_gx1dtg.fixedflag ?     ((void)((int)((a_gx1dtg/target)*MAX_PG_IAMP)), ia_gx1dtg) : (int)((a_gx1dtg/target)*MAX_PG_IAMP);
    }

    {
        float target;

        gettarget(_target.fixedflag ? (_temp1226_target=target,&_temp1226_target) : &target,(WF_PROCESSOR)wg_gy1rdtg,&dtgloggrd);
        ia_gy1rdtg  = _ia_gy1rdtg.fixedflag ?      
            ((void)((int)((endview_scaledtg*a_gy1rdtg/target)*MAX_PG_IAMP)), ia_gy1rdtg) : (int)((endview_scaledtg*a_gy1rdtg/target)*MAX_PG_IAMP);
        ia_gy1rdtgwa  = _ia_gy1rdtgwa.fixedflag ?      
            ((void)((int)((endview_scaledtg*a_gy1rdtga/target)*MAX_PG_IAMP)), ia_gy1rdtgwa) : (int)((endview_scaledtg*a_gy1rdtga/target)*MAX_PG_IAMP);
        ia_gy1rdtgwb  = _ia_gy1rdtgwb.fixedflag ?      
            ((void)((int)((endview_scaledtg*a_gy1rdtgb/target)*MAX_PG_IAMP)), ia_gy1rdtgwb) : (int)((endview_scaledtg*a_gy1rdtgb/target)*MAX_PG_IAMP);
    }

    {
        float target;

        gettarget(_target.fixedflag ? (_temp1227_target=target,&_temp1227_target) : &target,(WF_PROCESSOR)wg_gy1dtg,&dtgloggrd);
        ia_gy1dtg  = _ia_gy1dtg.fixedflag ?      
            ((void)((int)((endview_scaledtg*a_gy1dtg/target)*MAX_PG_IAMP)), ia_gy1dtg) : (int)((endview_scaledtg*a_gy1dtg/target)*MAX_PG_IAMP);
        ia_gy1dtgwa  = _ia_gy1dtgwa.fixedflag ?      
            ((void)((int)((endview_scaledtg*a_gy1dtga/target)*MAX_PG_IAMP)), ia_gy1dtgwa) : (int)((endview_scaledtg*a_gy1dtga/target)*MAX_PG_IAMP);
        ia_gy1dtgwb  = _ia_gy1dtgwb.fixedflag ?      
            ((void)((int)((endview_scaledtg*a_gy1dtgb/target)*MAX_PG_IAMP)), ia_gy1dtgwb) : (int)((endview_scaledtg*a_gy1dtgb/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1228_target=target,&_temp1228_target) : &target, (WF_PROCESSOR)wg_gzkdtg, &dtgloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1229_rtime=rtime,&_temp1229_rtime) : &rtime, _ftime.fixedflag ? (_temp1230_ftime=ftime,&_temp1230_ftime) : &ftime, (WF_PROCESSOR)wg_gzkdtg, &dtgloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzkdtg.fixedflag ? (_temp1231_a_gzkdtg=a_gzkdtg,&_temp1231_a_gzkdtg) : &a_gzkdtg, _pw_gzkdtga.fixedflag ? (_temp1232_pw_gzkdtga=pw_gzkdtga,&_temp1232_pw_gzkdtga) : &pw_gzkdtga, _pw_gzkdtg.fixedflag ? (_temp1233_pw_gzkdtg=pw_gzkdtg,&_temp1233_pw_gzkdtg) : &pw_gzkdtg,
                          _pw_gzkdtgd.fixedflag ? (_temp1234_pw_gzkdtgd=pw_gzkdtgd,&_temp1234_pw_gzkdtgd) : &pw_gzkdtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzkdtg  = _ia_gzkdtg.fixedflag ?     ((void)((int)((a_gzkdtg/target)*MAX_PG_IAMP)), ia_gzkdtg) : (int)((a_gzkdtg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1235_target=target,&_temp1235_target) : &target, (WF_PROCESSOR)wg_gxkdtg, &dtgloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1236_rtime=rtime,&_temp1236_rtime) : &rtime, _ftime.fixedflag ? (_temp1237_ftime=ftime,&_temp1237_ftime) : &ftime, (WF_PROCESSOR)wg_gxkdtg, &dtgloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxkdtg.fixedflag ? (_temp1238_a_gxkdtg=a_gxkdtg,&_temp1238_a_gxkdtg) : &a_gxkdtg, _pw_gxkdtga.fixedflag ? (_temp1239_pw_gxkdtga=pw_gxkdtga,&_temp1239_pw_gxkdtga) : &pw_gxkdtga, _pw_gxkdtg.fixedflag ? (_temp1240_pw_gxkdtg=pw_gxkdtg,&_temp1240_pw_gxkdtg) : &pw_gxkdtg,
                          _pw_gxkdtgd.fixedflag ? (_temp1241_pw_gxkdtgd=pw_gxkdtgd,&_temp1241_pw_gxkdtgd) : &pw_gxkdtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxkdtg  = _ia_gxkdtg.fixedflag ?     ((void)((int)((a_gxkdtg/target)*MAX_PG_IAMP)), ia_gxkdtg) : (int)((a_gxkdtg/target)*MAX_PG_IAMP);
    }




    {
        ia_rf1cal    = _ia_rf1cal.fixedflag ?    ((void)((int)(a_rf1cal*MAX_PG_IAMP)), ia_rf1cal) : (int)(a_rf1cal*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1242_target=target,&_temp1242_target) : &target, (WF_PROCESSOR)wg_gzrf1cal, &calloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1243_rtime=rtime,&_temp1243_rtime) : &rtime, _ftime.fixedflag ? (_temp1244_ftime=ftime,&_temp1244_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf1cal, &calloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf1cal.fixedflag ? (_temp1245_a_gzrf1cal=a_gzrf1cal,&_temp1245_a_gzrf1cal) : &a_gzrf1cal, _pw_gzrf1cala.fixedflag ? (_temp1246_pw_gzrf1cala=pw_gzrf1cala,&_temp1246_pw_gzrf1cala) : &pw_gzrf1cala, _pw_gzrf1cal.fixedflag ? (_temp1247_pw_gzrf1cal=pw_gzrf1cal,&_temp1247_pw_gzrf1cal) : &pw_gzrf1cal,
                          _pw_gzrf1cald.fixedflag ? (_temp1248_pw_gzrf1cald=pw_gzrf1cald,&_temp1248_pw_gzrf1cald) : &pw_gzrf1cald) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf1cal  = _ia_gzrf1cal.fixedflag ?     ((void)((int)((a_gzrf1cal/target)*MAX_PG_IAMP)), ia_gzrf1cal) : (int)((a_gzrf1cal/target)*MAX_PG_IAMP);
    }

{
   float target;
   int rtime,ftime;

   gettarget(_target.fixedflag ? (_temp1249_target=target,&_temp1249_target) : &target, (WF_PROCESSOR)wg_gzcombcal, &calloggrd);
   getramptime(_rtime.fixedflag ? (_temp1250_rtime=rtime,&_temp1250_rtime) : &rtime, _ftime.fixedflag ? (_temp1251_ftime=ftime,&_temp1251_ftime) : &ftime, (WF_PROCESSOR)wg_gzcombcal, &calloggrd);
   if (TYPNDEF == TYPDEF) {
     if (amppwgrad((float)(0.0),target,0.0,0.0,rtime,MIN_PLATEAU_TIME,
				 _a_gzcombcal.fixedflag ? (_temp1252_a_gzcombcal=a_gzcombcal,&_temp1252_a_gzcombcal) : &a_gzcombcal, _pw_gzcombcala.fixedflag ? (_temp1253_pw_gzcombcala=pw_gzcombcala,&_temp1253_pw_gzcombcala) : &pw_gzcombcala, _pw_gzcombcal.fixedflag ? (_temp1254_pw_gzcombcal=pw_gzcombcal,&_temp1254_pw_gzcombcal) : &pw_gzcombcal,
				 _pw_gzcombcald.fixedflag ? (_temp1255_pw_gzcombcald=pw_gzcombcald,&_temp1255_pw_gzcombcald) : &pw_gzcombcald) == FAILURE) return FAILURE;
   }
   if (TRAP_ALL_SLOPED & TRAP_SLOPED)
     {
       ia_gzcombcal  = _ia_gzcombcal.fixedflag ?       ((void)((int)((endviewz_scalecal*a_gzcombcal/target)*MAX_PG_IAMP)), ia_gzcombcal) : (int)((endviewz_scalecal*a_gzcombcal/target)*MAX_PG_IAMP);
       ia_gzcombcalwa  = _ia_gzcombcalwa.fixedflag ?       ((void)((int)((endviewz_scalecal*a_gzcombcala/target)*MAX_PG_IAMP)), ia_gzcombcalwa) : (int)((endviewz_scalecal*a_gzcombcala/target)*MAX_PG_IAMP);
       ia_gzcombcalwb  = _ia_gzcombcalwb.fixedflag ?       ((void)((int)((endviewz_scalecal*a_gzcombcalb/target)*MAX_PG_IAMP)), ia_gzcombcalwb) : (int)((endviewz_scalecal*a_gzcombcalb/target)*MAX_PG_IAMP);
     }
   else  /* standard trapezoid */
     {
       ia_gzcombcal  = _ia_gzcombcal.fixedflag ?     ((void)((int)((a_gzcombcal/target)*MAX_PG_IAMP)), ia_gzcombcal) : (int)((a_gzcombcal/target)*MAX_PG_IAMP);
       ia_gzcombcalwa  = _ia_gzcombcalwa.fixedflag ?   ((void)(MAX_PG_WAMP), ia_gzcombcalwa) : MAX_PG_WAMP;
       ia_gzcombcalwb  = _ia_gzcombcalwb.fixedflag ?  ((void)(MAX_PG_WAMP), ia_gzcombcalwb) : MAX_PG_WAMP;
     }

   if ((wg_gzcombcal==TYPRHO1)||(wg_gzcombcal==TYPRHO2) ||
       (wg_gzcombcal==TYPTHETA)||(wg_gzcombcal==TYPOMEGA))
     {				/* Determine min period */
       per_gzcombcal  = _per_gzcombcal.fixedflag ?  ((void)((RF_UPDATE_TIME)), per_gzcombcal) : (RF_UPDATE_TIME); 
     }
   else
     {
       per_gzcombcal  = _per_gzcombcal.fixedflag ?  ((void)((GRAD_UPDATE_TIME)), per_gzcombcal) : (GRAD_UPDATE_TIME);
     }

   /* set leading edge pulse width */
   if (0 != 0)
     pw_gzcombcalf  = _pw_gzcombcalf.fixedflag ?  ((void)(IMax(2,GRAD_UPDATE_TIME,0)), pw_gzcombcalf) : IMax(2,GRAD_UPDATE_TIME,0);
   else
     pw_gzcombcalf  = _pw_gzcombcalf.fixedflag ?  ((void)(0), pw_gzcombcalf) : 0;

   if ((wg_gzcombcal==TYPRHO1)||(wg_gzcombcal==TYPRHO2) ||
       (wg_gzcombcal==TYPTHETA)||(wg_gzcombcal==TYPOMEGA))
     pw_gzcombcal  = _pw_gzcombcal.fixedflag ?  ((void)(0), pw_gzcombcal) : 0;    /* no need for leading edge if rf */

   res_gzcombcal  = _res_gzcombcal.fixedflag ? 		/* Find resolution */
           
       ((void)((pw_gzcombcalf+pw_gzcombcala+pw_gzcombcal+pw_gzcombcald)/per_gzcombcal), res_gzcombcal) : (pw_gzcombcalf+pw_gzcombcala+pw_gzcombcal+pw_gzcombcald)/per_gzcombcal;
}

{
   float target;
   int rtime,ftime;

   gettarget(_target.fixedflag ? (_temp1256_target=target,&_temp1256_target) : &target, (WF_PROCESSOR)wg_gzprcal, &calloggrd);
   getramptime(_rtime.fixedflag ? (_temp1257_rtime=rtime,&_temp1257_rtime) : &rtime, _ftime.fixedflag ? (_temp1258_ftime=ftime,&_temp1258_ftime) : &ftime, (WF_PROCESSOR)wg_gzprcal, &calloggrd);
   if (TYPNDEF == TYPDEF) {
     if (amppwgrad((float)(0.0),target,0.0,0.0,rtime,MIN_PLATEAU_TIME,
				 _a_gzprcal.fixedflag ? (_temp1259_a_gzprcal=a_gzprcal,&_temp1259_a_gzprcal) : &a_gzprcal, _pw_gzprcala.fixedflag ? (_temp1260_pw_gzprcala=pw_gzprcala,&_temp1260_pw_gzprcala) : &pw_gzprcala, _pw_gzprcal.fixedflag ? (_temp1261_pw_gzprcal=pw_gzprcal,&_temp1261_pw_gzprcal) : &pw_gzprcal,
				 _pw_gzprcald.fixedflag ? (_temp1262_pw_gzprcald=pw_gzprcald,&_temp1262_pw_gzprcald) : &pw_gzprcald) == FAILURE) return FAILURE;
   }
   if (TRAP_ALL_SLOPED & TRAP_SLOPED)
     {
       ia_gzprcal  = _ia_gzprcal.fixedflag ?       ((void)((int)((endviewz_scalecal*a_gzprcal/target)*MAX_PG_IAMP)), ia_gzprcal) : (int)((endviewz_scalecal*a_gzprcal/target)*MAX_PG_IAMP);
       ia_gzprcalwa  = _ia_gzprcalwa.fixedflag ?       ((void)((int)((endviewz_scalecal*a_gzprcala/target)*MAX_PG_IAMP)), ia_gzprcalwa) : (int)((endviewz_scalecal*a_gzprcala/target)*MAX_PG_IAMP);
       ia_gzprcalwb  = _ia_gzprcalwb.fixedflag ?       ((void)((int)((endviewz_scalecal*a_gzprcalb/target)*MAX_PG_IAMP)), ia_gzprcalwb) : (int)((endviewz_scalecal*a_gzprcalb/target)*MAX_PG_IAMP);
     }
   else  /* standard trapezoid */
     {
       ia_gzprcal  = _ia_gzprcal.fixedflag ?     ((void)((int)((a_gzprcal/target)*MAX_PG_IAMP)), ia_gzprcal) : (int)((a_gzprcal/target)*MAX_PG_IAMP);
       ia_gzprcalwa  = _ia_gzprcalwa.fixedflag ?   ((void)(MAX_PG_WAMP), ia_gzprcalwa) : MAX_PG_WAMP;
       ia_gzprcalwb  = _ia_gzprcalwb.fixedflag ?  ((void)(MAX_PG_WAMP), ia_gzprcalwb) : MAX_PG_WAMP;
     }

   if ((wg_gzprcal==TYPRHO1)||(wg_gzprcal==TYPRHO2) ||
       (wg_gzprcal==TYPTHETA)||(wg_gzprcal==TYPOMEGA))
     {				/* Determine min period */
       per_gzprcal  = _per_gzprcal.fixedflag ?  ((void)((RF_UPDATE_TIME)), per_gzprcal) : (RF_UPDATE_TIME); 
     }
   else
     {
       per_gzprcal  = _per_gzprcal.fixedflag ?  ((void)((GRAD_UPDATE_TIME)), per_gzprcal) : (GRAD_UPDATE_TIME);
     }

   /* set leading edge pulse width */
   if (0 != 0)
     pw_gzprcalf  = _pw_gzprcalf.fixedflag ?  ((void)(IMax(2,GRAD_UPDATE_TIME,0)), pw_gzprcalf) : IMax(2,GRAD_UPDATE_TIME,0);
   else
     pw_gzprcalf  = _pw_gzprcalf.fixedflag ?  ((void)(0), pw_gzprcalf) : 0;

   if ((wg_gzprcal==TYPRHO1)||(wg_gzprcal==TYPRHO2) ||
       (wg_gzprcal==TYPTHETA)||(wg_gzprcal==TYPOMEGA))
     pw_gzprcal  = _pw_gzprcal.fixedflag ?  ((void)(0), pw_gzprcal) : 0;    /* no need for leading edge if rf */

   res_gzprcal  = _res_gzprcal.fixedflag ? 		/* Find resolution */
           
       ((void)((pw_gzprcalf+pw_gzprcala+pw_gzprcal+pw_gzprcald)/per_gzprcal), res_gzprcal) : (pw_gzprcalf+pw_gzprcala+pw_gzprcal+pw_gzprcald)/per_gzprcal;
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1263_target=target,&_temp1263_target) : &target, (WF_PROCESSOR)wg_gxwcal, &calloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1264_rtime=rtime,&_temp1264_rtime) : &rtime, _ftime.fixedflag ? (_temp1265_ftime=ftime,&_temp1265_ftime) : &ftime, (WF_PROCESSOR)wg_gxwcal, &calloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxwcal.fixedflag ? (_temp1266_a_gxwcal=a_gxwcal,&_temp1266_a_gxwcal) : &a_gxwcal, _pw_gxwcala.fixedflag ? (_temp1267_pw_gxwcala=pw_gxwcala,&_temp1267_pw_gxwcala) : &pw_gxwcala, _pw_gxwcal.fixedflag ? (_temp1268_pw_gxwcal=pw_gxwcal,&_temp1268_pw_gxwcal) : &pw_gxwcal,
                          _pw_gxwcald.fixedflag ? (_temp1269_pw_gxwcald=pw_gxwcald,&_temp1269_pw_gxwcald) : &pw_gxwcald) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxwcal  = _ia_gxwcal.fixedflag ?     ((void)((int)((a_gxwcal/target)*MAX_PG_IAMP)), ia_gxwcal) : (int)((a_gxwcal/target)*MAX_PG_IAMP);
    }



{
   float target;
   int rtime,ftime;

   gettarget(_target.fixedflag ? (_temp1270_target=target,&_temp1270_target) : &target, (WF_PROCESSOR)wg_gx1cal, &calloggrd);
   getramptime(_rtime.fixedflag ? (_temp1271_rtime=rtime,&_temp1271_rtime) : &rtime, _ftime.fixedflag ? (_temp1272_ftime=ftime,&_temp1272_ftime) : &ftime, (WF_PROCESSOR)wg_gx1cal, &calloggrd);
   if (TYPNDEF == TYPDEF) {
     if (amppwgrad((float)(0),target,0.0,0.0,rtime,MIN_PLATEAU_TIME,
				 _a_gx1cal.fixedflag ? (_temp1273_a_gx1cal=a_gx1cal,&_temp1273_a_gx1cal) : &a_gx1cal, _pw_gx1cala.fixedflag ? (_temp1274_pw_gx1cala=pw_gx1cala,&_temp1274_pw_gx1cala) : &pw_gx1cala, _pw_gx1cal.fixedflag ? (_temp1275_pw_gx1cal=pw_gx1cal,&_temp1275_pw_gx1cal) : &pw_gx1cal,
				 _pw_gx1cald.fixedflag ? (_temp1276_pw_gx1cald=pw_gx1cald,&_temp1276_pw_gx1cald) : &pw_gx1cald) == FAILURE) return FAILURE;
   }
   if (TRAP_ALL & TRAP_SLOPED)
     {
       ia_gx1cal  = _ia_gx1cal.fixedflag ?       ((void)((int)((1.0*a_gx1cal/target)*MAX_PG_IAMP)), ia_gx1cal) : (int)((1.0*a_gx1cal/target)*MAX_PG_IAMP);
       ia_gx1calwa  = _ia_gx1calwa.fixedflag ?       ((void)((int)((1.0*a_gx1cala/target)*MAX_PG_IAMP)), ia_gx1calwa) : (int)((1.0*a_gx1cala/target)*MAX_PG_IAMP);
       ia_gx1calwb  = _ia_gx1calwb.fixedflag ?       ((void)((int)((1.0*a_gx1calb/target)*MAX_PG_IAMP)), ia_gx1calwb) : (int)((1.0*a_gx1calb/target)*MAX_PG_IAMP);
     }
   else  /* standard trapezoid */
     {
       ia_gx1cal  = _ia_gx1cal.fixedflag ?     ((void)((int)((a_gx1cal/target)*MAX_PG_IAMP)), ia_gx1cal) : (int)((a_gx1cal/target)*MAX_PG_IAMP);
       ia_gx1calwa  = _ia_gx1calwa.fixedflag ?   ((void)(MAX_PG_WAMP), ia_gx1calwa) : MAX_PG_WAMP;
       ia_gx1calwb  = _ia_gx1calwb.fixedflag ?  ((void)(MAX_PG_WAMP), ia_gx1calwb) : MAX_PG_WAMP;
     }

   if ((wg_gx1cal==TYPRHO1)||(wg_gx1cal==TYPRHO2) ||
       (wg_gx1cal==TYPTHETA)||(wg_gx1cal==TYPOMEGA))
     {				/* Determine min period */
       per_gx1cal  = _per_gx1cal.fixedflag ?  ((void)((RF_UPDATE_TIME)), per_gx1cal) : (RF_UPDATE_TIME); 
     }
   else
     {
       per_gx1cal  = _per_gx1cal.fixedflag ?  ((void)((GRAD_UPDATE_TIME)), per_gx1cal) : (GRAD_UPDATE_TIME);
     }

   /* set leading edge pulse width */
   if (0 != 0)
     pw_gx1calf  = _pw_gx1calf.fixedflag ?  ((void)(IMax(2,GRAD_UPDATE_TIME,0)), pw_gx1calf) : IMax(2,GRAD_UPDATE_TIME,0);
   else
     pw_gx1calf  = _pw_gx1calf.fixedflag ?  ((void)(0), pw_gx1calf) : 0;

   if ((wg_gx1cal==TYPRHO1)||(wg_gx1cal==TYPRHO2) ||
       (wg_gx1cal==TYPTHETA)||(wg_gx1cal==TYPOMEGA))
     pw_gx1cal  = _pw_gx1cal.fixedflag ?  ((void)(0), pw_gx1cal) : 0;    /* no need for leading edge if rf */

   res_gx1cal  = _res_gx1cal.fixedflag ? 		/* Find resolution */
           
       ((void)((pw_gx1calf+pw_gx1cala+pw_gx1cal+pw_gx1cald)/per_gx1cal), res_gx1cal) : (pw_gx1calf+pw_gx1cala+pw_gx1cal+pw_gx1cald)/per_gx1cal;
}

{
   float target;
   int rtime,ftime;

   gettarget(_target.fixedflag ? (_temp1277_target=target,&_temp1277_target) : &target, (WF_PROCESSOR)wg_gy1cal, &calloggrd);
   getramptime(_rtime.fixedflag ? (_temp1278_rtime=rtime,&_temp1278_rtime) : &rtime, _ftime.fixedflag ? (_temp1279_ftime=ftime,&_temp1279_ftime) : &ftime, (WF_PROCESSOR)wg_gy1cal, &calloggrd);
   if (TYPNDEF == TYPDEF) {
     if (amppwgrad((float)(0.0),target,0.0,0.0,rtime,MIN_PLATEAU_TIME,
				 _a_gy1cal.fixedflag ? (_temp1280_a_gy1cal=a_gy1cal,&_temp1280_a_gy1cal) : &a_gy1cal, _pw_gy1cala.fixedflag ? (_temp1281_pw_gy1cala=pw_gy1cala,&_temp1281_pw_gy1cala) : &pw_gy1cala, _pw_gy1cal.fixedflag ? (_temp1282_pw_gy1cal=pw_gy1cal,&_temp1282_pw_gy1cal) : &pw_gy1cal,
				 _pw_gy1cald.fixedflag ? (_temp1283_pw_gy1cald=pw_gy1cald,&_temp1283_pw_gy1cald) : &pw_gy1cald) == FAILURE) return FAILURE;
   }
   if (TRAP_ALL_SLOPED & TRAP_SLOPED)
     {
       ia_gy1cal  = _ia_gy1cal.fixedflag ?       ((void)((int)((endview_scalecal*a_gy1cal/target)*MAX_PG_IAMP)), ia_gy1cal) : (int)((endview_scalecal*a_gy1cal/target)*MAX_PG_IAMP);
       ia_gy1calwa  = _ia_gy1calwa.fixedflag ?       ((void)((int)((endview_scalecal*a_gy1cala/target)*MAX_PG_IAMP)), ia_gy1calwa) : (int)((endview_scalecal*a_gy1cala/target)*MAX_PG_IAMP);
       ia_gy1calwb  = _ia_gy1calwb.fixedflag ?       ((void)((int)((endview_scalecal*a_gy1calb/target)*MAX_PG_IAMP)), ia_gy1calwb) : (int)((endview_scalecal*a_gy1calb/target)*MAX_PG_IAMP);
     }
   else  /* standard trapezoid */
     {
       ia_gy1cal  = _ia_gy1cal.fixedflag ?     ((void)((int)((a_gy1cal/target)*MAX_PG_IAMP)), ia_gy1cal) : (int)((a_gy1cal/target)*MAX_PG_IAMP);
       ia_gy1calwa  = _ia_gy1calwa.fixedflag ?   ((void)(MAX_PG_WAMP), ia_gy1calwa) : MAX_PG_WAMP;
       ia_gy1calwb  = _ia_gy1calwb.fixedflag ?  ((void)(MAX_PG_WAMP), ia_gy1calwb) : MAX_PG_WAMP;
     }

   if ((wg_gy1cal==TYPRHO1)||(wg_gy1cal==TYPRHO2) ||
       (wg_gy1cal==TYPTHETA)||(wg_gy1cal==TYPOMEGA))
     {				/* Determine min period */
       per_gy1cal  = _per_gy1cal.fixedflag ?  ((void)((RF_UPDATE_TIME)), per_gy1cal) : (RF_UPDATE_TIME); 
     }
   else
     {
       per_gy1cal  = _per_gy1cal.fixedflag ?  ((void)((GRAD_UPDATE_TIME)), per_gy1cal) : (GRAD_UPDATE_TIME);
     }

   /* set leading edge pulse width */
   if (0 != 0)
     pw_gy1calf  = _pw_gy1calf.fixedflag ?  ((void)(IMax(2,GRAD_UPDATE_TIME,0)), pw_gy1calf) : IMax(2,GRAD_UPDATE_TIME,0);
   else
     pw_gy1calf  = _pw_gy1calf.fixedflag ?  ((void)(0), pw_gy1calf) : 0;

   if ((wg_gy1cal==TYPRHO1)||(wg_gy1cal==TYPRHO2) ||
       (wg_gy1cal==TYPTHETA)||(wg_gy1cal==TYPOMEGA))
     pw_gy1cal  = _pw_gy1cal.fixedflag ?  ((void)(0), pw_gy1cal) : 0;    /* no need for leading edge if rf */

   res_gy1cal  = _res_gy1cal.fixedflag ? 		/* Find resolution */
           
       ((void)((pw_gy1calf+pw_gy1cala+pw_gy1cal+pw_gy1cald)/per_gy1cal), res_gy1cal) : (pw_gy1calf+pw_gy1cala+pw_gy1cal+pw_gy1cald)/per_gy1cal;
}

{
   float target;
   int rtime,ftime;

   gettarget(_target.fixedflag ? (_temp1284_target=target,&_temp1284_target) : &target, (WF_PROCESSOR)wg_gy1rcal, &calloggrd);
   getramptime(_rtime.fixedflag ? (_temp1285_rtime=rtime,&_temp1285_rtime) : &rtime, _ftime.fixedflag ? (_temp1286_ftime=ftime,&_temp1286_ftime) : &ftime, (WF_PROCESSOR)wg_gy1rcal, &calloggrd);
   if (TYPNDEF == TYPDEF) {
     if (amppwgrad((float)(0.0),target,0.0,0.0,rtime,MIN_PLATEAU_TIME,
				 _a_gy1rcal.fixedflag ? (_temp1287_a_gy1rcal=a_gy1rcal,&_temp1287_a_gy1rcal) : &a_gy1rcal, _pw_gy1rcala.fixedflag ? (_temp1288_pw_gy1rcala=pw_gy1rcala,&_temp1288_pw_gy1rcala) : &pw_gy1rcala, _pw_gy1rcal.fixedflag ? (_temp1289_pw_gy1rcal=pw_gy1rcal,&_temp1289_pw_gy1rcal) : &pw_gy1rcal,
				 _pw_gy1rcald.fixedflag ? (_temp1290_pw_gy1rcald=pw_gy1rcald,&_temp1290_pw_gy1rcald) : &pw_gy1rcald) == FAILURE) return FAILURE;
   }
   if (TRAP_ALL_SLOPED & TRAP_SLOPED)
     {
       ia_gy1rcal  = _ia_gy1rcal.fixedflag ?       ((void)((int)((endview_scalecal*a_gy1rcal/target)*MAX_PG_IAMP)), ia_gy1rcal) : (int)((endview_scalecal*a_gy1rcal/target)*MAX_PG_IAMP);
       ia_gy1rcalwa  = _ia_gy1rcalwa.fixedflag ?       ((void)((int)((endview_scalecal*a_gy1rcala/target)*MAX_PG_IAMP)), ia_gy1rcalwa) : (int)((endview_scalecal*a_gy1rcala/target)*MAX_PG_IAMP);
       ia_gy1rcalwb  = _ia_gy1rcalwb.fixedflag ?       ((void)((int)((endview_scalecal*a_gy1rcalb/target)*MAX_PG_IAMP)), ia_gy1rcalwb) : (int)((endview_scalecal*a_gy1rcalb/target)*MAX_PG_IAMP);
     }
   else  /* standard trapezoid */
     {
       ia_gy1rcal  = _ia_gy1rcal.fixedflag ?     ((void)((int)((a_gy1rcal/target)*MAX_PG_IAMP)), ia_gy1rcal) : (int)((a_gy1rcal/target)*MAX_PG_IAMP);
       ia_gy1rcalwa  = _ia_gy1rcalwa.fixedflag ?   ((void)(MAX_PG_WAMP), ia_gy1rcalwa) : MAX_PG_WAMP;
       ia_gy1rcalwb  = _ia_gy1rcalwb.fixedflag ?  ((void)(MAX_PG_WAMP), ia_gy1rcalwb) : MAX_PG_WAMP;
     }

   if ((wg_gy1rcal==TYPRHO1)||(wg_gy1rcal==TYPRHO2) ||
       (wg_gy1rcal==TYPTHETA)||(wg_gy1rcal==TYPOMEGA))
     {				/* Determine min period */
       per_gy1rcal  = _per_gy1rcal.fixedflag ?  ((void)((RF_UPDATE_TIME)), per_gy1rcal) : (RF_UPDATE_TIME); 
     }
   else
     {
       per_gy1rcal  = _per_gy1rcal.fixedflag ?  ((void)((GRAD_UPDATE_TIME)), per_gy1rcal) : (GRAD_UPDATE_TIME);
     }

   /* set leading edge pulse width */
   if (0 != 0)
     pw_gy1rcalf  = _pw_gy1rcalf.fixedflag ?  ((void)(IMax(2,GRAD_UPDATE_TIME,0)), pw_gy1rcalf) : IMax(2,GRAD_UPDATE_TIME,0);
   else
     pw_gy1rcalf  = _pw_gy1rcalf.fixedflag ?  ((void)(0), pw_gy1rcalf) : 0;

   if ((wg_gy1rcal==TYPRHO1)||(wg_gy1rcal==TYPRHO2) ||
       (wg_gy1rcal==TYPTHETA)||(wg_gy1rcal==TYPOMEGA))
     pw_gy1rcal  = _pw_gy1rcal.fixedflag ?  ((void)(0), pw_gy1rcal) : 0;    /* no need for leading edge if rf */

   res_gy1rcal  = _res_gy1rcal.fixedflag ? 		/* Find resolution */
           
       ((void)((pw_gy1rcalf+pw_gy1rcala+pw_gy1rcal+pw_gy1rcald)/per_gy1rcal), res_gy1rcal) : (pw_gy1rcalf+pw_gy1rcala+pw_gy1rcal+pw_gy1rcald)/per_gy1rcal;
}





    {
        ia_rf1coil    = _ia_rf1coil.fixedflag ?    ((void)((int)(a_rf1coil*MAX_PG_IAMP)), ia_rf1coil) : (int)(a_rf1coil*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1291_target=target,&_temp1291_target) : &target, (WF_PROCESSOR)wg_gzrf1coil, &coilloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1292_rtime=rtime,&_temp1292_rtime) : &rtime, _ftime.fixedflag ? (_temp1293_ftime=ftime,&_temp1293_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf1coil, &coilloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf1coil.fixedflag ? (_temp1294_a_gzrf1coil=a_gzrf1coil,&_temp1294_a_gzrf1coil) : &a_gzrf1coil, _pw_gzrf1coila.fixedflag ? (_temp1295_pw_gzrf1coila=pw_gzrf1coila,&_temp1295_pw_gzrf1coila) : &pw_gzrf1coila, _pw_gzrf1coil.fixedflag ? (_temp1296_pw_gzrf1coil=pw_gzrf1coil,&_temp1296_pw_gzrf1coil) : &pw_gzrf1coil,
                          _pw_gzrf1coild.fixedflag ? (_temp1297_pw_gzrf1coild=pw_gzrf1coild,&_temp1297_pw_gzrf1coild) : &pw_gzrf1coild) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf1coil  = _ia_gzrf1coil.fixedflag ?     ((void)((int)((a_gzrf1coil/target)*MAX_PG_IAMP)), ia_gzrf1coil) : (int)((a_gzrf1coil/target)*MAX_PG_IAMP);
    }

{
   float target;
   int rtime,ftime;

   gettarget(_target.fixedflag ? (_temp1298_target=target,&_temp1298_target) : &target, (WF_PROCESSOR)wg_gzcombcoil, &coilloggrd);
   getramptime(_rtime.fixedflag ? (_temp1299_rtime=rtime,&_temp1299_rtime) : &rtime, _ftime.fixedflag ? (_temp1300_ftime=ftime,&_temp1300_ftime) : &ftime, (WF_PROCESSOR)wg_gzcombcoil, &coilloggrd);
   if (TYPNDEF == TYPDEF) {
     if (amppwgrad((float)(0.0),target,0.0,0.0,rtime,MIN_PLATEAU_TIME,
				 _a_gzcombcoil.fixedflag ? (_temp1301_a_gzcombcoil=a_gzcombcoil,&_temp1301_a_gzcombcoil) : &a_gzcombcoil, _pw_gzcombcoila.fixedflag ? (_temp1302_pw_gzcombcoila=pw_gzcombcoila,&_temp1302_pw_gzcombcoila) : &pw_gzcombcoila, _pw_gzcombcoil.fixedflag ? (_temp1303_pw_gzcombcoil=pw_gzcombcoil,&_temp1303_pw_gzcombcoil) : &pw_gzcombcoil,
				 _pw_gzcombcoild.fixedflag ? (_temp1304_pw_gzcombcoild=pw_gzcombcoild,&_temp1304_pw_gzcombcoild) : &pw_gzcombcoild) == FAILURE) return FAILURE;
   }
   if (TRAP_ALL_SLOPED & TRAP_SLOPED)
     {
       ia_gzcombcoil  = _ia_gzcombcoil.fixedflag ?       ((void)((int)((endviewz_scalecoil*a_gzcombcoil/target)*MAX_PG_IAMP)), ia_gzcombcoil) : (int)((endviewz_scalecoil*a_gzcombcoil/target)*MAX_PG_IAMP);
       ia_gzcombcoilwa  = _ia_gzcombcoilwa.fixedflag ?       ((void)((int)((endviewz_scalecoil*a_gzcombcoila/target)*MAX_PG_IAMP)), ia_gzcombcoilwa) : (int)((endviewz_scalecoil*a_gzcombcoila/target)*MAX_PG_IAMP);
       ia_gzcombcoilwb  = _ia_gzcombcoilwb.fixedflag ?       ((void)((int)((endviewz_scalecoil*a_gzcombcoilb/target)*MAX_PG_IAMP)), ia_gzcombcoilwb) : (int)((endviewz_scalecoil*a_gzcombcoilb/target)*MAX_PG_IAMP);
     }
   else  /* standard trapezoid */
     {
       ia_gzcombcoil  = _ia_gzcombcoil.fixedflag ?     ((void)((int)((a_gzcombcoil/target)*MAX_PG_IAMP)), ia_gzcombcoil) : (int)((a_gzcombcoil/target)*MAX_PG_IAMP);
       ia_gzcombcoilwa  = _ia_gzcombcoilwa.fixedflag ?   ((void)(MAX_PG_WAMP), ia_gzcombcoilwa) : MAX_PG_WAMP;
       ia_gzcombcoilwb  = _ia_gzcombcoilwb.fixedflag ?  ((void)(MAX_PG_WAMP), ia_gzcombcoilwb) : MAX_PG_WAMP;
     }

   if ((wg_gzcombcoil==TYPRHO1)||(wg_gzcombcoil==TYPRHO2) ||
       (wg_gzcombcoil==TYPTHETA)||(wg_gzcombcoil==TYPOMEGA))
     {				/* Determine min period */
       per_gzcombcoil  = _per_gzcombcoil.fixedflag ?  ((void)((RF_UPDATE_TIME)), per_gzcombcoil) : (RF_UPDATE_TIME); 
     }
   else
     {
       per_gzcombcoil  = _per_gzcombcoil.fixedflag ?  ((void)((GRAD_UPDATE_TIME)), per_gzcombcoil) : (GRAD_UPDATE_TIME);
     }

   /* set leading edge pulse width */
   if (0 != 0)
     pw_gzcombcoilf  = _pw_gzcombcoilf.fixedflag ?  ((void)(IMax(2,GRAD_UPDATE_TIME,0)), pw_gzcombcoilf) : IMax(2,GRAD_UPDATE_TIME,0);
   else
     pw_gzcombcoilf  = _pw_gzcombcoilf.fixedflag ?  ((void)(0), pw_gzcombcoilf) : 0;

   if ((wg_gzcombcoil==TYPRHO1)||(wg_gzcombcoil==TYPRHO2) ||
       (wg_gzcombcoil==TYPTHETA)||(wg_gzcombcoil==TYPOMEGA))
     pw_gzcombcoil  = _pw_gzcombcoil.fixedflag ?  ((void)(0), pw_gzcombcoil) : 0;    /* no need for leading edge if rf */

   res_gzcombcoil  = _res_gzcombcoil.fixedflag ? 		/* Find resolution */
           
       ((void)((pw_gzcombcoilf+pw_gzcombcoila+pw_gzcombcoil+pw_gzcombcoild)/per_gzcombcoil), res_gzcombcoil) : (pw_gzcombcoilf+pw_gzcombcoila+pw_gzcombcoil+pw_gzcombcoild)/per_gzcombcoil;
}

{
   float target;
   int rtime,ftime;

   gettarget(_target.fixedflag ? (_temp1305_target=target,&_temp1305_target) : &target, (WF_PROCESSOR)wg_gzprcoil, &coilloggrd);
   getramptime(_rtime.fixedflag ? (_temp1306_rtime=rtime,&_temp1306_rtime) : &rtime, _ftime.fixedflag ? (_temp1307_ftime=ftime,&_temp1307_ftime) : &ftime, (WF_PROCESSOR)wg_gzprcoil, &coilloggrd);
   if (TYPNDEF == TYPDEF) {
     if (amppwgrad((float)(0.0),target,0.0,0.0,rtime,MIN_PLATEAU_TIME,
				 _a_gzprcoil.fixedflag ? (_temp1308_a_gzprcoil=a_gzprcoil,&_temp1308_a_gzprcoil) : &a_gzprcoil, _pw_gzprcoila.fixedflag ? (_temp1309_pw_gzprcoila=pw_gzprcoila,&_temp1309_pw_gzprcoila) : &pw_gzprcoila, _pw_gzprcoil.fixedflag ? (_temp1310_pw_gzprcoil=pw_gzprcoil,&_temp1310_pw_gzprcoil) : &pw_gzprcoil,
				 _pw_gzprcoild.fixedflag ? (_temp1311_pw_gzprcoild=pw_gzprcoild,&_temp1311_pw_gzprcoild) : &pw_gzprcoild) == FAILURE) return FAILURE;
   }
   if (TRAP_ALL_SLOPED & TRAP_SLOPED)
     {
       ia_gzprcoil  = _ia_gzprcoil.fixedflag ?       ((void)((int)((endviewz_scalecoil*a_gzprcoil/target)*MAX_PG_IAMP)), ia_gzprcoil) : (int)((endviewz_scalecoil*a_gzprcoil/target)*MAX_PG_IAMP);
       ia_gzprcoilwa  = _ia_gzprcoilwa.fixedflag ?       ((void)((int)((endviewz_scalecoil*a_gzprcoila/target)*MAX_PG_IAMP)), ia_gzprcoilwa) : (int)((endviewz_scalecoil*a_gzprcoila/target)*MAX_PG_IAMP);
       ia_gzprcoilwb  = _ia_gzprcoilwb.fixedflag ?       ((void)((int)((endviewz_scalecoil*a_gzprcoilb/target)*MAX_PG_IAMP)), ia_gzprcoilwb) : (int)((endviewz_scalecoil*a_gzprcoilb/target)*MAX_PG_IAMP);
     }
   else  /* standard trapezoid */
     {
       ia_gzprcoil  = _ia_gzprcoil.fixedflag ?     ((void)((int)((a_gzprcoil/target)*MAX_PG_IAMP)), ia_gzprcoil) : (int)((a_gzprcoil/target)*MAX_PG_IAMP);
       ia_gzprcoilwa  = _ia_gzprcoilwa.fixedflag ?   ((void)(MAX_PG_WAMP), ia_gzprcoilwa) : MAX_PG_WAMP;
       ia_gzprcoilwb  = _ia_gzprcoilwb.fixedflag ?  ((void)(MAX_PG_WAMP), ia_gzprcoilwb) : MAX_PG_WAMP;
     }

   if ((wg_gzprcoil==TYPRHO1)||(wg_gzprcoil==TYPRHO2) ||
       (wg_gzprcoil==TYPTHETA)||(wg_gzprcoil==TYPOMEGA))
     {				/* Determine min period */
       per_gzprcoil  = _per_gzprcoil.fixedflag ?  ((void)((RF_UPDATE_TIME)), per_gzprcoil) : (RF_UPDATE_TIME); 
     }
   else
     {
       per_gzprcoil  = _per_gzprcoil.fixedflag ?  ((void)((GRAD_UPDATE_TIME)), per_gzprcoil) : (GRAD_UPDATE_TIME);
     }

   /* set leading edge pulse width */
   if (0 != 0)
     pw_gzprcoilf  = _pw_gzprcoilf.fixedflag ?  ((void)(IMax(2,GRAD_UPDATE_TIME,0)), pw_gzprcoilf) : IMax(2,GRAD_UPDATE_TIME,0);
   else
     pw_gzprcoilf  = _pw_gzprcoilf.fixedflag ?  ((void)(0), pw_gzprcoilf) : 0;

   if ((wg_gzprcoil==TYPRHO1)||(wg_gzprcoil==TYPRHO2) ||
       (wg_gzprcoil==TYPTHETA)||(wg_gzprcoil==TYPOMEGA))
     pw_gzprcoil  = _pw_gzprcoil.fixedflag ?  ((void)(0), pw_gzprcoil) : 0;    /* no need for leading edge if rf */

   res_gzprcoil  = _res_gzprcoil.fixedflag ? 		/* Find resolution */
           
       ((void)((pw_gzprcoilf+pw_gzprcoila+pw_gzprcoil+pw_gzprcoild)/per_gzprcoil), res_gzprcoil) : (pw_gzprcoilf+pw_gzprcoila+pw_gzprcoil+pw_gzprcoild)/per_gzprcoil;
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1312_target=target,&_temp1312_target) : &target, (WF_PROCESSOR)wg_gxwcoil, &coilloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1313_rtime=rtime,&_temp1313_rtime) : &rtime, _ftime.fixedflag ? (_temp1314_ftime=ftime,&_temp1314_ftime) : &ftime, (WF_PROCESSOR)wg_gxwcoil, &coilloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxwcoil.fixedflag ? (_temp1315_a_gxwcoil=a_gxwcoil,&_temp1315_a_gxwcoil) : &a_gxwcoil, _pw_gxwcoila.fixedflag ? (_temp1316_pw_gxwcoila=pw_gxwcoila,&_temp1316_pw_gxwcoila) : &pw_gxwcoila, _pw_gxwcoil.fixedflag ? (_temp1317_pw_gxwcoil=pw_gxwcoil,&_temp1317_pw_gxwcoil) : &pw_gxwcoil,
                          _pw_gxwcoild.fixedflag ? (_temp1318_pw_gxwcoild=pw_gxwcoild,&_temp1318_pw_gxwcoild) : &pw_gxwcoild) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxwcoil  = _ia_gxwcoil.fixedflag ?     ((void)((int)((a_gxwcoil/target)*MAX_PG_IAMP)), ia_gxwcoil) : (int)((a_gxwcoil/target)*MAX_PG_IAMP);
    }



{
   float target;
   int rtime,ftime;

   gettarget(_target.fixedflag ? (_temp1319_target=target,&_temp1319_target) : &target, (WF_PROCESSOR)wg_gx1coil, &coilloggrd);
   getramptime(_rtime.fixedflag ? (_temp1320_rtime=rtime,&_temp1320_rtime) : &rtime, _ftime.fixedflag ? (_temp1321_ftime=ftime,&_temp1321_ftime) : &ftime, (WF_PROCESSOR)wg_gx1coil, &coilloggrd);
   if (TYPNDEF == TYPDEF) {
     if (amppwgrad((float)(0),target,0.0,0.0,rtime,MIN_PLATEAU_TIME,
				 _a_gx1coil.fixedflag ? (_temp1322_a_gx1coil=a_gx1coil,&_temp1322_a_gx1coil) : &a_gx1coil, _pw_gx1coila.fixedflag ? (_temp1323_pw_gx1coila=pw_gx1coila,&_temp1323_pw_gx1coila) : &pw_gx1coila, _pw_gx1coil.fixedflag ? (_temp1324_pw_gx1coil=pw_gx1coil,&_temp1324_pw_gx1coil) : &pw_gx1coil,
				 _pw_gx1coild.fixedflag ? (_temp1325_pw_gx1coild=pw_gx1coild,&_temp1325_pw_gx1coild) : &pw_gx1coild) == FAILURE) return FAILURE;
   }
   if (TRAP_ALL & TRAP_SLOPED)
     {
       ia_gx1coil  = _ia_gx1coil.fixedflag ?       ((void)((int)((1.0*a_gx1coil/target)*MAX_PG_IAMP)), ia_gx1coil) : (int)((1.0*a_gx1coil/target)*MAX_PG_IAMP);
       ia_gx1coilwa  = _ia_gx1coilwa.fixedflag ?       ((void)((int)((1.0*a_gx1coila/target)*MAX_PG_IAMP)), ia_gx1coilwa) : (int)((1.0*a_gx1coila/target)*MAX_PG_IAMP);
       ia_gx1coilwb  = _ia_gx1coilwb.fixedflag ?       ((void)((int)((1.0*a_gx1coilb/target)*MAX_PG_IAMP)), ia_gx1coilwb) : (int)((1.0*a_gx1coilb/target)*MAX_PG_IAMP);
     }
   else  /* standard trapezoid */
     {
       ia_gx1coil  = _ia_gx1coil.fixedflag ?     ((void)((int)((a_gx1coil/target)*MAX_PG_IAMP)), ia_gx1coil) : (int)((a_gx1coil/target)*MAX_PG_IAMP);
       ia_gx1coilwa  = _ia_gx1coilwa.fixedflag ?   ((void)(MAX_PG_WAMP), ia_gx1coilwa) : MAX_PG_WAMP;
       ia_gx1coilwb  = _ia_gx1coilwb.fixedflag ?  ((void)(MAX_PG_WAMP), ia_gx1coilwb) : MAX_PG_WAMP;
     }

   if ((wg_gx1coil==TYPRHO1)||(wg_gx1coil==TYPRHO2) ||
       (wg_gx1coil==TYPTHETA)||(wg_gx1coil==TYPOMEGA))
     {				/* Determine min period */
       per_gx1coil  = _per_gx1coil.fixedflag ?  ((void)((RF_UPDATE_TIME)), per_gx1coil) : (RF_UPDATE_TIME); 
     }
   else
     {
       per_gx1coil  = _per_gx1coil.fixedflag ?  ((void)((GRAD_UPDATE_TIME)), per_gx1coil) : (GRAD_UPDATE_TIME);
     }

   /* set leading edge pulse width */
   if (0 != 0)
     pw_gx1coilf  = _pw_gx1coilf.fixedflag ?  ((void)(IMax(2,GRAD_UPDATE_TIME,0)), pw_gx1coilf) : IMax(2,GRAD_UPDATE_TIME,0);
   else
     pw_gx1coilf  = _pw_gx1coilf.fixedflag ?  ((void)(0), pw_gx1coilf) : 0;

   if ((wg_gx1coil==TYPRHO1)||(wg_gx1coil==TYPRHO2) ||
       (wg_gx1coil==TYPTHETA)||(wg_gx1coil==TYPOMEGA))
     pw_gx1coil  = _pw_gx1coil.fixedflag ?  ((void)(0), pw_gx1coil) : 0;    /* no need for leading edge if rf */

   res_gx1coil  = _res_gx1coil.fixedflag ? 		/* Find resolution */
           
       ((void)((pw_gx1coilf+pw_gx1coila+pw_gx1coil+pw_gx1coild)/per_gx1coil), res_gx1coil) : (pw_gx1coilf+pw_gx1coila+pw_gx1coil+pw_gx1coild)/per_gx1coil;
}

{
   float target;
   int rtime,ftime;

   gettarget(_target.fixedflag ? (_temp1326_target=target,&_temp1326_target) : &target, (WF_PROCESSOR)wg_gy1coil, &coilloggrd);
   getramptime(_rtime.fixedflag ? (_temp1327_rtime=rtime,&_temp1327_rtime) : &rtime, _ftime.fixedflag ? (_temp1328_ftime=ftime,&_temp1328_ftime) : &ftime, (WF_PROCESSOR)wg_gy1coil, &coilloggrd);
   if (TYPNDEF == TYPDEF) {
     if (amppwgrad((float)(0.0),target,0.0,0.0,rtime,MIN_PLATEAU_TIME,
				 _a_gy1coil.fixedflag ? (_temp1329_a_gy1coil=a_gy1coil,&_temp1329_a_gy1coil) : &a_gy1coil, _pw_gy1coila.fixedflag ? (_temp1330_pw_gy1coila=pw_gy1coila,&_temp1330_pw_gy1coila) : &pw_gy1coila, _pw_gy1coil.fixedflag ? (_temp1331_pw_gy1coil=pw_gy1coil,&_temp1331_pw_gy1coil) : &pw_gy1coil,
				 _pw_gy1coild.fixedflag ? (_temp1332_pw_gy1coild=pw_gy1coild,&_temp1332_pw_gy1coild) : &pw_gy1coild) == FAILURE) return FAILURE;
   }
   if (TRAP_ALL_SLOPED & TRAP_SLOPED)
     {
       ia_gy1coil  = _ia_gy1coil.fixedflag ?       ((void)((int)((endview_scalecoil*a_gy1coil/target)*MAX_PG_IAMP)), ia_gy1coil) : (int)((endview_scalecoil*a_gy1coil/target)*MAX_PG_IAMP);
       ia_gy1coilwa  = _ia_gy1coilwa.fixedflag ?       ((void)((int)((endview_scalecoil*a_gy1coila/target)*MAX_PG_IAMP)), ia_gy1coilwa) : (int)((endview_scalecoil*a_gy1coila/target)*MAX_PG_IAMP);
       ia_gy1coilwb  = _ia_gy1coilwb.fixedflag ?       ((void)((int)((endview_scalecoil*a_gy1coilb/target)*MAX_PG_IAMP)), ia_gy1coilwb) : (int)((endview_scalecoil*a_gy1coilb/target)*MAX_PG_IAMP);
     }
   else  /* standard trapezoid */
     {
       ia_gy1coil  = _ia_gy1coil.fixedflag ?     ((void)((int)((a_gy1coil/target)*MAX_PG_IAMP)), ia_gy1coil) : (int)((a_gy1coil/target)*MAX_PG_IAMP);
       ia_gy1coilwa  = _ia_gy1coilwa.fixedflag ?   ((void)(MAX_PG_WAMP), ia_gy1coilwa) : MAX_PG_WAMP;
       ia_gy1coilwb  = _ia_gy1coilwb.fixedflag ?  ((void)(MAX_PG_WAMP), ia_gy1coilwb) : MAX_PG_WAMP;
     }

   if ((wg_gy1coil==TYPRHO1)||(wg_gy1coil==TYPRHO2) ||
       (wg_gy1coil==TYPTHETA)||(wg_gy1coil==TYPOMEGA))
     {				/* Determine min period */
       per_gy1coil  = _per_gy1coil.fixedflag ?  ((void)((RF_UPDATE_TIME)), per_gy1coil) : (RF_UPDATE_TIME); 
     }
   else
     {
       per_gy1coil  = _per_gy1coil.fixedflag ?  ((void)((GRAD_UPDATE_TIME)), per_gy1coil) : (GRAD_UPDATE_TIME);
     }

   /* set leading edge pulse width */
   if (0 != 0)
     pw_gy1coilf  = _pw_gy1coilf.fixedflag ?  ((void)(IMax(2,GRAD_UPDATE_TIME,0)), pw_gy1coilf) : IMax(2,GRAD_UPDATE_TIME,0);
   else
     pw_gy1coilf  = _pw_gy1coilf.fixedflag ?  ((void)(0), pw_gy1coilf) : 0;

   if ((wg_gy1coil==TYPRHO1)||(wg_gy1coil==TYPRHO2) ||
       (wg_gy1coil==TYPTHETA)||(wg_gy1coil==TYPOMEGA))
     pw_gy1coil  = _pw_gy1coil.fixedflag ?  ((void)(0), pw_gy1coil) : 0;    /* no need for leading edge if rf */

   res_gy1coil  = _res_gy1coil.fixedflag ? 		/* Find resolution */
           
       ((void)((pw_gy1coilf+pw_gy1coila+pw_gy1coil+pw_gy1coild)/per_gy1coil), res_gy1coil) : (pw_gy1coilf+pw_gy1coila+pw_gy1coil+pw_gy1coild)/per_gy1coil;
}

{
   float target;
   int rtime,ftime;

   gettarget(_target.fixedflag ? (_temp1333_target=target,&_temp1333_target) : &target, (WF_PROCESSOR)wg_gy1rcoil, &coilloggrd);
   getramptime(_rtime.fixedflag ? (_temp1334_rtime=rtime,&_temp1334_rtime) : &rtime, _ftime.fixedflag ? (_temp1335_ftime=ftime,&_temp1335_ftime) : &ftime, (WF_PROCESSOR)wg_gy1rcoil, &coilloggrd);
   if (TYPNDEF == TYPDEF) {
     if (amppwgrad((float)(0.0),target,0.0,0.0,rtime,MIN_PLATEAU_TIME,
				 _a_gy1rcoil.fixedflag ? (_temp1336_a_gy1rcoil=a_gy1rcoil,&_temp1336_a_gy1rcoil) : &a_gy1rcoil, _pw_gy1rcoila.fixedflag ? (_temp1337_pw_gy1rcoila=pw_gy1rcoila,&_temp1337_pw_gy1rcoila) : &pw_gy1rcoila, _pw_gy1rcoil.fixedflag ? (_temp1338_pw_gy1rcoil=pw_gy1rcoil,&_temp1338_pw_gy1rcoil) : &pw_gy1rcoil,
				 _pw_gy1rcoild.fixedflag ? (_temp1339_pw_gy1rcoild=pw_gy1rcoild,&_temp1339_pw_gy1rcoild) : &pw_gy1rcoild) == FAILURE) return FAILURE;
   }
   if (TRAP_ALL_SLOPED & TRAP_SLOPED)
     {
       ia_gy1rcoil  = _ia_gy1rcoil.fixedflag ?       ((void)((int)((endview_scalecoil*a_gy1rcoil/target)*MAX_PG_IAMP)), ia_gy1rcoil) : (int)((endview_scalecoil*a_gy1rcoil/target)*MAX_PG_IAMP);
       ia_gy1rcoilwa  = _ia_gy1rcoilwa.fixedflag ?       ((void)((int)((endview_scalecoil*a_gy1rcoila/target)*MAX_PG_IAMP)), ia_gy1rcoilwa) : (int)((endview_scalecoil*a_gy1rcoila/target)*MAX_PG_IAMP);
       ia_gy1rcoilwb  = _ia_gy1rcoilwb.fixedflag ?       ((void)((int)((endview_scalecoil*a_gy1rcoilb/target)*MAX_PG_IAMP)), ia_gy1rcoilwb) : (int)((endview_scalecoil*a_gy1rcoilb/target)*MAX_PG_IAMP);
     }
   else  /* standard trapezoid */
     {
       ia_gy1rcoil  = _ia_gy1rcoil.fixedflag ?     ((void)((int)((a_gy1rcoil/target)*MAX_PG_IAMP)), ia_gy1rcoil) : (int)((a_gy1rcoil/target)*MAX_PG_IAMP);
       ia_gy1rcoilwa  = _ia_gy1rcoilwa.fixedflag ?   ((void)(MAX_PG_WAMP), ia_gy1rcoilwa) : MAX_PG_WAMP;
       ia_gy1rcoilwb  = _ia_gy1rcoilwb.fixedflag ?  ((void)(MAX_PG_WAMP), ia_gy1rcoilwb) : MAX_PG_WAMP;
     }

   if ((wg_gy1rcoil==TYPRHO1)||(wg_gy1rcoil==TYPRHO2) ||
       (wg_gy1rcoil==TYPTHETA)||(wg_gy1rcoil==TYPOMEGA))
     {				/* Determine min period */
       per_gy1rcoil  = _per_gy1rcoil.fixedflag ?  ((void)((RF_UPDATE_TIME)), per_gy1rcoil) : (RF_UPDATE_TIME); 
     }
   else
     {
       per_gy1rcoil  = _per_gy1rcoil.fixedflag ?  ((void)((GRAD_UPDATE_TIME)), per_gy1rcoil) : (GRAD_UPDATE_TIME);
     }

   /* set leading edge pulse width */
   if (0 != 0)
     pw_gy1rcoilf  = _pw_gy1rcoilf.fixedflag ?  ((void)(IMax(2,GRAD_UPDATE_TIME,0)), pw_gy1rcoilf) : IMax(2,GRAD_UPDATE_TIME,0);
   else
     pw_gy1rcoilf  = _pw_gy1rcoilf.fixedflag ?  ((void)(0), pw_gy1rcoilf) : 0;

   if ((wg_gy1rcoil==TYPRHO1)||(wg_gy1rcoil==TYPRHO2) ||
       (wg_gy1rcoil==TYPTHETA)||(wg_gy1rcoil==TYPOMEGA))
     pw_gy1rcoil  = _pw_gy1rcoil.fixedflag ?  ((void)(0), pw_gy1rcoil) : 0;    /* no need for leading edge if rf */

   res_gy1rcoil  = _res_gy1rcoil.fixedflag ? 		/* Find resolution */
           
       ((void)((pw_gy1rcoilf+pw_gy1rcoila+pw_gy1rcoil+pw_gy1rcoild)/per_gy1rcoil), res_gy1rcoil) : (pw_gy1rcoilf+pw_gy1rcoila+pw_gy1rcoil+pw_gy1rcoild)/per_gy1rcoil;
}






