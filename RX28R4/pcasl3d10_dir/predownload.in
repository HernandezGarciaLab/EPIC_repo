
{
  float target;

  gettarget(_target.fixedflag ? (_temp495_target=target,&_temp495_target) : &target, (WF_PROCESSOR)wg_rf1, &loggrd);
  ia_rf1  = _ia_rf1.fixedflag ?     ((void)((int)((a_rf1/target)*MAX_PG_IAMP)), ia_rf1) : (int)((a_rf1/target)*MAX_PG_IAMP);
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp496_target=target,&_temp496_target) : &target, (WF_PROCESSOR)wg_gzrf1, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp497_rtime=rtime,&_temp497_rtime) : &rtime, _ftime.fixedflag ? (_temp498_ftime=ftime,&_temp498_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf1, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf1.fixedflag ? (_temp499_a_gzrf1=a_gzrf1,&_temp499_a_gzrf1) : &a_gzrf1, _pw_gzrf1a.fixedflag ? (_temp500_pw_gzrf1a=pw_gzrf1a,&_temp500_pw_gzrf1a) : &pw_gzrf1a, _pw_gzrf1.fixedflag ? (_temp501_pw_gzrf1=pw_gzrf1,&_temp501_pw_gzrf1) : &pw_gzrf1,
                          _pw_gzrf1d.fixedflag ? (_temp502_pw_gzrf1d=pw_gzrf1d,&_temp502_pw_gzrf1d) : &pw_gzrf1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf1  = _ia_gzrf1.fixedflag ?     ((void)((int)((a_gzrf1/target)*MAX_PG_IAMP)), ia_gzrf1) : (int)((a_gzrf1/target)*MAX_PG_IAMP);
    }

{
  float target;
 
  gettarget(_target.fixedflag ? (_temp503_target=target,&_temp503_target) : &target,(WF_PROCESSOR)wg_gxpre,&loggrd);
  if ((wg_gxpre==TYPRHO1)||(wg_gxpre==TYPRHO2)
        ||(wg_gxpre==TYPOMEGA)||(wg_gxpre==TYPTHETA))
    {
      if (res_gxpre == 0)
        {
          res_gxpre  = _res_gxpre.fixedflag ?  ((void)(pw_gxpre/(RF_UPDATE_TIME)), res_gxpre) : pw_gxpre/(RF_UPDATE_TIME);
        }
      ia_gxpre  = _ia_gxpre.fixedflag ?    ((void)((int)(a_gxpre*MAX_PG_IAMP)), ia_gxpre) : (int)(a_gxpre*MAX_PG_IAMP);
    }    
  else
    {
      if (res_gxpre == 0)
        {
          res_gxpre  = _res_gxpre.fixedflag ?  ((void)(pw_gxpre/(GRAD_UPDATE_TIME)), res_gxpre) : pw_gxpre/(GRAD_UPDATE_TIME);
        }
      ia_gxpre  = _ia_gxpre.fixedflag ?     ((void)((int)((a_gxpre/target)*MAX_PG_IAMP)), ia_gxpre) : (int)((a_gxpre/target)*MAX_PG_IAMP);
    }    
 
  if (off_gxpre != 0)
    {
      ia_gxprew  = _ia_gxprew.fixedflag ?     ((void)((int)((a_gxpre/target)*MAX_PG_WAMP)), ia_gxprew) : (int)((a_gxpre/target)*MAX_PG_WAMP);
      ia_gxpre  = _ia_gxpre.fixedflag ?  ((void)(MAX_PG_IAMP), ia_gxpre) : MAX_PG_IAMP;
    }
}

{
  float target;
 
  gettarget(_target.fixedflag ? (_temp504_target=target,&_temp504_target) : &target,(WF_PROCESSOR)wg_gypre,&loggrd);
  if ((wg_gypre==TYPRHO1)||(wg_gypre==TYPRHO2)
        ||(wg_gypre==TYPOMEGA)||(wg_gypre==TYPTHETA))
    {
      if (res_gypre == 0)
        {
          res_gypre  = _res_gypre.fixedflag ?  ((void)(pw_gypre/(RF_UPDATE_TIME)), res_gypre) : pw_gypre/(RF_UPDATE_TIME);
        }
      ia_gypre  = _ia_gypre.fixedflag ?    ((void)((int)(a_gypre*MAX_PG_IAMP)), ia_gypre) : (int)(a_gypre*MAX_PG_IAMP);
    }    
  else
    {
      if (res_gypre == 0)
        {
          res_gypre  = _res_gypre.fixedflag ?  ((void)(pw_gypre/(GRAD_UPDATE_TIME)), res_gypre) : pw_gypre/(GRAD_UPDATE_TIME);
        }
      ia_gypre  = _ia_gypre.fixedflag ?     ((void)((int)((a_gypre/target)*MAX_PG_IAMP)), ia_gypre) : (int)((a_gypre/target)*MAX_PG_IAMP);
    }    
 
  if (off_gypre != 0)
    {
      ia_gyprew  = _ia_gyprew.fixedflag ?     ((void)((int)((a_gypre/target)*MAX_PG_WAMP)), ia_gyprew) : (int)((a_gypre/target)*MAX_PG_WAMP);
      ia_gypre  = _ia_gypre.fixedflag ?  ((void)(MAX_PG_IAMP), ia_gypre) : MAX_PG_IAMP;
    }
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp505_target=target,&_temp505_target) : &target, (WF_PROCESSOR)wg_gzrf1r, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp506_rtime=rtime,&_temp506_rtime) : &rtime, _ftime.fixedflag ? (_temp507_ftime=ftime,&_temp507_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf1r, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf1r.fixedflag ? (_temp508_a_gzrf1r=a_gzrf1r,&_temp508_a_gzrf1r) : &a_gzrf1r, _pw_gzrf1ra.fixedflag ? (_temp509_pw_gzrf1ra=pw_gzrf1ra,&_temp509_pw_gzrf1ra) : &pw_gzrf1ra, _pw_gzrf1r.fixedflag ? (_temp510_pw_gzrf1r=pw_gzrf1r,&_temp510_pw_gzrf1r) : &pw_gzrf1r,
                          _pw_gzrf1rd.fixedflag ? (_temp511_pw_gzrf1rd=pw_gzrf1rd,&_temp511_pw_gzrf1rd) : &pw_gzrf1rd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf1r  = _ia_gzrf1r.fixedflag ?     ((void)((int)((a_gzrf1r/target)*MAX_PG_IAMP)), ia_gzrf1r) : (int)((a_gzrf1r/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp512_target=target,&_temp512_target) : &target, (WF_PROCESSOR)wg_gxsp3, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp513_rtime=rtime,&_temp513_rtime) : &rtime, _ftime.fixedflag ? (_temp514_ftime=ftime,&_temp514_ftime) : &ftime, (WF_PROCESSOR)wg_gxsp3, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxsp3.fixedflag ? (_temp515_a_gxsp3=a_gxsp3,&_temp515_a_gxsp3) : &a_gxsp3, _pw_gxsp3a.fixedflag ? (_temp516_pw_gxsp3a=pw_gxsp3a,&_temp516_pw_gxsp3a) : &pw_gxsp3a, _pw_gxsp3.fixedflag ? (_temp517_pw_gxsp3=pw_gxsp3,&_temp517_pw_gxsp3) : &pw_gxsp3,
                          _pw_gxsp3d.fixedflag ? (_temp518_pw_gxsp3d=pw_gxsp3d,&_temp518_pw_gxsp3d) : &pw_gxsp3d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxsp3  = _ia_gxsp3.fixedflag ?     ((void)((int)((a_gxsp3/target)*MAX_PG_IAMP)), ia_gxsp3) : (int)((a_gxsp3/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp519_target=target,&_temp519_target) : &target, (WF_PROCESSOR)wg_gxsp4, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp520_rtime=rtime,&_temp520_rtime) : &rtime, _ftime.fixedflag ? (_temp521_ftime=ftime,&_temp521_ftime) : &ftime, (WF_PROCESSOR)wg_gxsp4, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxsp4.fixedflag ? (_temp522_a_gxsp4=a_gxsp4,&_temp522_a_gxsp4) : &a_gxsp4, _pw_gxsp4a.fixedflag ? (_temp523_pw_gxsp4a=pw_gxsp4a,&_temp523_pw_gxsp4a) : &pw_gxsp4a, _pw_gxsp4.fixedflag ? (_temp524_pw_gxsp4=pw_gxsp4,&_temp524_pw_gxsp4) : &pw_gxsp4,
                          _pw_gxsp4d.fixedflag ? (_temp525_pw_gxsp4d=pw_gxsp4d,&_temp525_pw_gxsp4d) : &pw_gxsp4d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxsp4  = _ia_gxsp4.fixedflag ?     ((void)((int)((a_gxsp4/target)*MAX_PG_IAMP)), ia_gxsp4) : (int)((a_gxsp4/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp526_target=target,&_temp526_target) : &target, (WF_PROCESSOR)wg_gysp3, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp527_rtime=rtime,&_temp527_rtime) : &rtime, _ftime.fixedflag ? (_temp528_ftime=ftime,&_temp528_ftime) : &ftime, (WF_PROCESSOR)wg_gysp3, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gysp3.fixedflag ? (_temp529_a_gysp3=a_gysp3,&_temp529_a_gysp3) : &a_gysp3, _pw_gysp3a.fixedflag ? (_temp530_pw_gysp3a=pw_gysp3a,&_temp530_pw_gysp3a) : &pw_gysp3a, _pw_gysp3.fixedflag ? (_temp531_pw_gysp3=pw_gysp3,&_temp531_pw_gysp3) : &pw_gysp3,
                          _pw_gysp3d.fixedflag ? (_temp532_pw_gysp3d=pw_gysp3d,&_temp532_pw_gysp3d) : &pw_gysp3d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gysp3  = _ia_gysp3.fixedflag ?     ((void)((int)((a_gysp3/target)*MAX_PG_IAMP)), ia_gysp3) : (int)((a_gysp3/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp533_target=target,&_temp533_target) : &target, (WF_PROCESSOR)wg_gysp4, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp534_rtime=rtime,&_temp534_rtime) : &rtime, _ftime.fixedflag ? (_temp535_ftime=ftime,&_temp535_ftime) : &ftime, (WF_PROCESSOR)wg_gysp4, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gysp4.fixedflag ? (_temp536_a_gysp4=a_gysp4,&_temp536_a_gysp4) : &a_gysp4, _pw_gysp4a.fixedflag ? (_temp537_pw_gysp4a=pw_gysp4a,&_temp537_pw_gysp4a) : &pw_gysp4a, _pw_gysp4.fixedflag ? (_temp538_pw_gysp4=pw_gysp4,&_temp538_pw_gysp4) : &pw_gysp4,
                          _pw_gysp4d.fixedflag ? (_temp539_pw_gysp4d=pw_gysp4d,&_temp539_pw_gysp4d) : &pw_gysp4d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gysp4  = _ia_gysp4.fixedflag ?     ((void)((int)((a_gysp4/target)*MAX_PG_IAMP)), ia_gysp4) : (int)((a_gysp4/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp540_target=target,&_temp540_target) : &target, (WF_PROCESSOR)wg_gzsp3, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp541_rtime=rtime,&_temp541_rtime) : &rtime, _ftime.fixedflag ? (_temp542_ftime=ftime,&_temp542_ftime) : &ftime, (WF_PROCESSOR)wg_gzsp3, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzsp3.fixedflag ? (_temp543_a_gzsp3=a_gzsp3,&_temp543_a_gzsp3) : &a_gzsp3, _pw_gzsp3a.fixedflag ? (_temp544_pw_gzsp3a=pw_gzsp3a,&_temp544_pw_gzsp3a) : &pw_gzsp3a, _pw_gzsp3.fixedflag ? (_temp545_pw_gzsp3=pw_gzsp3,&_temp545_pw_gzsp3) : &pw_gzsp3,
                          _pw_gzsp3d.fixedflag ? (_temp546_pw_gzsp3d=pw_gzsp3d,&_temp546_pw_gzsp3d) : &pw_gzsp3d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzsp3  = _ia_gzsp3.fixedflag ?     ((void)((int)((a_gzsp3/target)*MAX_PG_IAMP)), ia_gzsp3) : (int)((a_gzsp3/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp547_target=target,&_temp547_target) : &target, (WF_PROCESSOR)wg_gzsp4, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp548_rtime=rtime,&_temp548_rtime) : &rtime, _ftime.fixedflag ? (_temp549_ftime=ftime,&_temp549_ftime) : &ftime, (WF_PROCESSOR)wg_gzsp4, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzsp4.fixedflag ? (_temp550_a_gzsp4=a_gzsp4,&_temp550_a_gzsp4) : &a_gzsp4, _pw_gzsp4a.fixedflag ? (_temp551_pw_gzsp4a=pw_gzsp4a,&_temp551_pw_gzsp4a) : &pw_gzsp4a, _pw_gzsp4.fixedflag ? (_temp552_pw_gzsp4=pw_gzsp4,&_temp552_pw_gzsp4) : &pw_gzsp4,
                          _pw_gzsp4d.fixedflag ? (_temp553_pw_gzsp4d=pw_gzsp4d,&_temp553_pw_gzsp4d) : &pw_gzsp4d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzsp4  = _ia_gzsp4.fixedflag ?     ((void)((int)((a_gzsp4/target)*MAX_PG_IAMP)), ia_gzsp4) : (int)((a_gzsp4/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp554_target=target,&_temp554_target) : &target, (WF_PROCESSOR)wg_gzphase1, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp555_rtime=rtime,&_temp555_rtime) : &rtime, _ftime.fixedflag ? (_temp556_ftime=ftime,&_temp556_ftime) : &ftime, (WF_PROCESSOR)wg_gzphase1, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzphase1.fixedflag ? (_temp557_a_gzphase1=a_gzphase1,&_temp557_a_gzphase1) : &a_gzphase1, _pw_gzphase1a.fixedflag ? (_temp558_pw_gzphase1a=pw_gzphase1a,&_temp558_pw_gzphase1a) : &pw_gzphase1a, _pw_gzphase1.fixedflag ? (_temp559_pw_gzphase1=pw_gzphase1,&_temp559_pw_gzphase1) : &pw_gzphase1,
                          _pw_gzphase1d.fixedflag ? (_temp560_pw_gzphase1d=pw_gzphase1d,&_temp560_pw_gzphase1d) : &pw_gzphase1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzphase1  = _ia_gzphase1.fixedflag ?     ((void)((int)((a_gzphase1/target)*MAX_PG_IAMP)), ia_gzphase1) : (int)((a_gzphase1/target)*MAX_PG_IAMP);
    }





{
  float target;
 
  a_gx  = _a_gx.fixedflag ?  ((void)(gamp), a_gx) : gamp;
  res_gx  = _res_gx.fixedflag ?  ((void)(gres), res_gx) : gres;
  gettarget(_target.fixedflag ? (_temp561_target=target,&_temp561_target) : &target, XGRAD, &loggrd);
  ia_gx  = _ia_gx.fixedflag ?     ((void)((a_gx/target)*MAX_PG_IAMP), ia_gx) : (a_gx/target)*MAX_PG_IAMP;
  pw_gx  = _pw_gx.fixedflag ?     ((void)((int)res_gx*GRAD_UPDATE_TIME), pw_gx) : (int)res_gx*GRAD_UPDATE_TIME;
}

{
  float target;
 
  a_gy  = _a_gy.fixedflag ?  ((void)(gamp), a_gy) : gamp;
  res_gy  = _res_gy.fixedflag ?  ((void)(gres), res_gy) : gres;
  gettarget(_target.fixedflag ? (_temp562_target=target,&_temp562_target) : &target, YGRAD, &loggrd);
  ia_gy  = _ia_gy.fixedflag ?     ((void)((a_gy/target)*MAX_PG_IAMP), ia_gy) : (a_gy/target)*MAX_PG_IAMP;
  pw_gy  = _pw_gy.fixedflag ?     ((void)((int)res_gy*GRAD_UPDATE_TIME), pw_gy) : (int)res_gy*GRAD_UPDATE_TIME;
}







{
  float target;
 
  a_gx2  = _a_gx2.fixedflag ?  ((void)(gamp), a_gx2) : gamp;
  res_gx2  = _res_gx2.fixedflag ?  ((void)(gres), res_gx2) : gres;
  gettarget(_target.fixedflag ? (_temp563_target=target,&_temp563_target) : &target, XGRAD, &loggrd);
  ia_gx2  = _ia_gx2.fixedflag ?     ((void)((a_gx2/target)*MAX_PG_IAMP), ia_gx2) : (a_gx2/target)*MAX_PG_IAMP;
  pw_gx2  = _pw_gx2.fixedflag ?     ((void)((int)res_gx2*GRAD_UPDATE_TIME), pw_gx2) : (int)res_gx2*GRAD_UPDATE_TIME;
}

{
  float target;
 
  a_gy2  = _a_gy2.fixedflag ?  ((void)(gamp), a_gy2) : gamp;
  res_gy2  = _res_gy2.fixedflag ?  ((void)(gres), res_gy2) : gres;
  gettarget(_target.fixedflag ? (_temp564_target=target,&_temp564_target) : &target, YGRAD, &loggrd);
  ia_gy2  = _ia_gy2.fixedflag ?     ((void)((a_gy2/target)*MAX_PG_IAMP), ia_gy2) : (a_gy2/target)*MAX_PG_IAMP;
  pw_gy2  = _pw_gy2.fixedflag ?     ((void)((int)res_gy2*GRAD_UPDATE_TIME), pw_gy2) : (int)res_gy2*GRAD_UPDATE_TIME;
}




    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp565_target=target,&_temp565_target) : &target, (WF_PROCESSOR)wg_gzphase2, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp566_rtime=rtime,&_temp566_rtime) : &rtime, _ftime.fixedflag ? (_temp567_ftime=ftime,&_temp567_ftime) : &ftime, (WF_PROCESSOR)wg_gzphase2, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzphase2.fixedflag ? (_temp568_a_gzphase2=a_gzphase2,&_temp568_a_gzphase2) : &a_gzphase2, _pw_gzphase2a.fixedflag ? (_temp569_pw_gzphase2a=pw_gzphase2a,&_temp569_pw_gzphase2a) : &pw_gzphase2a, _pw_gzphase2.fixedflag ? (_temp570_pw_gzphase2=pw_gzphase2,&_temp570_pw_gzphase2) : &pw_gzphase2,
                          _pw_gzphase2d.fixedflag ? (_temp571_pw_gzphase2d=pw_gzphase2d,&_temp571_pw_gzphase2d) : &pw_gzphase2d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzphase2  = _ia_gzphase2.fixedflag ?     ((void)((int)((a_gzphase2/target)*MAX_PG_IAMP)), ia_gzphase2) : (int)((a_gzphase2/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp572_target=target,&_temp572_target) : &target, (WF_PROCESSOR)wg_gzspoil, &loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp573_rtime=rtime,&_temp573_rtime) : &rtime, _ftime.fixedflag ? (_temp574_ftime=ftime,&_temp574_ftime) : &ftime, (WF_PROCESSOR)wg_gzspoil, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzspoil.fixedflag ? (_temp575_a_gzspoil=a_gzspoil,&_temp575_a_gzspoil) : &a_gzspoil, _pw_gzspoila.fixedflag ? (_temp576_pw_gzspoila=pw_gzspoila,&_temp576_pw_gzspoila) : &pw_gzspoila, _pw_gzspoil.fixedflag ? (_temp577_pw_gzspoil=pw_gzspoil,&_temp577_pw_gzspoil) : &pw_gzspoil,
                          _pw_gzspoild.fixedflag ? (_temp578_pw_gzspoild=pw_gzspoild,&_temp578_pw_gzspoild) : &pw_gzspoild) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzspoil  = _ia_gzspoil.fixedflag ?     ((void)((int)((a_gzspoil/target)*MAX_PG_IAMP)), ia_gzspoil) : (int)((a_gzspoil/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp579_target=target,&_temp579_target) : &target, (WF_PROCESSOR)wg_gxspoil, &loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp580_rtime=rtime,&_temp580_rtime) : &rtime, _ftime.fixedflag ? (_temp581_ftime=ftime,&_temp581_ftime) : &ftime, (WF_PROCESSOR)wg_gxspoil, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxspoil.fixedflag ? (_temp582_a_gxspoil=a_gxspoil,&_temp582_a_gxspoil) : &a_gxspoil, _pw_gxspoila.fixedflag ? (_temp583_pw_gxspoila=pw_gxspoila,&_temp583_pw_gxspoila) : &pw_gxspoila, _pw_gxspoil.fixedflag ? (_temp584_pw_gxspoil=pw_gxspoil,&_temp584_pw_gxspoil) : &pw_gxspoil,
                          _pw_gxspoild.fixedflag ? (_temp585_pw_gxspoild=pw_gxspoild,&_temp585_pw_gxspoild) : &pw_gxspoild) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxspoil  = _ia_gxspoil.fixedflag ?     ((void)((int)((a_gxspoil/target)*MAX_PG_IAMP)), ia_gxspoil) : (int)((a_gxspoil/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp586_target=target,&_temp586_target) : &target, (WF_PROCESSOR)wg_gyspoil, &loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp587_rtime=rtime,&_temp587_rtime) : &rtime, _ftime.fixedflag ? (_temp588_ftime=ftime,&_temp588_ftime) : &ftime, (WF_PROCESSOR)wg_gyspoil, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gyspoil.fixedflag ? (_temp589_a_gyspoil=a_gyspoil,&_temp589_a_gyspoil) : &a_gyspoil, _pw_gyspoila.fixedflag ? (_temp590_pw_gyspoila=pw_gyspoila,&_temp590_pw_gyspoila) : &pw_gyspoila, _pw_gyspoil.fixedflag ? (_temp591_pw_gyspoil=pw_gyspoil,&_temp591_pw_gyspoil) : &pw_gyspoil,
                          _pw_gyspoild.fixedflag ? (_temp592_pw_gyspoild=pw_gyspoild,&_temp592_pw_gyspoild) : &pw_gyspoild) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gyspoil  = _ia_gyspoil.fixedflag ?     ((void)((int)((a_gyspoil/target)*MAX_PG_IAMP)), ia_gyspoil) : (int)((a_gyspoil/target)*MAX_PG_IAMP);
    }




{
  float target;

  gettarget(_target.fixedflag ? (_temp593_target=target,&_temp593_target) : &target, (WF_PROCESSOR)wg_BS3rf, &loggrd);
  ia_BS3rf  = _ia_BS3rf.fixedflag ?     ((void)((int)((a_BS3rf/target)*MAX_PG_IAMP)), ia_BS3rf) : (int)((a_BS3rf/target)*MAX_PG_IAMP);
}

{
  float target;

  gettarget(_target.fixedflag ? (_temp594_target=target,&_temp594_target) : &target, (WF_PROCESSOR)wg_BS3rf_theta, &loggrd);
  ia_BS3rf_theta  = _ia_BS3rf_theta.fixedflag ?     ((void)((int)((a_BS3rf_theta/target)*MAX_PG_IAMP)), ia_BS3rf_theta) : (int)((a_BS3rf_theta/target)*MAX_PG_IAMP);
}


{
  float target;

  gettarget(_target.fixedflag ? (_temp595_target=target,&_temp595_target) : &target, (WF_PROCESSOR)wg_rftag1, &loggrd);
  ia_rftag1  = _ia_rftag1.fixedflag ?     ((void)((int)((a_rftag1/target)*MAX_PG_IAMP)), ia_rftag1) : (int)((a_rftag1/target)*MAX_PG_IAMP);
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp596_target=target,&_temp596_target) : &target, (WF_PROCESSOR)wg_gzrftag1, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp597_rtime=rtime,&_temp597_rtime) : &rtime, _ftime.fixedflag ? (_temp598_ftime=ftime,&_temp598_ftime) : &ftime, (WF_PROCESSOR)wg_gzrftag1, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrftag1.fixedflag ? (_temp599_a_gzrftag1=a_gzrftag1,&_temp599_a_gzrftag1) : &a_gzrftag1, _pw_gzrftag1a.fixedflag ? (_temp600_pw_gzrftag1a=pw_gzrftag1a,&_temp600_pw_gzrftag1a) : &pw_gzrftag1a, _pw_gzrftag1.fixedflag ? (_temp601_pw_gzrftag1=pw_gzrftag1,&_temp601_pw_gzrftag1) : &pw_gzrftag1,
                          _pw_gzrftag1d.fixedflag ? (_temp602_pw_gzrftag1d=pw_gzrftag1d,&_temp602_pw_gzrftag1d) : &pw_gzrftag1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrftag1  = _ia_gzrftag1.fixedflag ?     ((void)((int)((a_gzrftag1/target)*MAX_PG_IAMP)), ia_gzrftag1) : (int)((a_gzrftag1/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp603_target=target,&_temp603_target) : &target, (WF_PROCESSOR)wg_gzrftag1r, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp604_rtime=rtime,&_temp604_rtime) : &rtime, _ftime.fixedflag ? (_temp605_ftime=ftime,&_temp605_ftime) : &ftime, (WF_PROCESSOR)wg_gzrftag1r, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrftag1r.fixedflag ? (_temp606_a_gzrftag1r=a_gzrftag1r,&_temp606_a_gzrftag1r) : &a_gzrftag1r, _pw_gzrftag1ra.fixedflag ? (_temp607_pw_gzrftag1ra=pw_gzrftag1ra,&_temp607_pw_gzrftag1ra) : &pw_gzrftag1ra, _pw_gzrftag1r.fixedflag ? (_temp608_pw_gzrftag1r=pw_gzrftag1r,&_temp608_pw_gzrftag1r) : &pw_gzrftag1r,
                          _pw_gzrftag1rd.fixedflag ? (_temp609_pw_gzrftag1rd=pw_gzrftag1rd,&_temp609_pw_gzrftag1rd) : &pw_gzrftag1rd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrftag1r  = _ia_gzrftag1r.fixedflag ?     ((void)((int)((a_gzrftag1r/target)*MAX_PG_IAMP)), ia_gzrftag1r) : (int)((a_gzrftag1r/target)*MAX_PG_IAMP);
    }

{
  float target;

  gettarget(_target.fixedflag ? (_temp610_target=target,&_temp610_target) : &target, (WF_PROCESSOR)wg_rftag2, &loggrd);
  ia_rftag2  = _ia_rftag2.fixedflag ?     ((void)((int)((a_rftag2/target)*MAX_PG_IAMP)), ia_rftag2) : (int)((a_rftag2/target)*MAX_PG_IAMP);
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp611_target=target,&_temp611_target) : &target, (WF_PROCESSOR)wg_gzrftag2, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp612_rtime=rtime,&_temp612_rtime) : &rtime, _ftime.fixedflag ? (_temp613_ftime=ftime,&_temp613_ftime) : &ftime, (WF_PROCESSOR)wg_gzrftag2, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrftag2.fixedflag ? (_temp614_a_gzrftag2=a_gzrftag2,&_temp614_a_gzrftag2) : &a_gzrftag2, _pw_gzrftag2a.fixedflag ? (_temp615_pw_gzrftag2a=pw_gzrftag2a,&_temp615_pw_gzrftag2a) : &pw_gzrftag2a, _pw_gzrftag2.fixedflag ? (_temp616_pw_gzrftag2=pw_gzrftag2,&_temp616_pw_gzrftag2) : &pw_gzrftag2,
                          _pw_gzrftag2d.fixedflag ? (_temp617_pw_gzrftag2d=pw_gzrftag2d,&_temp617_pw_gzrftag2d) : &pw_gzrftag2d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrftag2  = _ia_gzrftag2.fixedflag ?     ((void)((int)((a_gzrftag2/target)*MAX_PG_IAMP)), ia_gzrftag2) : (int)((a_gzrftag2/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp618_target=target,&_temp618_target) : &target, (WF_PROCESSOR)wg_gzrftag2r, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp619_rtime=rtime,&_temp619_rtime) : &rtime, _ftime.fixedflag ? (_temp620_ftime=ftime,&_temp620_ftime) : &ftime, (WF_PROCESSOR)wg_gzrftag2r, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrftag2r.fixedflag ? (_temp621_a_gzrftag2r=a_gzrftag2r,&_temp621_a_gzrftag2r) : &a_gzrftag2r, _pw_gzrftag2ra.fixedflag ? (_temp622_pw_gzrftag2ra=pw_gzrftag2ra,&_temp622_pw_gzrftag2ra) : &pw_gzrftag2ra, _pw_gzrftag2r.fixedflag ? (_temp623_pw_gzrftag2r=pw_gzrftag2r,&_temp623_pw_gzrftag2r) : &pw_gzrftag2r,
                          _pw_gzrftag2rd.fixedflag ? (_temp624_pw_gzrftag2rd=pw_gzrftag2rd,&_temp624_pw_gzrftag2rd) : &pw_gzrftag2rd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrftag2r  = _ia_gzrftag2r.fixedflag ?     ((void)((int)((a_gzrftag2r/target)*MAX_PG_IAMP)), ia_gzrftag2r) : (int)((a_gzrftag2r/target)*MAX_PG_IAMP);
    }


{
  float target;

  gettarget(_target.fixedflag ? (_temp625_target=target,&_temp625_target) : &target, (WF_PROCESSOR)wg_rftag1c, &loggrd);
  ia_rftag1c  = _ia_rftag1c.fixedflag ?     ((void)((int)((a_rftag1c/target)*MAX_PG_IAMP)), ia_rftag1c) : (int)((a_rftag1c/target)*MAX_PG_IAMP);
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp626_target=target,&_temp626_target) : &target, (WF_PROCESSOR)wg_gzrftag1c, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp627_rtime=rtime,&_temp627_rtime) : &rtime, _ftime.fixedflag ? (_temp628_ftime=ftime,&_temp628_ftime) : &ftime, (WF_PROCESSOR)wg_gzrftag1c, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrftag1c.fixedflag ? (_temp629_a_gzrftag1c=a_gzrftag1c,&_temp629_a_gzrftag1c) : &a_gzrftag1c, _pw_gzrftag1ca.fixedflag ? (_temp630_pw_gzrftag1ca=pw_gzrftag1ca,&_temp630_pw_gzrftag1ca) : &pw_gzrftag1ca, _pw_gzrftag1c.fixedflag ? (_temp631_pw_gzrftag1c=pw_gzrftag1c,&_temp631_pw_gzrftag1c) : &pw_gzrftag1c,
                          _pw_gzrftag1cd.fixedflag ? (_temp632_pw_gzrftag1cd=pw_gzrftag1cd,&_temp632_pw_gzrftag1cd) : &pw_gzrftag1cd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrftag1c  = _ia_gzrftag1c.fixedflag ?     ((void)((int)((a_gzrftag1c/target)*MAX_PG_IAMP)), ia_gzrftag1c) : (int)((a_gzrftag1c/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp633_target=target,&_temp633_target) : &target, (WF_PROCESSOR)wg_gzrftag1rc, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp634_rtime=rtime,&_temp634_rtime) : &rtime, _ftime.fixedflag ? (_temp635_ftime=ftime,&_temp635_ftime) : &ftime, (WF_PROCESSOR)wg_gzrftag1rc, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrftag1rc.fixedflag ? (_temp636_a_gzrftag1rc=a_gzrftag1rc,&_temp636_a_gzrftag1rc) : &a_gzrftag1rc, _pw_gzrftag1rca.fixedflag ? (_temp637_pw_gzrftag1rca=pw_gzrftag1rca,&_temp637_pw_gzrftag1rca) : &pw_gzrftag1rca, _pw_gzrftag1rc.fixedflag ? (_temp638_pw_gzrftag1rc=pw_gzrftag1rc,&_temp638_pw_gzrftag1rc) : &pw_gzrftag1rc,
                          _pw_gzrftag1rcd.fixedflag ? (_temp639_pw_gzrftag1rcd=pw_gzrftag1rcd,&_temp639_pw_gzrftag1rcd) : &pw_gzrftag1rcd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrftag1rc  = _ia_gzrftag1rc.fixedflag ?     ((void)((int)((a_gzrftag1rc/target)*MAX_PG_IAMP)), ia_gzrftag1rc) : (int)((a_gzrftag1rc/target)*MAX_PG_IAMP);
    }

{
  float target;

  gettarget(_target.fixedflag ? (_temp640_target=target,&_temp640_target) : &target, (WF_PROCESSOR)wg_rftag2c, &loggrd);
  ia_rftag2c  = _ia_rftag2c.fixedflag ?     ((void)((int)((a_rftag2c/target)*MAX_PG_IAMP)), ia_rftag2c) : (int)((a_rftag2c/target)*MAX_PG_IAMP);
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp641_target=target,&_temp641_target) : &target, (WF_PROCESSOR)wg_gzrftag2c, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp642_rtime=rtime,&_temp642_rtime) : &rtime, _ftime.fixedflag ? (_temp643_ftime=ftime,&_temp643_ftime) : &ftime, (WF_PROCESSOR)wg_gzrftag2c, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrftag2c.fixedflag ? (_temp644_a_gzrftag2c=a_gzrftag2c,&_temp644_a_gzrftag2c) : &a_gzrftag2c, _pw_gzrftag2ca.fixedflag ? (_temp645_pw_gzrftag2ca=pw_gzrftag2ca,&_temp645_pw_gzrftag2ca) : &pw_gzrftag2ca, _pw_gzrftag2c.fixedflag ? (_temp646_pw_gzrftag2c=pw_gzrftag2c,&_temp646_pw_gzrftag2c) : &pw_gzrftag2c,
                          _pw_gzrftag2cd.fixedflag ? (_temp647_pw_gzrftag2cd=pw_gzrftag2cd,&_temp647_pw_gzrftag2cd) : &pw_gzrftag2cd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrftag2c  = _ia_gzrftag2c.fixedflag ?     ((void)((int)((a_gzrftag2c/target)*MAX_PG_IAMP)), ia_gzrftag2c) : (int)((a_gzrftag2c/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp648_target=target,&_temp648_target) : &target, (WF_PROCESSOR)wg_gzrftag2rc, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp649_rtime=rtime,&_temp649_rtime) : &rtime, _ftime.fixedflag ? (_temp650_ftime=ftime,&_temp650_ftime) : &ftime, (WF_PROCESSOR)wg_gzrftag2rc, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrftag2rc.fixedflag ? (_temp651_a_gzrftag2rc=a_gzrftag2rc,&_temp651_a_gzrftag2rc) : &a_gzrftag2rc, _pw_gzrftag2rca.fixedflag ? (_temp652_pw_gzrftag2rca=pw_gzrftag2rca,&_temp652_pw_gzrftag2rca) : &pw_gzrftag2rca, _pw_gzrftag2rc.fixedflag ? (_temp653_pw_gzrftag2rc=pw_gzrftag2rc,&_temp653_pw_gzrftag2rc) : &pw_gzrftag2rc,
                          _pw_gzrftag2rcd.fixedflag ? (_temp654_pw_gzrftag2rcd=pw_gzrftag2rcd,&_temp654_pw_gzrftag2rcd) : &pw_gzrftag2rcd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrftag2rc  = _ia_gzrftag2rc.fixedflag ?     ((void)((int)((a_gzrftag2rc/target)*MAX_PG_IAMP)), ia_gzrftag2rc) : (int)((a_gzrftag2rc/target)*MAX_PG_IAMP);
    }


{
  float target;
  gettarget(_target.fixedflag ? (_temp655_target=target,&_temp655_target) : &target,(WF_PROCESSOR)wg_BS0rf,&loggrd);
  if ((wg_BS0rf==TYPRHO1)||(wg_BS0rf==TYPRHO2)
        ||(wg_BS0rf==TYPOMEGA)||(wg_BS0rf==TYPTHETA))
    {
      if (res_BS0rf == 0)
        {
          res_BS0rf  = _res_BS0rf.fixedflag ?  ((void)(pw_BS0rf/(RF_UPDATE_TIME)), res_BS0rf) : pw_BS0rf/(RF_UPDATE_TIME);
        }
      ia_BS0rf  = _ia_BS0rf.fixedflag ?    ((void)((int)(a_BS0rf*MAX_PG_IAMP)), ia_BS0rf) : (int)(a_BS0rf*MAX_PG_IAMP);
    }    
  else
    {
      if (res_BS0rf == 0)
        {
          res_BS0rf  = _res_BS0rf.fixedflag ?  ((void)(pw_BS0rf/(GRAD_UPDATE_TIME)), res_BS0rf) : pw_BS0rf/(GRAD_UPDATE_TIME);
        }
      ia_BS0rf  = _ia_BS0rf.fixedflag ?     ((void)((int)((a_BS0rf/target)*MAX_PG_IAMP)), ia_BS0rf) : (int)((a_BS0rf/target)*MAX_PG_IAMP);
    }    
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp656_target=target,&_temp656_target) : &target, (WF_PROCESSOR)wg_gzBS0, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp657_rtime=rtime,&_temp657_rtime) : &rtime, _ftime.fixedflag ? (_temp658_ftime=ftime,&_temp658_ftime) : &ftime, (WF_PROCESSOR)wg_gzBS0, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzBS0.fixedflag ? (_temp659_a_gzBS0=a_gzBS0,&_temp659_a_gzBS0) : &a_gzBS0, _pw_gzBS0a.fixedflag ? (_temp660_pw_gzBS0a=pw_gzBS0a,&_temp660_pw_gzBS0a) : &pw_gzBS0a, _pw_gzBS0.fixedflag ? (_temp661_pw_gzBS0=pw_gzBS0,&_temp661_pw_gzBS0) : &pw_gzBS0,
                          _pw_gzBS0d.fixedflag ? (_temp662_pw_gzBS0d=pw_gzBS0d,&_temp662_pw_gzBS0d) : &pw_gzBS0d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzBS0  = _ia_gzBS0.fixedflag ?     ((void)((int)((a_gzBS0/target)*MAX_PG_IAMP)), ia_gzBS0) : (int)((a_gzBS0/target)*MAX_PG_IAMP);
    }

{
  float target;

  gettarget(_target.fixedflag ? (_temp663_target=target,&_temp663_target) : &target, (WF_PROCESSOR)wg_BS1rf, &loggrd);
  ia_BS1rf  = _ia_BS1rf.fixedflag ?     ((void)((int)((a_BS1rf/target)*MAX_PG_IAMP)), ia_BS1rf) : (int)((a_BS1rf/target)*MAX_PG_IAMP);
}

{
  float target;

  gettarget(_target.fixedflag ? (_temp664_target=target,&_temp664_target) : &target, (WF_PROCESSOR)wg_BS1rf_theta, &loggrd);
  ia_BS1rf_theta  = _ia_BS1rf_theta.fixedflag ?     ((void)((int)((a_BS1rf_theta/target)*MAX_PG_IAMP)), ia_BS1rf_theta) : (int)((a_BS1rf_theta/target)*MAX_PG_IAMP);
}

{
  float target;

  gettarget(_target.fixedflag ? (_temp665_target=target,&_temp665_target) : &target, (WF_PROCESSOR)wg_BS2rf, &loggrd);
  ia_BS2rf  = _ia_BS2rf.fixedflag ?     ((void)((int)((a_BS2rf/target)*MAX_PG_IAMP)), ia_BS2rf) : (int)((a_BS2rf/target)*MAX_PG_IAMP);
}

{
  float target;

  gettarget(_target.fixedflag ? (_temp666_target=target,&_temp666_target) : &target, (WF_PROCESSOR)wg_BS2rf_theta, &loggrd);
  ia_BS2rf_theta  = _ia_BS2rf_theta.fixedflag ?     ((void)((int)((a_BS2rf_theta/target)*MAX_PG_IAMP)), ia_BS2rf_theta) : (int)((a_BS2rf_theta/target)*MAX_PG_IAMP);
}

{
  float target;
  gettarget(_target.fixedflag ? (_temp667_target=target,&_temp667_target) : &target,(WF_PROCESSOR)wg_rf0,&loggrd);
  if ((wg_rf0==TYPRHO1)||(wg_rf0==TYPRHO2)
        ||(wg_rf0==TYPOMEGA)||(wg_rf0==TYPTHETA))
    {
      if (res_rf0 == 0)
        {
          res_rf0  = _res_rf0.fixedflag ?  ((void)(pw_rf0/(RF_UPDATE_TIME)), res_rf0) : pw_rf0/(RF_UPDATE_TIME);
        }
      ia_rf0  = _ia_rf0.fixedflag ?    ((void)((int)(a_rf0*MAX_PG_IAMP)), ia_rf0) : (int)(a_rf0*MAX_PG_IAMP);
    }    
  else
    {
      if (res_rf0 == 0)
        {
          res_rf0  = _res_rf0.fixedflag ?  ((void)(pw_rf0/(GRAD_UPDATE_TIME)), res_rf0) : pw_rf0/(GRAD_UPDATE_TIME);
        }
      ia_rf0  = _ia_rf0.fixedflag ?     ((void)((int)((a_rf0/target)*MAX_PG_IAMP)), ia_rf0) : (int)((a_rf0/target)*MAX_PG_IAMP);
    }    
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp668_target=target,&_temp668_target) : &target, (WF_PROCESSOR)wg_gz0, &loggrd);
        if (0 == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp669_rtime=rtime,&_temp669_rtime) : &rtime, _ftime.fixedflag ? (_temp670_ftime=ftime,&_temp670_ftime) : &ftime, (WF_PROCESSOR)wg_gz0, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz0.fixedflag ? (_temp671_a_gz0=a_gz0,&_temp671_a_gz0) : &a_gz0, _pw_gz0a.fixedflag ? (_temp672_pw_gz0a=pw_gz0a,&_temp672_pw_gz0a) : &pw_gz0a, _pw_gz0.fixedflag ? (_temp673_pw_gz0=pw_gz0,&_temp673_pw_gz0) : &pw_gz0,
                          _pw_gz0d.fixedflag ? (_temp674_pw_gz0d=pw_gz0d,&_temp674_pw_gz0d) : &pw_gz0d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz0  = _ia_gz0.fixedflag ?     ((void)((int)((a_gz0/target)*MAX_PG_IAMP)), ia_gz0) : (int)((a_gz0/target)*MAX_PG_IAMP);
    }










{
  float target;
  gettarget(_target.fixedflag ? (_temp675_target=target,&_temp675_target) : &target,(WF_PROCESSOR)wg_rf1mps1,&ps1loggrd);
  if ((wg_rf1mps1==TYPRHO1)||(wg_rf1mps1==TYPRHO2)
        ||(wg_rf1mps1==TYPOMEGA)||(wg_rf1mps1==TYPTHETA))
    {
      if (res_rf1mps1 == 0)
        {
          res_rf1mps1  = _res_rf1mps1.fixedflag ?  ((void)(pw_rf1mps1/(RF_UPDATE_TIME)), res_rf1mps1) : pw_rf1mps1/(RF_UPDATE_TIME);
        }
      ia_rf1mps1  = _ia_rf1mps1.fixedflag ?    ((void)((int)(a_rf1mps1*MAX_PG_IAMP)), ia_rf1mps1) : (int)(a_rf1mps1*MAX_PG_IAMP);
    }    
  else
    {
      if (res_rf1mps1 == 0)
        {
          res_rf1mps1  = _res_rf1mps1.fixedflag ?  ((void)(pw_rf1mps1/(GRAD_UPDATE_TIME)), res_rf1mps1) : pw_rf1mps1/(GRAD_UPDATE_TIME);
        }
      ia_rf1mps1  = _ia_rf1mps1.fixedflag ?     ((void)((int)((a_rf1mps1/target)*MAX_PG_IAMP)), ia_rf1mps1) : (int)((a_rf1mps1/target)*MAX_PG_IAMP);
    }    
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp676_target=target,&_temp676_target) : &target, (WF_PROCESSOR)wg_gyrf1mps1, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp677_rtime=rtime,&_temp677_rtime) : &rtime, _ftime.fixedflag ? (_temp678_ftime=ftime,&_temp678_ftime) : &ftime, (WF_PROCESSOR)wg_gyrf1mps1, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gyrf1mps1.fixedflag ? (_temp679_a_gyrf1mps1=a_gyrf1mps1,&_temp679_a_gyrf1mps1) : &a_gyrf1mps1, _pw_gyrf1mps1a.fixedflag ? (_temp680_pw_gyrf1mps1a=pw_gyrf1mps1a,&_temp680_pw_gyrf1mps1a) : &pw_gyrf1mps1a, _pw_gyrf1mps1.fixedflag ? (_temp681_pw_gyrf1mps1=pw_gyrf1mps1,&_temp681_pw_gyrf1mps1) : &pw_gyrf1mps1,
                          _pw_gyrf1mps1d.fixedflag ? (_temp682_pw_gyrf1mps1d=pw_gyrf1mps1d,&_temp682_pw_gyrf1mps1d) : &pw_gyrf1mps1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gyrf1mps1  = _ia_gyrf1mps1.fixedflag ?     ((void)((int)((a_gyrf1mps1/target)*MAX_PG_IAMP)), ia_gyrf1mps1) : (int)((a_gyrf1mps1/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp683_target=target,&_temp683_target) : &target, (WF_PROCESSOR)wg_gy1mps1, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp684_rtime=rtime,&_temp684_rtime) : &rtime, _ftime.fixedflag ? (_temp685_ftime=ftime,&_temp685_ftime) : &ftime, (WF_PROCESSOR)wg_gy1mps1, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gy1mps1.fixedflag ? (_temp686_a_gy1mps1=a_gy1mps1,&_temp686_a_gy1mps1) : &a_gy1mps1, _pw_gy1mps1a.fixedflag ? (_temp687_pw_gy1mps1a=pw_gy1mps1a,&_temp687_pw_gy1mps1a) : &pw_gy1mps1a, _pw_gy1mps1.fixedflag ? (_temp688_pw_gy1mps1=pw_gy1mps1,&_temp688_pw_gy1mps1) : &pw_gy1mps1,
                          _pw_gy1mps1d.fixedflag ? (_temp689_pw_gy1mps1d=pw_gy1mps1d,&_temp689_pw_gy1mps1d) : &pw_gy1mps1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gy1mps1  = _ia_gy1mps1.fixedflag ?     ((void)((int)((a_gy1mps1/target)*MAX_PG_IAMP)), ia_gy1mps1) : (int)((a_gy1mps1/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp690_target=target,&_temp690_target) : &target, (WF_PROCESSOR)wg_gzrf1mps1, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp691_rtime=rtime,&_temp691_rtime) : &rtime, _ftime.fixedflag ? (_temp692_ftime=ftime,&_temp692_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf1mps1, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf1mps1.fixedflag ? (_temp693_a_gzrf1mps1=a_gzrf1mps1,&_temp693_a_gzrf1mps1) : &a_gzrf1mps1, _pw_gzrf1mps1a.fixedflag ? (_temp694_pw_gzrf1mps1a=pw_gzrf1mps1a,&_temp694_pw_gzrf1mps1a) : &pw_gzrf1mps1a, _pw_gzrf1mps1.fixedflag ? (_temp695_pw_gzrf1mps1=pw_gzrf1mps1,&_temp695_pw_gzrf1mps1) : &pw_gzrf1mps1,
                          _pw_gzrf1mps1d.fixedflag ? (_temp696_pw_gzrf1mps1d=pw_gzrf1mps1d,&_temp696_pw_gzrf1mps1d) : &pw_gzrf1mps1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf1mps1  = _ia_gzrf1mps1.fixedflag ?     ((void)((int)((a_gzrf1mps1/target)*MAX_PG_IAMP)), ia_gzrf1mps1) : (int)((a_gzrf1mps1/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp697_target=target,&_temp697_target) : &target, (WF_PROCESSOR)wg_gz1mps1, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp698_rtime=rtime,&_temp698_rtime) : &rtime, _ftime.fixedflag ? (_temp699_ftime=ftime,&_temp699_ftime) : &ftime, (WF_PROCESSOR)wg_gz1mps1, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz1mps1.fixedflag ? (_temp700_a_gz1mps1=a_gz1mps1,&_temp700_a_gz1mps1) : &a_gz1mps1, _pw_gz1mps1a.fixedflag ? (_temp701_pw_gz1mps1a=pw_gz1mps1a,&_temp701_pw_gz1mps1a) : &pw_gz1mps1a, _pw_gz1mps1.fixedflag ? (_temp702_pw_gz1mps1=pw_gz1mps1,&_temp702_pw_gz1mps1) : &pw_gz1mps1,
                          _pw_gz1mps1d.fixedflag ? (_temp703_pw_gz1mps1d=pw_gz1mps1d,&_temp703_pw_gz1mps1d) : &pw_gz1mps1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz1mps1  = _ia_gz1mps1.fixedflag ?     ((void)((int)((a_gz1mps1/target)*MAX_PG_IAMP)), ia_gz1mps1) : (int)((a_gz1mps1/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp704_target=target,&_temp704_target) : &target, (WF_PROCESSOR)wg_gx1mps1, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp705_rtime=rtime,&_temp705_rtime) : &rtime, _ftime.fixedflag ? (_temp706_ftime=ftime,&_temp706_ftime) : &ftime, (WF_PROCESSOR)wg_gx1mps1, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx1mps1.fixedflag ? (_temp707_a_gx1mps1=a_gx1mps1,&_temp707_a_gx1mps1) : &a_gx1mps1, _pw_gx1mps1a.fixedflag ? (_temp708_pw_gx1mps1a=pw_gx1mps1a,&_temp708_pw_gx1mps1a) : &pw_gx1mps1a, _pw_gx1mps1.fixedflag ? (_temp709_pw_gx1mps1=pw_gx1mps1,&_temp709_pw_gx1mps1) : &pw_gx1mps1,
                          _pw_gx1mps1d.fixedflag ? (_temp710_pw_gx1mps1d=pw_gx1mps1d,&_temp710_pw_gx1mps1d) : &pw_gx1mps1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx1mps1  = _ia_gx1mps1.fixedflag ?     ((void)((int)((a_gx1mps1/target)*MAX_PG_IAMP)), ia_gx1mps1) : (int)((a_gx1mps1/target)*MAX_PG_IAMP);
    }


    if (ampslice(_a_gzrf2mps1.fixedflag ? (_temp711_a_gzrf2mps1=a_gzrf2mps1,&_temp711_a_gzrf2mps1) : &a_gzrf2mps1,(LONG)(4000000*cyc_rf2mps1/
        pw_rf2mps1),
        (float)thk_rf2mps1,(float)gscale_rf2mps1,
        (int)TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf2mps1a.fixedflag ? (_temp712_pw_gzrf2mps1a=pw_gzrf2mps1a,&_temp712_pw_gzrf2mps1a) : &pw_gzrf2mps1a,a_gzrf2mps1,ps1loggrd.tz,
                ps1loggrd.zrt,TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf2mps1d.fixedflag ? (_temp713_pw_gzrf2mps1d=pw_gzrf2mps1d,&_temp713_pw_gzrf2mps1d) : &pw_gzrf2mps1d,a_gzrf2mps1,ps1loggrd.tz,
                ps1loggrd.zft,TYPNDEF)== FAILURE)
    {
        return FAILURE;
    }

    ia_gzrf2mps1  = _ia_gzrf2mps1.fixedflag ?    ((void)((int)(a_gzrf2mps1*MAX_PG_IAMP/ps1loggrd.tz)), ia_gzrf2mps1) : (int)(a_gzrf2mps1*MAX_PG_IAMP/ps1loggrd.tz);

    ia_rf2mps1  = _ia_rf2mps1.fixedflag ?    ((void)((int)(a_rf2mps1*MAX_PG_IAMP)), ia_rf2mps1) : (int)(a_rf2mps1*MAX_PG_IAMP);
    if (res_rf2mps1 == 0)
    {
        res_rf2mps1  = _res_rf2mps1.fixedflag ?  ((void)(pw_rf2mps1/(RF_UPDATE_TIME)), res_rf2mps1) : pw_rf2mps1/(RF_UPDATE_TIME);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp714_target=target,&_temp714_target) : &target, (WF_PROCESSOR)wg_gzrf2lmps1, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp715_rtime=rtime,&_temp715_rtime) : &rtime, _ftime.fixedflag ? (_temp716_ftime=ftime,&_temp716_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf2lmps1, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf2lmps1.fixedflag ? (_temp717_a_gzrf2lmps1=a_gzrf2lmps1,&_temp717_a_gzrf2lmps1) : &a_gzrf2lmps1, _pw_gzrf2lmps1a.fixedflag ? (_temp718_pw_gzrf2lmps1a=pw_gzrf2lmps1a,&_temp718_pw_gzrf2lmps1a) : &pw_gzrf2lmps1a, _pw_gzrf2lmps1.fixedflag ? (_temp719_pw_gzrf2lmps1=pw_gzrf2lmps1,&_temp719_pw_gzrf2lmps1) : &pw_gzrf2lmps1,
                          _pw_gzrf2lmps1d.fixedflag ? (_temp720_pw_gzrf2lmps1d=pw_gzrf2lmps1d,&_temp720_pw_gzrf2lmps1d) : &pw_gzrf2lmps1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf2lmps1  = _ia_gzrf2lmps1.fixedflag ?     ((void)((int)((a_gzrf2lmps1/target)*MAX_PG_IAMP)), ia_gzrf2lmps1) : (int)((a_gzrf2lmps1/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp721_target=target,&_temp721_target) : &target, (WF_PROCESSOR)wg_gzrf2rmps1, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp722_rtime=rtime,&_temp722_rtime) : &rtime, _ftime.fixedflag ? (_temp723_ftime=ftime,&_temp723_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf2rmps1, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf2rmps1.fixedflag ? (_temp724_a_gzrf2rmps1=a_gzrf2rmps1,&_temp724_a_gzrf2rmps1) : &a_gzrf2rmps1, _pw_gzrf2rmps1a.fixedflag ? (_temp725_pw_gzrf2rmps1a=pw_gzrf2rmps1a,&_temp725_pw_gzrf2rmps1a) : &pw_gzrf2rmps1a, _pw_gzrf2rmps1.fixedflag ? (_temp726_pw_gzrf2rmps1=pw_gzrf2rmps1,&_temp726_pw_gzrf2rmps1) : &pw_gzrf2rmps1,
                          _pw_gzrf2rmps1d.fixedflag ? (_temp727_pw_gzrf2rmps1d=pw_gzrf2rmps1d,&_temp727_pw_gzrf2rmps1d) : &pw_gzrf2rmps1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf2rmps1  = _ia_gzrf2rmps1.fixedflag ?     ((void)((int)((a_gzrf2rmps1/target)*MAX_PG_IAMP)), ia_gzrf2rmps1) : (int)((a_gzrf2rmps1/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp728_target=target,&_temp728_target) : &target, (WF_PROCESSOR)wg_gxwmps1, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp729_rtime=rtime,&_temp729_rtime) : &rtime, _ftime.fixedflag ? (_temp730_ftime=ftime,&_temp730_ftime) : &ftime, (WF_PROCESSOR)wg_gxwmps1, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxwmps1.fixedflag ? (_temp731_a_gxwmps1=a_gxwmps1,&_temp731_a_gxwmps1) : &a_gxwmps1, _pw_gxwmps1a.fixedflag ? (_temp732_pw_gxwmps1a=pw_gxwmps1a,&_temp732_pw_gxwmps1a) : &pw_gxwmps1a, _pw_gxwmps1.fixedflag ? (_temp733_pw_gxwmps1=pw_gxwmps1,&_temp733_pw_gxwmps1) : &pw_gxwmps1,
                          _pw_gxwmps1d.fixedflag ? (_temp734_pw_gxwmps1d=pw_gxwmps1d,&_temp734_pw_gxwmps1d) : &pw_gxwmps1d) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxwmps1  = _ia_gxwmps1.fixedflag ?     ((void)((int)((a_gxwmps1/target)*MAX_PG_IAMP)), ia_gxwmps1) : (int)((a_gxwmps1/target)*MAX_PG_IAMP);
    }




    if (ampslice(_a_gzrf1cfl.fixedflag ? (_temp735_a_gzrf1cfl=a_gzrf1cfl,&_temp735_a_gzrf1cfl) : &a_gzrf1cfl,(LONG)(4000000*cyc_rf1cfl/
        pw_rf1cfl),
        (float)thk_rf1cfl,(float)gscale_rf1cfl,
        (int)TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf1cfla.fixedflag ? (_temp736_pw_gzrf1cfla=pw_gzrf1cfla,&_temp736_pw_gzrf1cfla) : &pw_gzrf1cfla,a_gzrf1cfl,cflloggrd.tz,
                cflloggrd.zrt,TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf1cfld.fixedflag ? (_temp737_pw_gzrf1cfld=pw_gzrf1cfld,&_temp737_pw_gzrf1cfld) : &pw_gzrf1cfld,a_gzrf1cfl,cflloggrd.tz,
                cflloggrd.zft,TYPNDEF)== FAILURE)
    {
        return FAILURE;
    }

    ia_gzrf1cfl  = _ia_gzrf1cfl.fixedflag ?    ((void)((int)(a_gzrf1cfl*MAX_PG_IAMP/cflloggrd.tz)), ia_gzrf1cfl) : (int)(a_gzrf1cfl*MAX_PG_IAMP/cflloggrd.tz);

    ia_rf1cfl  = _ia_rf1cfl.fixedflag ?    ((void)((int)(a_rf1cfl*MAX_PG_IAMP)), ia_rf1cfl) : (int)(a_rf1cfl*MAX_PG_IAMP);
    if (res_rf1cfl == 0)
    {
        res_rf1cfl  = _res_rf1cfl.fixedflag ?  ((void)(pw_rf1cfl/(RF_UPDATE_TIME)), res_rf1cfl) : pw_rf1cfl/(RF_UPDATE_TIME);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp738_target=target,&_temp738_target) : &target, (WF_PROCESSOR)wg_gz1cfl, &cflloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp739_rtime=rtime,&_temp739_rtime) : &rtime, _ftime.fixedflag ? (_temp740_ftime=ftime,&_temp740_ftime) : &ftime, (WF_PROCESSOR)wg_gz1cfl, &cflloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz1cfl.fixedflag ? (_temp741_a_gz1cfl=a_gz1cfl,&_temp741_a_gz1cfl) : &a_gz1cfl, _pw_gz1cfla.fixedflag ? (_temp742_pw_gz1cfla=pw_gz1cfla,&_temp742_pw_gz1cfla) : &pw_gz1cfla, _pw_gz1cfl.fixedflag ? (_temp743_pw_gz1cfl=pw_gz1cfl,&_temp743_pw_gz1cfl) : &pw_gz1cfl,
                          _pw_gz1cfld.fixedflag ? (_temp744_pw_gz1cfld=pw_gz1cfld,&_temp744_pw_gz1cfld) : &pw_gz1cfld) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz1cfl  = _ia_gz1cfl.fixedflag ?     ((void)((int)((a_gz1cfl/target)*MAX_PG_IAMP)), ia_gz1cfl) : (int)((a_gz1cfl/target)*MAX_PG_IAMP);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp745_target=target,&_temp745_target) : &target, (WF_PROCESSOR)wg_gykcfl, &cflloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp746_rtime=rtime,&_temp746_rtime) : &rtime, _ftime.fixedflag ? (_temp747_ftime=ftime,&_temp747_ftime) : &ftime, (WF_PROCESSOR)wg_gykcfl, &cflloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gykcfl.fixedflag ? (_temp748_a_gykcfl=a_gykcfl,&_temp748_a_gykcfl) : &a_gykcfl, _pw_gykcfla.fixedflag ? (_temp749_pw_gykcfla=pw_gykcfla,&_temp749_pw_gykcfla) : &pw_gykcfla, _pw_gykcfl.fixedflag ? (_temp750_pw_gykcfl=pw_gykcfl,&_temp750_pw_gykcfl) : &pw_gykcfl,
                          _pw_gykcfld.fixedflag ? (_temp751_pw_gykcfld=pw_gykcfld,&_temp751_pw_gykcfld) : &pw_gykcfld) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gykcfl  = _ia_gykcfl.fixedflag ?     ((void)((int)((a_gykcfl/target)*MAX_PG_IAMP)), ia_gykcfl) : (int)((a_gykcfl/target)*MAX_PG_IAMP);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp752_target=target,&_temp752_target) : &target, (WF_PROCESSOR)wg_gxkrcvn, &rcvnloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp753_rtime=rtime,&_temp753_rtime) : &rtime, _ftime.fixedflag ? (_temp754_ftime=ftime,&_temp754_ftime) : &ftime, (WF_PROCESSOR)wg_gxkrcvn, &rcvnloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxkrcvn.fixedflag ? (_temp755_a_gxkrcvn=a_gxkrcvn,&_temp755_a_gxkrcvn) : &a_gxkrcvn, _pw_gxkrcvna.fixedflag ? (_temp756_pw_gxkrcvna=pw_gxkrcvna,&_temp756_pw_gxkrcvna) : &pw_gxkrcvna, _pw_gxkrcvn.fixedflag ? (_temp757_pw_gxkrcvn=pw_gxkrcvn,&_temp757_pw_gxkrcvn) : &pw_gxkrcvn,
                          _pw_gxkrcvnd.fixedflag ? (_temp758_pw_gxkrcvnd=pw_gxkrcvnd,&_temp758_pw_gxkrcvnd) : &pw_gxkrcvnd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxkrcvn  = _ia_gxkrcvn.fixedflag ?     ((void)((int)((a_gxkrcvn/target)*MAX_PG_IAMP)), ia_gxkrcvn) : (int)((a_gxkrcvn/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp759_target=target,&_temp759_target) : &target, (WF_PROCESSOR)wg_gykrcvn, &rcvnloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp760_rtime=rtime,&_temp760_rtime) : &rtime, _ftime.fixedflag ? (_temp761_ftime=ftime,&_temp761_ftime) : &ftime, (WF_PROCESSOR)wg_gykrcvn, &rcvnloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gykrcvn.fixedflag ? (_temp762_a_gykrcvn=a_gykrcvn,&_temp762_a_gykrcvn) : &a_gykrcvn, _pw_gykrcvna.fixedflag ? (_temp763_pw_gykrcvna=pw_gykrcvna,&_temp763_pw_gykrcvna) : &pw_gykrcvna, _pw_gykrcvn.fixedflag ? (_temp764_pw_gykrcvn=pw_gykrcvn,&_temp764_pw_gykrcvn) : &pw_gykrcvn,
                          _pw_gykrcvnd.fixedflag ? (_temp765_pw_gykrcvnd=pw_gykrcvnd,&_temp765_pw_gykrcvnd) : &pw_gykrcvnd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gykrcvn  = _ia_gykrcvn.fixedflag ?     ((void)((int)((a_gykrcvn/target)*MAX_PG_IAMP)), ia_gykrcvn) : (int)((a_gykrcvn/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp766_target=target,&_temp766_target) : &target, (WF_PROCESSOR)wg_gzkrcvn, &rcvnloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp767_rtime=rtime,&_temp767_rtime) : &rtime, _ftime.fixedflag ? (_temp768_ftime=ftime,&_temp768_ftime) : &ftime, (WF_PROCESSOR)wg_gzkrcvn, &rcvnloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzkrcvn.fixedflag ? (_temp769_a_gzkrcvn=a_gzkrcvn,&_temp769_a_gzkrcvn) : &a_gzkrcvn, _pw_gzkrcvna.fixedflag ? (_temp770_pw_gzkrcvna=pw_gzkrcvna,&_temp770_pw_gzkrcvna) : &pw_gzkrcvna, _pw_gzkrcvn.fixedflag ? (_temp771_pw_gzkrcvn=pw_gzkrcvn,&_temp771_pw_gzkrcvn) : &pw_gzkrcvn,
                          _pw_gzkrcvnd.fixedflag ? (_temp772_pw_gzkrcvnd=pw_gzkrcvnd,&_temp772_pw_gzkrcvnd) : &pw_gzkrcvnd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzkrcvn  = _ia_gzkrcvn.fixedflag ?     ((void)((int)((a_gzkrcvn/target)*MAX_PG_IAMP)), ia_gzkrcvn) : (int)((a_gzkrcvn/target)*MAX_PG_IAMP);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp773_target=target,&_temp773_target) : &target, (WF_PROCESSOR)wg_gxk2rcvn, &rcvnloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp774_rtime=rtime,&_temp774_rtime) : &rtime, _ftime.fixedflag ? (_temp775_ftime=ftime,&_temp775_ftime) : &ftime, (WF_PROCESSOR)wg_gxk2rcvn, &rcvnloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxk2rcvn.fixedflag ? (_temp776_a_gxk2rcvn=a_gxk2rcvn,&_temp776_a_gxk2rcvn) : &a_gxk2rcvn, _pw_gxk2rcvna.fixedflag ? (_temp777_pw_gxk2rcvna=pw_gxk2rcvna,&_temp777_pw_gxk2rcvna) : &pw_gxk2rcvna, _pw_gxk2rcvn.fixedflag ? (_temp778_pw_gxk2rcvn=pw_gxk2rcvn,&_temp778_pw_gxk2rcvn) : &pw_gxk2rcvn,
                          _pw_gxk2rcvnd.fixedflag ? (_temp779_pw_gxk2rcvnd=pw_gxk2rcvnd,&_temp779_pw_gxk2rcvnd) : &pw_gxk2rcvnd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxk2rcvn  = _ia_gxk2rcvn.fixedflag ?     ((void)((int)((a_gxk2rcvn/target)*MAX_PG_IAMP)), ia_gxk2rcvn) : (int)((a_gxk2rcvn/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp780_target=target,&_temp780_target) : &target, (WF_PROCESSOR)wg_gyk2rcvn, &rcvnloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp781_rtime=rtime,&_temp781_rtime) : &rtime, _ftime.fixedflag ? (_temp782_ftime=ftime,&_temp782_ftime) : &ftime, (WF_PROCESSOR)wg_gyk2rcvn, &rcvnloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gyk2rcvn.fixedflag ? (_temp783_a_gyk2rcvn=a_gyk2rcvn,&_temp783_a_gyk2rcvn) : &a_gyk2rcvn, _pw_gyk2rcvna.fixedflag ? (_temp784_pw_gyk2rcvna=pw_gyk2rcvna,&_temp784_pw_gyk2rcvna) : &pw_gyk2rcvna, _pw_gyk2rcvn.fixedflag ? (_temp785_pw_gyk2rcvn=pw_gyk2rcvn,&_temp785_pw_gyk2rcvn) : &pw_gyk2rcvn,
                          _pw_gyk2rcvnd.fixedflag ? (_temp786_pw_gyk2rcvnd=pw_gyk2rcvnd,&_temp786_pw_gyk2rcvnd) : &pw_gyk2rcvnd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gyk2rcvn  = _ia_gyk2rcvn.fixedflag ?     ((void)((int)((a_gyk2rcvn/target)*MAX_PG_IAMP)), ia_gyk2rcvn) : (int)((a_gyk2rcvn/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp787_target=target,&_temp787_target) : &target, (WF_PROCESSOR)wg_gzk2rcvn, &rcvnloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp788_rtime=rtime,&_temp788_rtime) : &rtime, _ftime.fixedflag ? (_temp789_ftime=ftime,&_temp789_ftime) : &ftime, (WF_PROCESSOR)wg_gzk2rcvn, &rcvnloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzk2rcvn.fixedflag ? (_temp790_a_gzk2rcvn=a_gzk2rcvn,&_temp790_a_gzk2rcvn) : &a_gzk2rcvn, _pw_gzk2rcvna.fixedflag ? (_temp791_pw_gzk2rcvna=pw_gzk2rcvna,&_temp791_pw_gzk2rcvna) : &pw_gzk2rcvna, _pw_gzk2rcvn.fixedflag ? (_temp792_pw_gzk2rcvn=pw_gzk2rcvn,&_temp792_pw_gzk2rcvn) : &pw_gzk2rcvn,
                          _pw_gzk2rcvnd.fixedflag ? (_temp793_pw_gzk2rcvnd=pw_gzk2rcvnd,&_temp793_pw_gzk2rcvnd) : &pw_gzk2rcvnd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzk2rcvn  = _ia_gzk2rcvn.fixedflag ?     ((void)((int)((a_gzk2rcvn/target)*MAX_PG_IAMP)), ia_gzk2rcvn) : (int)((a_gzk2rcvn/target)*MAX_PG_IAMP);
    }



  ia_rcvrbl  = _ia_rcvrbl.fixedflag ?  ((void)(0), ia_rcvrbl) : 0;


  ia_rcvrbl2  = _ia_rcvrbl2.fixedflag ?  ((void)(0), ia_rcvrbl2) : 0;


  if (ampslice(_a_gzrf0cfh.fixedflag ? (_temp794_a_gzrf0cfh=a_gzrf0cfh,&_temp794_a_gzrf0cfh) : &a_gzrf0cfh,(LONG)(4000000*cyc_rf0cfh/
					 pw_rf0cfh),
	       (float)thk_rf0cfh,(float)gscale_rf0cfh,
	       (int)TYPNDEF) == FAILURE) return FAILURE;
  if (optramp(_pw_gzrf0cfha.fixedflag ? (_temp795_pw_gzrf0cfha=pw_gzrf0cfha,&_temp795_pw_gzrf0cfha) : &pw_gzrf0cfha,a_gzrf0cfh,cfhloggrd.tz,
	      cfhloggrd.zrt,(int)TYPNDEF) 
      == FAILURE) return FAILURE;
  if (optramp(_pw_gzrf0cfhd.fixedflag ? (_temp796_pw_gzrf0cfhd=pw_gzrf0cfhd,&_temp796_pw_gzrf0cfhd) : &pw_gzrf0cfhd,a_gzrf0cfh,cfhloggrd.tz,
	      cfhloggrd.zft,(int)TYPNDEF) 
      == FAILURE) return FAILURE;
 
  ia_gzrf0cfh  = _ia_gzrf0cfh.fixedflag ?    ((void)((int)(a_gzrf0cfh*MAX_PG_IAMP/cfhloggrd.tz)), ia_gzrf0cfh) : (int)(a_gzrf0cfh*MAX_PG_IAMP/cfhloggrd.tz);
  ia_rf0cfh  = _ia_rf0cfh.fixedflag ?    ((void)((int)(a_rf0cfh*MAX_PG_IAMP)), ia_rf0cfh) : (int)(a_rf0cfh*MAX_PG_IAMP);


    {
        ia_omegarf0cfh    = _ia_omegarf0cfh.fixedflag ?    ((void)((int)(a_omegarf0cfh*MAX_PG_IAMP)), ia_omegarf0cfh) : (int)(a_omegarf0cfh*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp797_target=target,&_temp797_target) : &target, (WF_PROCESSOR)wg_gyrf0kcfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp798_rtime=rtime,&_temp798_rtime) : &rtime, _ftime.fixedflag ? (_temp799_ftime=ftime,&_temp799_ftime) : &ftime, (WF_PROCESSOR)wg_gyrf0kcfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gyrf0kcfh.fixedflag ? (_temp800_a_gyrf0kcfh=a_gyrf0kcfh,&_temp800_a_gyrf0kcfh) : &a_gyrf0kcfh, _pw_gyrf0kcfha.fixedflag ? (_temp801_pw_gyrf0kcfha=pw_gyrf0kcfha,&_temp801_pw_gyrf0kcfha) : &pw_gyrf0kcfha, _pw_gyrf0kcfh.fixedflag ? (_temp802_pw_gyrf0kcfh=pw_gyrf0kcfh,&_temp802_pw_gyrf0kcfh) : &pw_gyrf0kcfh,
                          _pw_gyrf0kcfhd.fixedflag ? (_temp803_pw_gyrf0kcfhd=pw_gyrf0kcfhd,&_temp803_pw_gyrf0kcfhd) : &pw_gyrf0kcfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gyrf0kcfh  = _ia_gyrf0kcfh.fixedflag ?     ((void)((int)((a_gyrf0kcfh/target)*MAX_PG_IAMP)), ia_gyrf0kcfh) : (int)((a_gyrf0kcfh/target)*MAX_PG_IAMP);
    }







    if (ampslice(_a_gzrf1cfh.fixedflag ? (_temp804_a_gzrf1cfh=a_gzrf1cfh,&_temp804_a_gzrf1cfh) : &a_gzrf1cfh,(LONG)(4000000*cyc_rf1cfh/
        pw_rf1cfh),
        (float)thk_rf1cfh,(float)gscale_rf1cfh,
        (int)TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf1cfha.fixedflag ? (_temp805_pw_gzrf1cfha=pw_gzrf1cfha,&_temp805_pw_gzrf1cfha) : &pw_gzrf1cfha,a_gzrf1cfh,cfhloggrd.tz,
                cfhloggrd.zrt,TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf1cfhd.fixedflag ? (_temp806_pw_gzrf1cfhd=pw_gzrf1cfhd,&_temp806_pw_gzrf1cfhd) : &pw_gzrf1cfhd,a_gzrf1cfh,cfhloggrd.tz,
                cfhloggrd.zft,TYPNDEF)== FAILURE)
    {
        return FAILURE;
    }

    ia_gzrf1cfh  = _ia_gzrf1cfh.fixedflag ?    ((void)((int)(a_gzrf1cfh*MAX_PG_IAMP/cfhloggrd.tz)), ia_gzrf1cfh) : (int)(a_gzrf1cfh*MAX_PG_IAMP/cfhloggrd.tz);

    ia_rf1cfh  = _ia_rf1cfh.fixedflag ?    ((void)((int)(a_rf1cfh*MAX_PG_IAMP)), ia_rf1cfh) : (int)(a_rf1cfh*MAX_PG_IAMP);
    if (res_rf1cfh == 0)
    {
        res_rf1cfh  = _res_rf1cfh.fixedflag ?  ((void)(pw_rf1cfh/(RF_UPDATE_TIME)), res_rf1cfh) : pw_rf1cfh/(RF_UPDATE_TIME);
    }


{
  float target;
  gettarget(_target.fixedflag ? (_temp807_target=target,&_temp807_target) : &target,(WF_PROCESSOR)wg_rf2cfh,&cfhloggrd);
  if ((wg_rf2cfh==TYPRHO1)||(wg_rf2cfh==TYPRHO2)
        ||(wg_rf2cfh==TYPOMEGA)||(wg_rf2cfh==TYPTHETA))
    {
      if (res_rf2cfh == 0)
        {
          res_rf2cfh  = _res_rf2cfh.fixedflag ?  ((void)(pw_rf2cfh/(RF_UPDATE_TIME)), res_rf2cfh) : pw_rf2cfh/(RF_UPDATE_TIME);
        }
      ia_rf2cfh  = _ia_rf2cfh.fixedflag ?    ((void)((int)(a_rf2cfh*MAX_PG_IAMP)), ia_rf2cfh) : (int)(a_rf2cfh*MAX_PG_IAMP);
    }    
  else
    {
      if (res_rf2cfh == 0)
        {
          res_rf2cfh  = _res_rf2cfh.fixedflag ?  ((void)(pw_rf2cfh/(GRAD_UPDATE_TIME)), res_rf2cfh) : pw_rf2cfh/(GRAD_UPDATE_TIME);
        }
      ia_rf2cfh  = _ia_rf2cfh.fixedflag ?     ((void)((int)((a_rf2cfh/target)*MAX_PG_IAMP)), ia_rf2cfh) : (int)((a_rf2cfh/target)*MAX_PG_IAMP);
    }    
}

{
  float target;
  gettarget(_target.fixedflag ? (_temp808_target=target,&_temp808_target) : &target,(WF_PROCESSOR)wg_rf3cfh,&cfhloggrd);
  if ((wg_rf3cfh==TYPRHO1)||(wg_rf3cfh==TYPRHO2)
        ||(wg_rf3cfh==TYPOMEGA)||(wg_rf3cfh==TYPTHETA))
    {
      if (res_rf3cfh == 0)
        {
          res_rf3cfh  = _res_rf3cfh.fixedflag ?  ((void)(pw_rf3cfh/(RF_UPDATE_TIME)), res_rf3cfh) : pw_rf3cfh/(RF_UPDATE_TIME);
        }
      ia_rf3cfh  = _ia_rf3cfh.fixedflag ?    ((void)((int)(a_rf3cfh*MAX_PG_IAMP)), ia_rf3cfh) : (int)(a_rf3cfh*MAX_PG_IAMP);
    }    
  else
    {
      if (res_rf3cfh == 0)
        {
          res_rf3cfh  = _res_rf3cfh.fixedflag ?  ((void)(pw_rf3cfh/(GRAD_UPDATE_TIME)), res_rf3cfh) : pw_rf3cfh/(GRAD_UPDATE_TIME);
        }
      ia_rf3cfh  = _ia_rf3cfh.fixedflag ?     ((void)((int)((a_rf3cfh/target)*MAX_PG_IAMP)), ia_rf3cfh) : (int)((a_rf3cfh/target)*MAX_PG_IAMP);
    }    
}

{
  float target;
  gettarget(_target.fixedflag ? (_temp809_target=target,&_temp809_target) : &target,(WF_PROCESSOR)wg_rf4cfh,&loggrd);
  if ((wg_rf4cfh==TYPRHO1)||(wg_rf4cfh==TYPRHO2)
        ||(wg_rf4cfh==TYPOMEGA)||(wg_rf4cfh==TYPTHETA))
    {
      if (res_rf4cfh == 0)
        {
          res_rf4cfh  = _res_rf4cfh.fixedflag ?  ((void)(pw_rf4cfh/(RF_UPDATE_TIME)), res_rf4cfh) : pw_rf4cfh/(RF_UPDATE_TIME);
        }
      ia_rf4cfh  = _ia_rf4cfh.fixedflag ?    ((void)((int)(a_rf4cfh*MAX_PG_IAMP)), ia_rf4cfh) : (int)(a_rf4cfh*MAX_PG_IAMP);
    }    
  else
    {
      if (res_rf4cfh == 0)
        {
          res_rf4cfh  = _res_rf4cfh.fixedflag ?  ((void)(pw_rf4cfh/(GRAD_UPDATE_TIME)), res_rf4cfh) : pw_rf4cfh/(GRAD_UPDATE_TIME);
        }
      ia_rf4cfh  = _ia_rf4cfh.fixedflag ?     ((void)((int)((a_rf4cfh/target)*MAX_PG_IAMP)), ia_rf4cfh) : (int)((a_rf4cfh/target)*MAX_PG_IAMP);
    }    
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp810_target=target,&_temp810_target) : &target, (WF_PROCESSOR)wg_gxrf2cfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp811_rtime=rtime,&_temp811_rtime) : &rtime, _ftime.fixedflag ? (_temp812_ftime=ftime,&_temp812_ftime) : &ftime, (WF_PROCESSOR)wg_gxrf2cfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxrf2cfh.fixedflag ? (_temp813_a_gxrf2cfh=a_gxrf2cfh,&_temp813_a_gxrf2cfh) : &a_gxrf2cfh, _pw_gxrf2cfha.fixedflag ? (_temp814_pw_gxrf2cfha=pw_gxrf2cfha,&_temp814_pw_gxrf2cfha) : &pw_gxrf2cfha, _pw_gxrf2cfh.fixedflag ? (_temp815_pw_gxrf2cfh=pw_gxrf2cfh,&_temp815_pw_gxrf2cfh) : &pw_gxrf2cfh,
                          _pw_gxrf2cfhd.fixedflag ? (_temp816_pw_gxrf2cfhd=pw_gxrf2cfhd,&_temp816_pw_gxrf2cfhd) : &pw_gxrf2cfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxrf2cfh  = _ia_gxrf2cfh.fixedflag ?     ((void)((int)((a_gxrf2cfh/target)*MAX_PG_IAMP)), ia_gxrf2cfh) : (int)((a_gxrf2cfh/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp817_target=target,&_temp817_target) : &target, (WF_PROCESSOR)wg_gyrf2cfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp818_rtime=rtime,&_temp818_rtime) : &rtime, _ftime.fixedflag ? (_temp819_ftime=ftime,&_temp819_ftime) : &ftime, (WF_PROCESSOR)wg_gyrf2cfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gyrf2cfh.fixedflag ? (_temp820_a_gyrf2cfh=a_gyrf2cfh,&_temp820_a_gyrf2cfh) : &a_gyrf2cfh, _pw_gyrf2cfha.fixedflag ? (_temp821_pw_gyrf2cfha=pw_gyrf2cfha,&_temp821_pw_gyrf2cfha) : &pw_gyrf2cfha, _pw_gyrf2cfh.fixedflag ? (_temp822_pw_gyrf2cfh=pw_gyrf2cfh,&_temp822_pw_gyrf2cfh) : &pw_gyrf2cfh,
                          _pw_gyrf2cfhd.fixedflag ? (_temp823_pw_gyrf2cfhd=pw_gyrf2cfhd,&_temp823_pw_gyrf2cfhd) : &pw_gyrf2cfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gyrf2cfh  = _ia_gyrf2cfh.fixedflag ?     ((void)((int)((a_gyrf2cfh/target)*MAX_PG_IAMP)), ia_gyrf2cfh) : (int)((a_gyrf2cfh/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp824_target=target,&_temp824_target) : &target, (WF_PROCESSOR)wg_gzrf2lcfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp825_rtime=rtime,&_temp825_rtime) : &rtime, _ftime.fixedflag ? (_temp826_ftime=ftime,&_temp826_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf2lcfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf2lcfh.fixedflag ? (_temp827_a_gzrf2lcfh=a_gzrf2lcfh,&_temp827_a_gzrf2lcfh) : &a_gzrf2lcfh, _pw_gzrf2lcfha.fixedflag ? (_temp828_pw_gzrf2lcfha=pw_gzrf2lcfha,&_temp828_pw_gzrf2lcfha) : &pw_gzrf2lcfha, _pw_gzrf2lcfh.fixedflag ? (_temp829_pw_gzrf2lcfh=pw_gzrf2lcfh,&_temp829_pw_gzrf2lcfh) : &pw_gzrf2lcfh,
                          _pw_gzrf2lcfhd.fixedflag ? (_temp830_pw_gzrf2lcfhd=pw_gzrf2lcfhd,&_temp830_pw_gzrf2lcfhd) : &pw_gzrf2lcfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf2lcfh  = _ia_gzrf2lcfh.fixedflag ?     ((void)((int)((a_gzrf2lcfh/target)*MAX_PG_IAMP)), ia_gzrf2lcfh) : (int)((a_gzrf2lcfh/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp831_target=target,&_temp831_target) : &target, (WF_PROCESSOR)wg_gzrf2rcfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp832_rtime=rtime,&_temp832_rtime) : &rtime, _ftime.fixedflag ? (_temp833_ftime=ftime,&_temp833_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf2rcfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf2rcfh.fixedflag ? (_temp834_a_gzrf2rcfh=a_gzrf2rcfh,&_temp834_a_gzrf2rcfh) : &a_gzrf2rcfh, _pw_gzrf2rcfha.fixedflag ? (_temp835_pw_gzrf2rcfha=pw_gzrf2rcfha,&_temp835_pw_gzrf2rcfha) : &pw_gzrf2rcfha, _pw_gzrf2rcfh.fixedflag ? (_temp836_pw_gzrf2rcfh=pw_gzrf2rcfh,&_temp836_pw_gzrf2rcfh) : &pw_gzrf2rcfh,
                          _pw_gzrf2rcfhd.fixedflag ? (_temp837_pw_gzrf2rcfhd=pw_gzrf2rcfhd,&_temp837_pw_gzrf2rcfhd) : &pw_gzrf2rcfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf2rcfh  = _ia_gzrf2rcfh.fixedflag ?     ((void)((int)((a_gzrf2rcfh/target)*MAX_PG_IAMP)), ia_gzrf2rcfh) : (int)((a_gzrf2rcfh/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp838_target=target,&_temp838_target) : &target, (WF_PROCESSOR)wg_gyrf3cfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp839_rtime=rtime,&_temp839_rtime) : &rtime, _ftime.fixedflag ? (_temp840_ftime=ftime,&_temp840_ftime) : &ftime, (WF_PROCESSOR)wg_gyrf3cfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gyrf3cfh.fixedflag ? (_temp841_a_gyrf3cfh=a_gyrf3cfh,&_temp841_a_gyrf3cfh) : &a_gyrf3cfh, _pw_gyrf3cfha.fixedflag ? (_temp842_pw_gyrf3cfha=pw_gyrf3cfha,&_temp842_pw_gyrf3cfha) : &pw_gyrf3cfha, _pw_gyrf3cfh.fixedflag ? (_temp843_pw_gyrf3cfh=pw_gyrf3cfh,&_temp843_pw_gyrf3cfh) : &pw_gyrf3cfh,
                          _pw_gyrf3cfhd.fixedflag ? (_temp844_pw_gyrf3cfhd=pw_gyrf3cfhd,&_temp844_pw_gyrf3cfhd) : &pw_gyrf3cfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gyrf3cfh  = _ia_gyrf3cfh.fixedflag ?     ((void)((int)((a_gyrf3cfh/target)*MAX_PG_IAMP)), ia_gyrf3cfh) : (int)((a_gyrf3cfh/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp845_target=target,&_temp845_target) : &target, (WF_PROCESSOR)wg_gzrf3lcfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp846_rtime=rtime,&_temp846_rtime) : &rtime, _ftime.fixedflag ? (_temp847_ftime=ftime,&_temp847_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf3lcfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf3lcfh.fixedflag ? (_temp848_a_gzrf3lcfh=a_gzrf3lcfh,&_temp848_a_gzrf3lcfh) : &a_gzrf3lcfh, _pw_gzrf3lcfha.fixedflag ? (_temp849_pw_gzrf3lcfha=pw_gzrf3lcfha,&_temp849_pw_gzrf3lcfha) : &pw_gzrf3lcfha, _pw_gzrf3lcfh.fixedflag ? (_temp850_pw_gzrf3lcfh=pw_gzrf3lcfh,&_temp850_pw_gzrf3lcfh) : &pw_gzrf3lcfh,
                          _pw_gzrf3lcfhd.fixedflag ? (_temp851_pw_gzrf3lcfhd=pw_gzrf3lcfhd,&_temp851_pw_gzrf3lcfhd) : &pw_gzrf3lcfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf3lcfh  = _ia_gzrf3lcfh.fixedflag ?     ((void)((int)((a_gzrf3lcfh/target)*MAX_PG_IAMP)), ia_gzrf3lcfh) : (int)((a_gzrf3lcfh/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp852_target=target,&_temp852_target) : &target, (WF_PROCESSOR)wg_gzrf3rcfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp853_rtime=rtime,&_temp853_rtime) : &rtime, _ftime.fixedflag ? (_temp854_ftime=ftime,&_temp854_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf3rcfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf3rcfh.fixedflag ? (_temp855_a_gzrf3rcfh=a_gzrf3rcfh,&_temp855_a_gzrf3rcfh) : &a_gzrf3rcfh, _pw_gzrf3rcfha.fixedflag ? (_temp856_pw_gzrf3rcfha=pw_gzrf3rcfha,&_temp856_pw_gzrf3rcfha) : &pw_gzrf3rcfha, _pw_gzrf3rcfh.fixedflag ? (_temp857_pw_gzrf3rcfh=pw_gzrf3rcfh,&_temp857_pw_gzrf3rcfh) : &pw_gzrf3rcfh,
                          _pw_gzrf3rcfhd.fixedflag ? (_temp858_pw_gzrf3rcfhd=pw_gzrf3rcfhd,&_temp858_pw_gzrf3rcfhd) : &pw_gzrf3rcfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf3rcfh  = _ia_gzrf3rcfh.fixedflag ?     ((void)((int)((a_gzrf3rcfh/target)*MAX_PG_IAMP)), ia_gzrf3rcfh) : (int)((a_gzrf3rcfh/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp859_target=target,&_temp859_target) : &target, (WF_PROCESSOR)wg_gy1cfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp860_rtime=rtime,&_temp860_rtime) : &rtime, _ftime.fixedflag ? (_temp861_ftime=ftime,&_temp861_ftime) : &ftime, (WF_PROCESSOR)wg_gy1cfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gy1cfh.fixedflag ? (_temp862_a_gy1cfh=a_gy1cfh,&_temp862_a_gy1cfh) : &a_gy1cfh, _pw_gy1cfha.fixedflag ? (_temp863_pw_gy1cfha=pw_gy1cfha,&_temp863_pw_gy1cfha) : &pw_gy1cfha, _pw_gy1cfh.fixedflag ? (_temp864_pw_gy1cfh=pw_gy1cfh,&_temp864_pw_gy1cfh) : &pw_gy1cfh,
                          _pw_gy1cfhd.fixedflag ? (_temp865_pw_gy1cfhd=pw_gy1cfhd,&_temp865_pw_gy1cfhd) : &pw_gy1cfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gy1cfh  = _ia_gy1cfh.fixedflag ?     ((void)((int)((a_gy1cfh/target)*MAX_PG_IAMP)), ia_gy1cfh) : (int)((a_gy1cfh/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp866_target=target,&_temp866_target) : &target, (WF_PROCESSOR)wg_gx1cfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp867_rtime=rtime,&_temp867_rtime) : &rtime, _ftime.fixedflag ? (_temp868_ftime=ftime,&_temp868_ftime) : &ftime, (WF_PROCESSOR)wg_gx1cfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx1cfh.fixedflag ? (_temp869_a_gx1cfh=a_gx1cfh,&_temp869_a_gx1cfh) : &a_gx1cfh, _pw_gx1cfha.fixedflag ? (_temp870_pw_gx1cfha=pw_gx1cfha,&_temp870_pw_gx1cfha) : &pw_gx1cfha, _pw_gx1cfh.fixedflag ? (_temp871_pw_gx1cfh=pw_gx1cfh,&_temp871_pw_gx1cfh) : &pw_gx1cfh,
                          _pw_gx1cfhd.fixedflag ? (_temp872_pw_gx1cfhd=pw_gx1cfhd,&_temp872_pw_gx1cfhd) : &pw_gx1cfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx1cfh  = _ia_gx1cfh.fixedflag ?     ((void)((int)((a_gx1cfh/target)*MAX_PG_IAMP)), ia_gx1cfh) : (int)((a_gx1cfh/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp873_target=target,&_temp873_target) : &target, (WF_PROCESSOR)wg_gzrf4cfh, &loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp874_rtime=rtime,&_temp874_rtime) : &rtime, _ftime.fixedflag ? (_temp875_ftime=ftime,&_temp875_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf4cfh, &loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf4cfh.fixedflag ? (_temp876_a_gzrf4cfh=a_gzrf4cfh,&_temp876_a_gzrf4cfh) : &a_gzrf4cfh, _pw_gzrf4cfha.fixedflag ? (_temp877_pw_gzrf4cfha=pw_gzrf4cfha,&_temp877_pw_gzrf4cfha) : &pw_gzrf4cfha, _pw_gzrf4cfh.fixedflag ? (_temp878_pw_gzrf4cfh=pw_gzrf4cfh,&_temp878_pw_gzrf4cfh) : &pw_gzrf4cfh,
                          _pw_gzrf4cfhd.fixedflag ? (_temp879_pw_gzrf4cfhd=pw_gzrf4cfhd,&_temp879_pw_gzrf4cfhd) : &pw_gzrf4cfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf4cfh  = _ia_gzrf4cfh.fixedflag ?     ((void)((int)((a_gzrf4cfh/target)*MAX_PG_IAMP)), ia_gzrf4cfh) : (int)((a_gzrf4cfh/target)*MAX_PG_IAMP);
    }





    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp880_target=target,&_temp880_target) : &target, (WF_PROCESSOR)wg_gzrf4lcfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp881_rtime=rtime,&_temp881_rtime) : &rtime, _ftime.fixedflag ? (_temp882_ftime=ftime,&_temp882_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf4lcfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf4lcfh.fixedflag ? (_temp883_a_gzrf4lcfh=a_gzrf4lcfh,&_temp883_a_gzrf4lcfh) : &a_gzrf4lcfh, _pw_gzrf4lcfha.fixedflag ? (_temp884_pw_gzrf4lcfha=pw_gzrf4lcfha,&_temp884_pw_gzrf4lcfha) : &pw_gzrf4lcfha, _pw_gzrf4lcfh.fixedflag ? (_temp885_pw_gzrf4lcfh=pw_gzrf4lcfh,&_temp885_pw_gzrf4lcfh) : &pw_gzrf4lcfh,
                          _pw_gzrf4lcfhd.fixedflag ? (_temp886_pw_gzrf4lcfhd=pw_gzrf4lcfhd,&_temp886_pw_gzrf4lcfhd) : &pw_gzrf4lcfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf4lcfh  = _ia_gzrf4lcfh.fixedflag ?     ((void)((int)((a_gzrf4lcfh/target)*MAX_PG_IAMP)), ia_gzrf4lcfh) : (int)((a_gzrf4lcfh/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp887_target=target,&_temp887_target) : &target, (WF_PROCESSOR)wg_gzrf4rcfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp888_rtime=rtime,&_temp888_rtime) : &rtime, _ftime.fixedflag ? (_temp889_ftime=ftime,&_temp889_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf4rcfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf4rcfh.fixedflag ? (_temp890_a_gzrf4rcfh=a_gzrf4rcfh,&_temp890_a_gzrf4rcfh) : &a_gzrf4rcfh, _pw_gzrf4rcfha.fixedflag ? (_temp891_pw_gzrf4rcfha=pw_gzrf4rcfha,&_temp891_pw_gzrf4rcfha) : &pw_gzrf4rcfha, _pw_gzrf4rcfh.fixedflag ? (_temp892_pw_gzrf4rcfh=pw_gzrf4rcfh,&_temp892_pw_gzrf4rcfh) : &pw_gzrf4rcfh,
                          _pw_gzrf4rcfhd.fixedflag ? (_temp893_pw_gzrf4rcfhd=pw_gzrf4rcfhd,&_temp893_pw_gzrf4rcfhd) : &pw_gzrf4rcfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf4rcfh  = _ia_gzrf4rcfh.fixedflag ?     ((void)((int)((a_gzrf4rcfh/target)*MAX_PG_IAMP)), ia_gzrf4rcfh) : (int)((a_gzrf4rcfh/target)*MAX_PG_IAMP);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp894_target=target,&_temp894_target) : &target, (WF_PROCESSOR)wg_gykcfh, &cfhloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp895_rtime=rtime,&_temp895_rtime) : &rtime, _ftime.fixedflag ? (_temp896_ftime=ftime,&_temp896_ftime) : &ftime, (WF_PROCESSOR)wg_gykcfh, &cfhloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gykcfh.fixedflag ? (_temp897_a_gykcfh=a_gykcfh,&_temp897_a_gykcfh) : &a_gykcfh, _pw_gykcfha.fixedflag ? (_temp898_pw_gykcfha=pw_gykcfha,&_temp898_pw_gykcfha) : &pw_gykcfha, _pw_gykcfh.fixedflag ? (_temp899_pw_gykcfh=pw_gykcfh,&_temp899_pw_gykcfh) : &pw_gykcfh,
                          _pw_gykcfhd.fixedflag ? (_temp900_pw_gykcfhd=pw_gykcfhd,&_temp900_pw_gykcfhd) : &pw_gykcfhd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gykcfh  = _ia_gykcfh.fixedflag ?     ((void)((int)((a_gykcfh/target)*MAX_PG_IAMP)), ia_gykcfh) : (int)((a_gykcfh/target)*MAX_PG_IAMP);
    }









    if (ampslice(_a_gzrf1ftg.fixedflag ? (_temp901_a_gzrf1ftg=a_gzrf1ftg,&_temp901_a_gzrf1ftg) : &a_gzrf1ftg,(LONG)(4000000*cyc_rf1ftg/
        pw_rf1ftg),
        (float)thk_rf1ftg,(float)gscale_rf1ftg,
        (int)TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf1ftga.fixedflag ? (_temp902_pw_gzrf1ftga=pw_gzrf1ftga,&_temp902_pw_gzrf1ftga) : &pw_gzrf1ftga,a_gzrf1ftg,ps1loggrd.tz,
                ps1loggrd.zrt,TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf1ftgd.fixedflag ? (_temp903_pw_gzrf1ftgd=pw_gzrf1ftgd,&_temp903_pw_gzrf1ftgd) : &pw_gzrf1ftgd,a_gzrf1ftg,ps1loggrd.tz,
                ps1loggrd.zft,TYPNDEF)== FAILURE)
    {
        return FAILURE;
    }

    ia_gzrf1ftg  = _ia_gzrf1ftg.fixedflag ?    ((void)((int)(a_gzrf1ftg*MAX_PG_IAMP/ps1loggrd.tz)), ia_gzrf1ftg) : (int)(a_gzrf1ftg*MAX_PG_IAMP/ps1loggrd.tz);

    ia_rf1ftg  = _ia_rf1ftg.fixedflag ?    ((void)((int)(a_rf1ftg*MAX_PG_IAMP)), ia_rf1ftg) : (int)(a_rf1ftg*MAX_PG_IAMP);
    if (res_rf1ftg == 0)
    {
        res_rf1ftg  = _res_rf1ftg.fixedflag ?  ((void)(pw_rf1ftg/(RF_UPDATE_TIME)), res_rf1ftg) : pw_rf1ftg/(RF_UPDATE_TIME);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp904_target=target,&_temp904_target) : &target, (WF_PROCESSOR)wg_gz1ftg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp905_rtime=rtime,&_temp905_rtime) : &rtime, _ftime.fixedflag ? (_temp906_ftime=ftime,&_temp906_ftime) : &ftime, (WF_PROCESSOR)wg_gz1ftg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz1ftg.fixedflag ? (_temp907_a_gz1ftg=a_gz1ftg,&_temp907_a_gz1ftg) : &a_gz1ftg, _pw_gz1ftga.fixedflag ? (_temp908_pw_gz1ftga=pw_gz1ftga,&_temp908_pw_gz1ftga) : &pw_gz1ftga, _pw_gz1ftg.fixedflag ? (_temp909_pw_gz1ftg=pw_gz1ftg,&_temp909_pw_gz1ftg) : &pw_gz1ftg,
                          _pw_gz1ftgd.fixedflag ? (_temp910_pw_gz1ftgd=pw_gz1ftgd,&_temp910_pw_gz1ftgd) : &pw_gz1ftgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz1ftg  = _ia_gz1ftg.fixedflag ?     ((void)((int)((a_gz1ftg/target)*MAX_PG_IAMP)), ia_gz1ftg) : (int)((a_gz1ftg/target)*MAX_PG_IAMP);
    }


    if (ampslice(_a_gzrf2ftg.fixedflag ? (_temp911_a_gzrf2ftg=a_gzrf2ftg,&_temp911_a_gzrf2ftg) : &a_gzrf2ftg,(LONG)(4000000*cyc_rf2ftg/
        pw_rf2ftg),
        (float)thk_rf2ftg,(float)gscale_rf2ftg,
        (int)TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf2ftga.fixedflag ? (_temp912_pw_gzrf2ftga=pw_gzrf2ftga,&_temp912_pw_gzrf2ftga) : &pw_gzrf2ftga,a_gzrf2ftg,ps1loggrd.tz,
                ps1loggrd.zrt,TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf2ftgd.fixedflag ? (_temp913_pw_gzrf2ftgd=pw_gzrf2ftgd,&_temp913_pw_gzrf2ftgd) : &pw_gzrf2ftgd,a_gzrf2ftg,ps1loggrd.tz,
                ps1loggrd.zft,TYPNDEF)== FAILURE)
    {
        return FAILURE;
    }

    ia_gzrf2ftg  = _ia_gzrf2ftg.fixedflag ?    ((void)((int)(a_gzrf2ftg*MAX_PG_IAMP/ps1loggrd.tz)), ia_gzrf2ftg) : (int)(a_gzrf2ftg*MAX_PG_IAMP/ps1loggrd.tz);

    ia_rf2ftg  = _ia_rf2ftg.fixedflag ?    ((void)((int)(a_rf2ftg*MAX_PG_IAMP)), ia_rf2ftg) : (int)(a_rf2ftg*MAX_PG_IAMP);
    if (res_rf2ftg == 0)
    {
        res_rf2ftg  = _res_rf2ftg.fixedflag ?  ((void)(pw_rf2ftg/(RF_UPDATE_TIME)), res_rf2ftg) : pw_rf2ftg/(RF_UPDATE_TIME);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp914_target=target,&_temp914_target) : &target, (WF_PROCESSOR)wg_gz2ftg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp915_rtime=rtime,&_temp915_rtime) : &rtime, _ftime.fixedflag ? (_temp916_ftime=ftime,&_temp916_ftime) : &ftime, (WF_PROCESSOR)wg_gz2ftg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz2ftg.fixedflag ? (_temp917_a_gz2ftg=a_gz2ftg,&_temp917_a_gz2ftg) : &a_gz2ftg, _pw_gz2ftga.fixedflag ? (_temp918_pw_gz2ftga=pw_gz2ftga,&_temp918_pw_gz2ftga) : &pw_gz2ftga, _pw_gz2ftg.fixedflag ? (_temp919_pw_gz2ftg=pw_gz2ftg,&_temp919_pw_gz2ftg) : &pw_gz2ftg,
                          _pw_gz2ftgd.fixedflag ? (_temp920_pw_gz2ftgd=pw_gz2ftgd,&_temp920_pw_gz2ftgd) : &pw_gz2ftgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz2ftg  = _ia_gz2ftg.fixedflag ?     ((void)((int)((a_gz2ftg/target)*MAX_PG_IAMP)), ia_gz2ftg) : (int)((a_gz2ftg/target)*MAX_PG_IAMP);
    }


    if (ampslice(_a_gzrf3ftg.fixedflag ? (_temp921_a_gzrf3ftg=a_gzrf3ftg,&_temp921_a_gzrf3ftg) : &a_gzrf3ftg,(LONG)(4000000*cyc_rf3ftg/
        pw_rf3ftg),
        (float)thk_rf3ftg,(float)gscale_rf3ftg,
        (int)TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf3ftga.fixedflag ? (_temp922_pw_gzrf3ftga=pw_gzrf3ftga,&_temp922_pw_gzrf3ftga) : &pw_gzrf3ftga,a_gzrf3ftg,ps1loggrd.tz,
                ps1loggrd.zrt,TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf3ftgd.fixedflag ? (_temp923_pw_gzrf3ftgd=pw_gzrf3ftgd,&_temp923_pw_gzrf3ftgd) : &pw_gzrf3ftgd,a_gzrf3ftg,ps1loggrd.tz,
                ps1loggrd.zft,TYPNDEF)== FAILURE)
    {
        return FAILURE;
    }

    ia_gzrf3ftg  = _ia_gzrf3ftg.fixedflag ?    ((void)((int)(a_gzrf3ftg*MAX_PG_IAMP/ps1loggrd.tz)), ia_gzrf3ftg) : (int)(a_gzrf3ftg*MAX_PG_IAMP/ps1loggrd.tz);

    ia_rf3ftg  = _ia_rf3ftg.fixedflag ?    ((void)((int)(a_rf3ftg*MAX_PG_IAMP)), ia_rf3ftg) : (int)(a_rf3ftg*MAX_PG_IAMP);
    if (res_rf3ftg == 0)
    {
        res_rf3ftg  = _res_rf3ftg.fixedflag ?  ((void)(pw_rf3ftg/(RF_UPDATE_TIME)), res_rf3ftg) : pw_rf3ftg/(RF_UPDATE_TIME);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp924_target=target,&_temp924_target) : &target, (WF_PROCESSOR)wg_gz3ftg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp925_rtime=rtime,&_temp925_rtime) : &rtime, _ftime.fixedflag ? (_temp926_ftime=ftime,&_temp926_ftime) : &ftime, (WF_PROCESSOR)wg_gz3ftg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz3ftg.fixedflag ? (_temp927_a_gz3ftg=a_gz3ftg,&_temp927_a_gz3ftg) : &a_gz3ftg, _pw_gz3ftga.fixedflag ? (_temp928_pw_gz3ftga=pw_gz3ftga,&_temp928_pw_gz3ftga) : &pw_gz3ftga, _pw_gz3ftg.fixedflag ? (_temp929_pw_gz3ftg=pw_gz3ftg,&_temp929_pw_gz3ftg) : &pw_gz3ftg,
                          _pw_gz3ftgd.fixedflag ? (_temp930_pw_gz3ftgd=pw_gz3ftgd,&_temp930_pw_gz3ftgd) : &pw_gz3ftgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz3ftg  = _ia_gz3ftg.fixedflag ?     ((void)((int)((a_gz3ftg/target)*MAX_PG_IAMP)), ia_gz3ftg) : (int)((a_gz3ftg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp931_target=target,&_temp931_target) : &target, (WF_PROCESSOR)wg_gx1ftg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp932_rtime=rtime,&_temp932_rtime) : &rtime, _ftime.fixedflag ? (_temp933_ftime=ftime,&_temp933_ftime) : &ftime, (WF_PROCESSOR)wg_gx1ftg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx1ftg.fixedflag ? (_temp934_a_gx1ftg=a_gx1ftg,&_temp934_a_gx1ftg) : &a_gx1ftg, _pw_gx1ftga.fixedflag ? (_temp935_pw_gx1ftga=pw_gx1ftga,&_temp935_pw_gx1ftga) : &pw_gx1ftga, _pw_gx1ftg.fixedflag ? (_temp936_pw_gx1ftg=pw_gx1ftg,&_temp936_pw_gx1ftg) : &pw_gx1ftg,
                          _pw_gx1ftgd.fixedflag ? (_temp937_pw_gx1ftgd=pw_gx1ftgd,&_temp937_pw_gx1ftgd) : &pw_gx1ftgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx1ftg  = _ia_gx1ftg.fixedflag ?     ((void)((int)((a_gx1ftg/target)*MAX_PG_IAMP)), ia_gx1ftg) : (int)((a_gx1ftg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp938_target=target,&_temp938_target) : &target, (WF_PROCESSOR)wg_gx1bftg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp939_rtime=rtime,&_temp939_rtime) : &rtime, _ftime.fixedflag ? (_temp940_ftime=ftime,&_temp940_ftime) : &ftime, (WF_PROCESSOR)wg_gx1bftg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx1bftg.fixedflag ? (_temp941_a_gx1bftg=a_gx1bftg,&_temp941_a_gx1bftg) : &a_gx1bftg, _pw_gx1bftga.fixedflag ? (_temp942_pw_gx1bftga=pw_gx1bftga,&_temp942_pw_gx1bftga) : &pw_gx1bftga, _pw_gx1bftg.fixedflag ? (_temp943_pw_gx1bftg=pw_gx1bftg,&_temp943_pw_gx1bftg) : &pw_gx1bftg,
                          _pw_gx1bftgd.fixedflag ? (_temp944_pw_gx1bftgd=pw_gx1bftgd,&_temp944_pw_gx1bftgd) : &pw_gx1bftgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx1bftg  = _ia_gx1bftg.fixedflag ?     ((void)((int)((a_gx1bftg/target)*MAX_PG_IAMP)), ia_gx1bftg) : (int)((a_gx1bftg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp945_target=target,&_temp945_target) : &target, (WF_PROCESSOR)wg_gxw1ftg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp946_rtime=rtime,&_temp946_rtime) : &rtime, _ftime.fixedflag ? (_temp947_ftime=ftime,&_temp947_ftime) : &ftime, (WF_PROCESSOR)wg_gxw1ftg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxw1ftg.fixedflag ? (_temp948_a_gxw1ftg=a_gxw1ftg,&_temp948_a_gxw1ftg) : &a_gxw1ftg, _pw_gxw1ftga.fixedflag ? (_temp949_pw_gxw1ftga=pw_gxw1ftga,&_temp949_pw_gxw1ftga) : &pw_gxw1ftga, _pw_gxw1ftg.fixedflag ? (_temp950_pw_gxw1ftg=pw_gxw1ftg,&_temp950_pw_gxw1ftg) : &pw_gxw1ftg,
                          _pw_gxw1ftgd.fixedflag ? (_temp951_pw_gxw1ftgd=pw_gxw1ftgd,&_temp951_pw_gxw1ftgd) : &pw_gxw1ftgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxw1ftg  = _ia_gxw1ftg.fixedflag ?     ((void)((int)((a_gxw1ftg/target)*MAX_PG_IAMP)), ia_gxw1ftg) : (int)((a_gxw1ftg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp952_target=target,&_temp952_target) : &target, (WF_PROCESSOR)wg_postgxw1ftg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp953_rtime=rtime,&_temp953_rtime) : &rtime, _ftime.fixedflag ? (_temp954_ftime=ftime,&_temp954_ftime) : &ftime, (WF_PROCESSOR)wg_postgxw1ftg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_postgxw1ftg.fixedflag ? (_temp955_a_postgxw1ftg=a_postgxw1ftg,&_temp955_a_postgxw1ftg) : &a_postgxw1ftg, _pw_postgxw1ftga.fixedflag ? (_temp956_pw_postgxw1ftga=pw_postgxw1ftga,&_temp956_pw_postgxw1ftga) : &pw_postgxw1ftga, _pw_postgxw1ftg.fixedflag ? (_temp957_pw_postgxw1ftg=pw_postgxw1ftg,&_temp957_pw_postgxw1ftg) : &pw_postgxw1ftg,
                          _pw_postgxw1ftgd.fixedflag ? (_temp958_pw_postgxw1ftgd=pw_postgxw1ftgd,&_temp958_pw_postgxw1ftgd) : &pw_postgxw1ftgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_postgxw1ftg  = _ia_postgxw1ftg.fixedflag ?     ((void)((int)((a_postgxw1ftg/target)*MAX_PG_IAMP)), ia_postgxw1ftg) : (int)((a_postgxw1ftg/target)*MAX_PG_IAMP);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp959_target=target,&_temp959_target) : &target, (WF_PROCESSOR)wg_gz2bftg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp960_rtime=rtime,&_temp960_rtime) : &rtime, _ftime.fixedflag ? (_temp961_ftime=ftime,&_temp961_ftime) : &ftime, (WF_PROCESSOR)wg_gz2bftg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz2bftg.fixedflag ? (_temp962_a_gz2bftg=a_gz2bftg,&_temp962_a_gz2bftg) : &a_gz2bftg, _pw_gz2bftga.fixedflag ? (_temp963_pw_gz2bftga=pw_gz2bftga,&_temp963_pw_gz2bftga) : &pw_gz2bftga, _pw_gz2bftg.fixedflag ? (_temp964_pw_gz2bftg=pw_gz2bftg,&_temp964_pw_gz2bftg) : &pw_gz2bftg,
                          _pw_gz2bftgd.fixedflag ? (_temp965_pw_gz2bftgd=pw_gz2bftgd,&_temp965_pw_gz2bftgd) : &pw_gz2bftgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz2bftg  = _ia_gz2bftg.fixedflag ?     ((void)((int)((a_gz2bftg/target)*MAX_PG_IAMP)), ia_gz2bftg) : (int)((a_gz2bftg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp966_target=target,&_temp966_target) : &target, (WF_PROCESSOR)wg_gx2ftg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp967_rtime=rtime,&_temp967_rtime) : &rtime, _ftime.fixedflag ? (_temp968_ftime=ftime,&_temp968_ftime) : &ftime, (WF_PROCESSOR)wg_gx2ftg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx2ftg.fixedflag ? (_temp969_a_gx2ftg=a_gx2ftg,&_temp969_a_gx2ftg) : &a_gx2ftg, _pw_gx2ftga.fixedflag ? (_temp970_pw_gx2ftga=pw_gx2ftga,&_temp970_pw_gx2ftga) : &pw_gx2ftga, _pw_gx2ftg.fixedflag ? (_temp971_pw_gx2ftg=pw_gx2ftg,&_temp971_pw_gx2ftg) : &pw_gx2ftg,
                          _pw_gx2ftgd.fixedflag ? (_temp972_pw_gx2ftgd=pw_gx2ftgd,&_temp972_pw_gx2ftgd) : &pw_gx2ftgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx2ftg  = _ia_gx2ftg.fixedflag ?     ((void)((int)((a_gx2ftg/target)*MAX_PG_IAMP)), ia_gx2ftg) : (int)((a_gx2ftg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp973_target=target,&_temp973_target) : &target, (WF_PROCESSOR)wg_gxw2ftg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp974_rtime=rtime,&_temp974_rtime) : &rtime, _ftime.fixedflag ? (_temp975_ftime=ftime,&_temp975_ftime) : &ftime, (WF_PROCESSOR)wg_gxw2ftg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxw2ftg.fixedflag ? (_temp976_a_gxw2ftg=a_gxw2ftg,&_temp976_a_gxw2ftg) : &a_gxw2ftg, _pw_gxw2ftga.fixedflag ? (_temp977_pw_gxw2ftga=pw_gxw2ftga,&_temp977_pw_gxw2ftga) : &pw_gxw2ftga, _pw_gxw2ftg.fixedflag ? (_temp978_pw_gxw2ftg=pw_gxw2ftg,&_temp978_pw_gxw2ftg) : &pw_gxw2ftg,
                          _pw_gxw2ftgd.fixedflag ? (_temp979_pw_gxw2ftgd=pw_gxw2ftgd,&_temp979_pw_gxw2ftgd) : &pw_gxw2ftgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxw2ftg  = _ia_gxw2ftg.fixedflag ?     ((void)((int)((a_gxw2ftg/target)*MAX_PG_IAMP)), ia_gxw2ftg) : (int)((a_gxw2ftg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp980_target=target,&_temp980_target) : &target, (WF_PROCESSOR)wg_gx2test, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp981_rtime=rtime,&_temp981_rtime) : &rtime, _ftime.fixedflag ? (_temp982_ftime=ftime,&_temp982_ftime) : &ftime, (WF_PROCESSOR)wg_gx2test, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx2test.fixedflag ? (_temp983_a_gx2test=a_gx2test,&_temp983_a_gx2test) : &a_gx2test, _pw_gx2testa.fixedflag ? (_temp984_pw_gx2testa=pw_gx2testa,&_temp984_pw_gx2testa) : &pw_gx2testa, _pw_gx2test.fixedflag ? (_temp985_pw_gx2test=pw_gx2test,&_temp985_pw_gx2test) : &pw_gx2test,
                          _pw_gx2testd.fixedflag ? (_temp986_pw_gx2testd=pw_gx2testd,&_temp986_pw_gx2testd) : &pw_gx2testd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx2test  = _ia_gx2test.fixedflag ?     ((void)((int)((a_gx2test/target)*MAX_PG_IAMP)), ia_gx2test) : (int)((a_gx2test/target)*MAX_PG_IAMP);
    }



{
  float target;
  gettarget(_target.fixedflag ? (_temp987_target=target,&_temp987_target) : &target,(WF_PROCESSOR)wg_rf1xtg,&ps1loggrd);
  if ((wg_rf1xtg==TYPRHO1)||(wg_rf1xtg==TYPRHO2)
        ||(wg_rf1xtg==TYPOMEGA)||(wg_rf1xtg==TYPTHETA))
    {
      if (res_rf1xtg == 0)
        {
          res_rf1xtg  = _res_rf1xtg.fixedflag ?  ((void)(pw_rf1xtg/(RF_UPDATE_TIME)), res_rf1xtg) : pw_rf1xtg/(RF_UPDATE_TIME);
        }
      ia_rf1xtg  = _ia_rf1xtg.fixedflag ?    ((void)((int)(a_rf1xtg*MAX_PG_IAMP)), ia_rf1xtg) : (int)(a_rf1xtg*MAX_PG_IAMP);
    }    
  else
    {
      if (res_rf1xtg == 0)
        {
          res_rf1xtg  = _res_rf1xtg.fixedflag ?  ((void)(pw_rf1xtg/(GRAD_UPDATE_TIME)), res_rf1xtg) : pw_rf1xtg/(GRAD_UPDATE_TIME);
        }
      ia_rf1xtg  = _ia_rf1xtg.fixedflag ?     ((void)((int)((a_rf1xtg/target)*MAX_PG_IAMP)), ia_rf1xtg) : (int)((a_rf1xtg/target)*MAX_PG_IAMP);
    }    
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp988_target=target,&_temp988_target) : &target, (WF_PROCESSOR)wg_gyrf1xtg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp989_rtime=rtime,&_temp989_rtime) : &rtime, _ftime.fixedflag ? (_temp990_ftime=ftime,&_temp990_ftime) : &ftime, (WF_PROCESSOR)wg_gyrf1xtg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gyrf1xtg.fixedflag ? (_temp991_a_gyrf1xtg=a_gyrf1xtg,&_temp991_a_gyrf1xtg) : &a_gyrf1xtg, _pw_gyrf1xtga.fixedflag ? (_temp992_pw_gyrf1xtga=pw_gyrf1xtga,&_temp992_pw_gyrf1xtga) : &pw_gyrf1xtga, _pw_gyrf1xtg.fixedflag ? (_temp993_pw_gyrf1xtg=pw_gyrf1xtg,&_temp993_pw_gyrf1xtg) : &pw_gyrf1xtg,
                          _pw_gyrf1xtgd.fixedflag ? (_temp994_pw_gyrf1xtgd=pw_gyrf1xtgd,&_temp994_pw_gyrf1xtgd) : &pw_gyrf1xtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gyrf1xtg  = _ia_gyrf1xtg.fixedflag ?     ((void)((int)((a_gyrf1xtg/target)*MAX_PG_IAMP)), ia_gyrf1xtg) : (int)((a_gyrf1xtg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp995_target=target,&_temp995_target) : &target, (WF_PROCESSOR)wg_gzrf1xtg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp996_rtime=rtime,&_temp996_rtime) : &rtime, _ftime.fixedflag ? (_temp997_ftime=ftime,&_temp997_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf1xtg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf1xtg.fixedflag ? (_temp998_a_gzrf1xtg=a_gzrf1xtg,&_temp998_a_gzrf1xtg) : &a_gzrf1xtg, _pw_gzrf1xtga.fixedflag ? (_temp999_pw_gzrf1xtga=pw_gzrf1xtga,&_temp999_pw_gzrf1xtga) : &pw_gzrf1xtga, _pw_gzrf1xtg.fixedflag ? (_temp1000_pw_gzrf1xtg=pw_gzrf1xtg,&_temp1000_pw_gzrf1xtg) : &pw_gzrf1xtg,
                          _pw_gzrf1xtgd.fixedflag ? (_temp1001_pw_gzrf1xtgd=pw_gzrf1xtgd,&_temp1001_pw_gzrf1xtgd) : &pw_gzrf1xtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf1xtg  = _ia_gzrf1xtg.fixedflag ?     ((void)((int)((a_gzrf1xtg/target)*MAX_PG_IAMP)), ia_gzrf1xtg) : (int)((a_gzrf1xtg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1002_target=target,&_temp1002_target) : &target, (WF_PROCESSOR)wg_gykxtgl, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1003_rtime=rtime,&_temp1003_rtime) : &rtime, _ftime.fixedflag ? (_temp1004_ftime=ftime,&_temp1004_ftime) : &ftime, (WF_PROCESSOR)wg_gykxtgl, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gykxtgl.fixedflag ? (_temp1005_a_gykxtgl=a_gykxtgl,&_temp1005_a_gykxtgl) : &a_gykxtgl, _pw_gykxtgla.fixedflag ? (_temp1006_pw_gykxtgla=pw_gykxtgla,&_temp1006_pw_gykxtgla) : &pw_gykxtgla, _pw_gykxtgl.fixedflag ? (_temp1007_pw_gykxtgl=pw_gykxtgl,&_temp1007_pw_gykxtgl) : &pw_gykxtgl,
                          _pw_gykxtgld.fixedflag ? (_temp1008_pw_gykxtgld=pw_gykxtgld,&_temp1008_pw_gykxtgld) : &pw_gykxtgld) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gykxtgl  = _ia_gykxtgl.fixedflag ?     ((void)((int)((a_gykxtgl/target)*MAX_PG_IAMP)), ia_gykxtgl) : (int)((a_gykxtgl/target)*MAX_PG_IAMP);
    }


            ia_rf3xtg  = _ia_rf3xtg.fixedflag ?    ((void)((int)(a_rf3xtg*MAX_PG_IAMP)), ia_rf3xtg) : (int)(a_rf3xtg*MAX_PG_IAMP);
            if (res_rf3xtg == 0)
                res_rf3xtg  = _res_rf3xtg.fixedflag ?  ((void)(RES_FERMI_BLS), res_rf3xtg) : RES_FERMI_BLS;

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1009_target=target,&_temp1009_target) : &target, (WF_PROCESSOR)wg_gz1xtg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1010_rtime=rtime,&_temp1010_rtime) : &rtime, _ftime.fixedflag ? (_temp1011_ftime=ftime,&_temp1011_ftime) : &ftime, (WF_PROCESSOR)wg_gz1xtg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz1xtg.fixedflag ? (_temp1012_a_gz1xtg=a_gz1xtg,&_temp1012_a_gz1xtg) : &a_gz1xtg, _pw_gz1xtga.fixedflag ? (_temp1013_pw_gz1xtga=pw_gz1xtga,&_temp1013_pw_gz1xtga) : &pw_gz1xtga, _pw_gz1xtg.fixedflag ? (_temp1014_pw_gz1xtg=pw_gz1xtg,&_temp1014_pw_gz1xtg) : &pw_gz1xtg,
                          _pw_gz1xtgd.fixedflag ? (_temp1015_pw_gz1xtgd=pw_gz1xtgd,&_temp1015_pw_gz1xtgd) : &pw_gz1xtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz1xtg  = _ia_gz1xtg.fixedflag ?     ((void)((int)((a_gz1xtg/target)*MAX_PG_IAMP)), ia_gz1xtg) : (int)((a_gz1xtg/target)*MAX_PG_IAMP);
    }


    if (ampslice(_a_gzrf2xtg.fixedflag ? (_temp1016_a_gzrf2xtg=a_gzrf2xtg,&_temp1016_a_gzrf2xtg) : &a_gzrf2xtg,(LONG)(4000000*cyc_rf2xtg/
        pw_rf2xtg),
        (float)thk_rf2xtg,(float)gscale_rf2xtg,
        (int)TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf2xtga.fixedflag ? (_temp1017_pw_gzrf2xtga=pw_gzrf2xtga,&_temp1017_pw_gzrf2xtga) : &pw_gzrf2xtga,a_gzrf2xtg,ps1loggrd.tz,
                ps1loggrd.zrt,TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf2xtgd.fixedflag ? (_temp1018_pw_gzrf2xtgd=pw_gzrf2xtgd,&_temp1018_pw_gzrf2xtgd) : &pw_gzrf2xtgd,a_gzrf2xtg,ps1loggrd.tz,
                ps1loggrd.zft,TYPNDEF)== FAILURE)
    {
        return FAILURE;
    }

    ia_gzrf2xtg  = _ia_gzrf2xtg.fixedflag ?    ((void)((int)(a_gzrf2xtg*MAX_PG_IAMP/ps1loggrd.tz)), ia_gzrf2xtg) : (int)(a_gzrf2xtg*MAX_PG_IAMP/ps1loggrd.tz);

    ia_rf2xtg  = _ia_rf2xtg.fixedflag ?    ((void)((int)(a_rf2xtg*MAX_PG_IAMP)), ia_rf2xtg) : (int)(a_rf2xtg*MAX_PG_IAMP);
    if (res_rf2xtg == 0)
    {
        res_rf2xtg  = _res_rf2xtg.fixedflag ?  ((void)(pw_rf2xtg/(RF_UPDATE_TIME)), res_rf2xtg) : pw_rf2xtg/(RF_UPDATE_TIME);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1019_target=target,&_temp1019_target) : &target, (WF_PROCESSOR)wg_gz2xtg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1020_rtime=rtime,&_temp1020_rtime) : &rtime, _ftime.fixedflag ? (_temp1021_ftime=ftime,&_temp1021_ftime) : &ftime, (WF_PROCESSOR)wg_gz2xtg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz2xtg.fixedflag ? (_temp1022_a_gz2xtg=a_gz2xtg,&_temp1022_a_gz2xtg) : &a_gz2xtg, _pw_gz2xtga.fixedflag ? (_temp1023_pw_gz2xtga=pw_gz2xtga,&_temp1023_pw_gz2xtga) : &pw_gz2xtga, _pw_gz2xtg.fixedflag ? (_temp1024_pw_gz2xtg=pw_gz2xtg,&_temp1024_pw_gz2xtg) : &pw_gz2xtg,
                          _pw_gz2xtgd.fixedflag ? (_temp1025_pw_gz2xtgd=pw_gz2xtgd,&_temp1025_pw_gz2xtgd) : &pw_gz2xtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz2xtg  = _ia_gz2xtg.fixedflag ?     ((void)((int)((a_gz2xtg/target)*MAX_PG_IAMP)), ia_gz2xtg) : (int)((a_gz2xtg/target)*MAX_PG_IAMP);
    }


            ia_rf4xtg  = _ia_rf4xtg.fixedflag ?    ((void)((int)(a_rf4xtg*MAX_PG_IAMP)), ia_rf4xtg) : (int)(a_rf4xtg*MAX_PG_IAMP);
            if (res_rf4xtg == 0)
                res_rf4xtg  = _res_rf4xtg.fixedflag ?  ((void)(RES_FERMI_BLS), res_rf4xtg) : RES_FERMI_BLS;

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1026_target=target,&_temp1026_target) : &target, (WF_PROCESSOR)wg_gykxtgr, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1027_rtime=rtime,&_temp1027_rtime) : &rtime, _ftime.fixedflag ? (_temp1028_ftime=ftime,&_temp1028_ftime) : &ftime, (WF_PROCESSOR)wg_gykxtgr, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gykxtgr.fixedflag ? (_temp1029_a_gykxtgr=a_gykxtgr,&_temp1029_a_gykxtgr) : &a_gykxtgr, _pw_gykxtgra.fixedflag ? (_temp1030_pw_gykxtgra=pw_gykxtgra,&_temp1030_pw_gykxtgra) : &pw_gykxtgra, _pw_gykxtgr.fixedflag ? (_temp1031_pw_gykxtgr=pw_gykxtgr,&_temp1031_pw_gykxtgr) : &pw_gykxtgr,
                          _pw_gykxtgrd.fixedflag ? (_temp1032_pw_gykxtgrd=pw_gykxtgrd,&_temp1032_pw_gykxtgrd) : &pw_gykxtgrd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gykxtgr  = _ia_gykxtgr.fixedflag ?     ((void)((int)((a_gykxtgr/target)*MAX_PG_IAMP)), ia_gykxtgr) : (int)((a_gykxtgr/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1033_target=target,&_temp1033_target) : &target, (WF_PROCESSOR)wg_gx1bxtg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1034_rtime=rtime,&_temp1034_rtime) : &rtime, _ftime.fixedflag ? (_temp1035_ftime=ftime,&_temp1035_ftime) : &ftime, (WF_PROCESSOR)wg_gx1bxtg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx1bxtg.fixedflag ? (_temp1036_a_gx1bxtg=a_gx1bxtg,&_temp1036_a_gx1bxtg) : &a_gx1bxtg, _pw_gx1bxtga.fixedflag ? (_temp1037_pw_gx1bxtga=pw_gx1bxtga,&_temp1037_pw_gx1bxtga) : &pw_gx1bxtga, _pw_gx1bxtg.fixedflag ? (_temp1038_pw_gx1bxtg=pw_gx1bxtg,&_temp1038_pw_gx1bxtg) : &pw_gx1bxtg,
                          _pw_gx1bxtgd.fixedflag ? (_temp1039_pw_gx1bxtgd=pw_gx1bxtgd,&_temp1039_pw_gx1bxtgd) : &pw_gx1bxtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx1bxtg  = _ia_gx1bxtg.fixedflag ?     ((void)((int)((a_gx1bxtg/target)*MAX_PG_IAMP)), ia_gx1bxtg) : (int)((a_gx1bxtg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1040_target=target,&_temp1040_target) : &target, (WF_PROCESSOR)wg_gxw1xtg, &ps1loggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1041_rtime=rtime,&_temp1041_rtime) : &rtime, _ftime.fixedflag ? (_temp1042_ftime=ftime,&_temp1042_ftime) : &ftime, (WF_PROCESSOR)wg_gxw1xtg, &ps1loggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxw1xtg.fixedflag ? (_temp1043_a_gxw1xtg=a_gxw1xtg,&_temp1043_a_gxw1xtg) : &a_gxw1xtg, _pw_gxw1xtga.fixedflag ? (_temp1044_pw_gxw1xtga=pw_gxw1xtga,&_temp1044_pw_gxw1xtga) : &pw_gxw1xtga, _pw_gxw1xtg.fixedflag ? (_temp1045_pw_gxw1xtg=pw_gxw1xtg,&_temp1045_pw_gxw1xtg) : &pw_gxw1xtg,
                          _pw_gxw1xtgd.fixedflag ? (_temp1046_pw_gxw1xtgd=pw_gxw1xtgd,&_temp1046_pw_gxw1xtgd) : &pw_gxw1xtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxw1xtg  = _ia_gxw1xtg.fixedflag ?     ((void)((int)((a_gxw1xtg/target)*MAX_PG_IAMP)), ia_gxw1xtg) : (int)((a_gxw1xtg/target)*MAX_PG_IAMP);
    }




    if (ampslice(_a_gzrf1as.fixedflag ? (_temp1047_a_gzrf1as=a_gzrf1as,&_temp1047_a_gzrf1as) : &a_gzrf1as,(LONG)(4000000*cyc_rf1as/
        pw_rf1as),
        (float)thk_rf1as,(float)gscale_rf1as,
        (int)TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf1asa.fixedflag ? (_temp1048_pw_gzrf1asa=pw_gzrf1asa,&_temp1048_pw_gzrf1asa) : &pw_gzrf1asa,a_gzrf1as,asloggrd.tz,
                asloggrd.zrt,TYPNDEF) == FAILURE)
    {
        return FAILURE;
    }
    if (optramp(_pw_gzrf1asd.fixedflag ? (_temp1049_pw_gzrf1asd=pw_gzrf1asd,&_temp1049_pw_gzrf1asd) : &pw_gzrf1asd,a_gzrf1as,asloggrd.tz,
                asloggrd.zft,TYPNDEF)== FAILURE)
    {
        return FAILURE;
    }

    ia_gzrf1as  = _ia_gzrf1as.fixedflag ?    ((void)((int)(a_gzrf1as*MAX_PG_IAMP/asloggrd.tz)), ia_gzrf1as) : (int)(a_gzrf1as*MAX_PG_IAMP/asloggrd.tz);

    ia_rf1as  = _ia_rf1as.fixedflag ?    ((void)((int)(a_rf1as*MAX_PG_IAMP)), ia_rf1as) : (int)(a_rf1as*MAX_PG_IAMP);
    if (res_rf1as == 0)
    {
        res_rf1as  = _res_rf1as.fixedflag ?  ((void)(pw_rf1as/(RF_UPDATE_TIME)), res_rf1as) : pw_rf1as/(RF_UPDATE_TIME);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1050_target=target,&_temp1050_target) : &target, (WF_PROCESSOR)wg_gz1as, &asloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1051_rtime=rtime,&_temp1051_rtime) : &rtime, _ftime.fixedflag ? (_temp1052_ftime=ftime,&_temp1052_ftime) : &ftime, (WF_PROCESSOR)wg_gz1as, &asloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz1as.fixedflag ? (_temp1053_a_gz1as=a_gz1as,&_temp1053_a_gz1as) : &a_gz1as, _pw_gz1asa.fixedflag ? (_temp1054_pw_gz1asa=pw_gz1asa,&_temp1054_pw_gz1asa) : &pw_gz1asa, _pw_gz1as.fixedflag ? (_temp1055_pw_gz1as=pw_gz1as,&_temp1055_pw_gz1as) : &pw_gz1as,
                          _pw_gz1asd.fixedflag ? (_temp1056_pw_gz1asd=pw_gz1asd,&_temp1056_pw_gz1asd) : &pw_gz1asd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz1as  = _ia_gz1as.fixedflag ?     ((void)((int)((a_gz1as/target)*MAX_PG_IAMP)), ia_gz1as) : (int)((a_gz1as/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1057_target=target,&_temp1057_target) : &target, (WF_PROCESSOR)wg_gxwas, &asloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1058_rtime=rtime,&_temp1058_rtime) : &rtime, _ftime.fixedflag ? (_temp1059_ftime=ftime,&_temp1059_ftime) : &ftime, (WF_PROCESSOR)wg_gxwas, &asloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxwas.fixedflag ? (_temp1060_a_gxwas=a_gxwas,&_temp1060_a_gxwas) : &a_gxwas, _pw_gxwasa.fixedflag ? (_temp1061_pw_gxwasa=pw_gxwasa,&_temp1061_pw_gxwasa) : &pw_gxwasa, _pw_gxwas.fixedflag ? (_temp1062_pw_gxwas=pw_gxwas,&_temp1062_pw_gxwas) : &pw_gxwas,
                          _pw_gxwasd.fixedflag ? (_temp1063_pw_gxwasd=pw_gxwasd,&_temp1063_pw_gxwasd) : &pw_gxwasd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxwas  = _ia_gxwas.fixedflag ?     ((void)((int)((a_gxwas/target)*MAX_PG_IAMP)), ia_gxwas) : (int)((a_gxwas/target)*MAX_PG_IAMP);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1064_target=target,&_temp1064_target) : &target, (WF_PROCESSOR)wg_gx1as, &asloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1065_rtime=rtime,&_temp1065_rtime) : &rtime, _ftime.fixedflag ? (_temp1066_ftime=ftime,&_temp1066_ftime) : &ftime, (WF_PROCESSOR)wg_gx1as, &asloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx1as.fixedflag ? (_temp1067_a_gx1as=a_gx1as,&_temp1067_a_gx1as) : &a_gx1as, _pw_gx1asa.fixedflag ? (_temp1068_pw_gx1asa=pw_gx1asa,&_temp1068_pw_gx1asa) : &pw_gx1asa, _pw_gx1as.fixedflag ? (_temp1069_pw_gx1as=pw_gx1as,&_temp1069_pw_gx1as) : &pw_gx1as,
                          _pw_gx1asd.fixedflag ? (_temp1070_pw_gx1asd=pw_gx1asd,&_temp1070_pw_gx1asd) : &pw_gx1asd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx1as  = _ia_gx1as.fixedflag ?     ((void)((int)((a_gx1as/target)*MAX_PG_IAMP)), ia_gx1as) : (int)((a_gx1as/target)*MAX_PG_IAMP);
    }

    {
        float target;

        gettarget(_target.fixedflag ? (_temp1071_target=target,&_temp1071_target) : &target,(WF_PROCESSOR)wg_gy1as,&asloggrd);
        ia_gy1as  = _ia_gy1as.fixedflag ?      
            ((void)((int)((endview_scaleas*a_gy1as/target)*MAX_PG_IAMP)), ia_gy1as) : (int)((endview_scaleas*a_gy1as/target)*MAX_PG_IAMP);
        ia_gy1aswa  = _ia_gy1aswa.fixedflag ?      
            ((void)((int)((endview_scaleas*a_gy1asa/target)*MAX_PG_IAMP)), ia_gy1aswa) : (int)((endview_scaleas*a_gy1asa/target)*MAX_PG_IAMP);
        ia_gy1aswb  = _ia_gy1aswb.fixedflag ?      
            ((void)((int)((endview_scaleas*a_gy1asb/target)*MAX_PG_IAMP)), ia_gy1aswb) : (int)((endview_scaleas*a_gy1asb/target)*MAX_PG_IAMP);
    }

    {
        float target;

        gettarget(_target.fixedflag ? (_temp1072_target=target,&_temp1072_target) : &target,(WF_PROCESSOR)wg_gy1ras,&asloggrd);
        ia_gy1ras  = _ia_gy1ras.fixedflag ?      
            ((void)((int)((endview_scaleas*a_gy1ras/target)*MAX_PG_IAMP)), ia_gy1ras) : (int)((endview_scaleas*a_gy1ras/target)*MAX_PG_IAMP);
        ia_gy1raswa  = _ia_gy1raswa.fixedflag ?      
            ((void)((int)((endview_scaleas*a_gy1rasa/target)*MAX_PG_IAMP)), ia_gy1raswa) : (int)((endview_scaleas*a_gy1rasa/target)*MAX_PG_IAMP);
        ia_gy1raswb  = _ia_gy1raswb.fixedflag ?      
            ((void)((int)((endview_scaleas*a_gy1rasb/target)*MAX_PG_IAMP)), ia_gy1raswb) : (int)((endview_scaleas*a_gy1rasb/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1073_target=target,&_temp1073_target) : &target, (WF_PROCESSOR)wg_gxkas, &asloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1074_rtime=rtime,&_temp1074_rtime) : &rtime, _ftime.fixedflag ? (_temp1075_ftime=ftime,&_temp1075_ftime) : &ftime, (WF_PROCESSOR)wg_gxkas, &asloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxkas.fixedflag ? (_temp1076_a_gxkas=a_gxkas,&_temp1076_a_gxkas) : &a_gxkas, _pw_gxkasa.fixedflag ? (_temp1077_pw_gxkasa=pw_gxkasa,&_temp1077_pw_gxkasa) : &pw_gxkasa, _pw_gxkas.fixedflag ? (_temp1078_pw_gxkas=pw_gxkas,&_temp1078_pw_gxkas) : &pw_gxkas,
                          _pw_gxkasd.fixedflag ? (_temp1079_pw_gxkasd=pw_gxkasd,&_temp1079_pw_gxkasd) : &pw_gxkasd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxkas  = _ia_gxkas.fixedflag ?     ((void)((int)((a_gxkas/target)*MAX_PG_IAMP)), ia_gxkas) : (int)((a_gxkas/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1080_target=target,&_temp1080_target) : &target, (WF_PROCESSOR)wg_gzkas, &asloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1081_rtime=rtime,&_temp1081_rtime) : &rtime, _ftime.fixedflag ? (_temp1082_ftime=ftime,&_temp1082_ftime) : &ftime, (WF_PROCESSOR)wg_gzkas, &asloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzkas.fixedflag ? (_temp1083_a_gzkas=a_gzkas,&_temp1083_a_gzkas) : &a_gzkas, _pw_gzkasa.fixedflag ? (_temp1084_pw_gzkasa=pw_gzkasa,&_temp1084_pw_gzkasa) : &pw_gzkasa, _pw_gzkas.fixedflag ? (_temp1085_pw_gzkas=pw_gzkas,&_temp1085_pw_gzkas) : &pw_gzkas,
                          _pw_gzkasd.fixedflag ? (_temp1086_pw_gzkasd=pw_gzkasd,&_temp1086_pw_gzkasd) : &pw_gzkasd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzkas  = _ia_gzkas.fixedflag ?     ((void)((int)((a_gzkas/target)*MAX_PG_IAMP)), ia_gzkas) : (int)((a_gzkas/target)*MAX_PG_IAMP);
    }

{
  float target;
  gettarget(_target.fixedflag ? (_temp1087_target=target,&_temp1087_target) : &target, (WF_PROCESSOR)wg_xdixon, &asloggrd);
  ia_xdixon  = _ia_xdixon.fixedflag ?     ((void)((int)((a_xdixon/target)*MAX_PG_IAMP)), ia_xdixon) : (int)((a_xdixon/target)*MAX_PG_IAMP);
}

{
  float target;
  gettarget(_target.fixedflag ? (_temp1088_target=target,&_temp1088_target) : &target, (WF_PROCESSOR)wg_ydixon, &asloggrd);
  ia_ydixon  = _ia_ydixon.fixedflag ?     ((void)((int)((a_ydixon/target)*MAX_PG_IAMP)), ia_ydixon) : (int)((a_ydixon/target)*MAX_PG_IAMP);
}

{
  float target;
  gettarget(_target.fixedflag ? (_temp1089_target=target,&_temp1089_target) : &target, (WF_PROCESSOR)wg_zdixon, &asloggrd);
  ia_zdixon  = _ia_zdixon.fixedflag ?     ((void)((int)((a_zdixon/target)*MAX_PG_IAMP)), ia_zdixon) : (int)((a_zdixon/target)*MAX_PG_IAMP);
}

{
  float target;
  gettarget(_target.fixedflag ? (_temp1090_target=target,&_temp1090_target) : &target, (WF_PROCESSOR)wg_sdixon, &asloggrd);
  ia_sdixon  = _ia_sdixon.fixedflag ?     ((void)((int)((a_sdixon/target)*MAX_PG_IAMP)), ia_sdixon) : (int)((a_sdixon/target)*MAX_PG_IAMP);
}

{
  float target;
  gettarget(_target.fixedflag ? (_temp1091_target=target,&_temp1091_target) : &target, (WF_PROCESSOR)wg_sdixon2, &asloggrd);
  ia_sdixon2  = _ia_sdixon2.fixedflag ?     ((void)((int)((a_sdixon2/target)*MAX_PG_IAMP)), ia_sdixon2) : (int)((a_sdixon2/target)*MAX_PG_IAMP);
}







    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1092_target=target,&_temp1092_target) : &target, (WF_PROCESSOR)wg_gzrf1rs, &rsloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1093_rtime=rtime,&_temp1093_rtime) : &rtime, _ftime.fixedflag ? (_temp1094_ftime=ftime,&_temp1094_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf1rs, &rsloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf1rs.fixedflag ? (_temp1095_a_gzrf1rs=a_gzrf1rs,&_temp1095_a_gzrf1rs) : &a_gzrf1rs, _pw_gzrf1rsa.fixedflag ? (_temp1096_pw_gzrf1rsa=pw_gzrf1rsa,&_temp1096_pw_gzrf1rsa) : &pw_gzrf1rsa, _pw_gzrf1rs.fixedflag ? (_temp1097_pw_gzrf1rs=pw_gzrf1rs,&_temp1097_pw_gzrf1rs) : &pw_gzrf1rs,
                          _pw_gzrf1rsd.fixedflag ? (_temp1098_pw_gzrf1rsd=pw_gzrf1rsd,&_temp1098_pw_gzrf1rsd) : &pw_gzrf1rsd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf1rs  = _ia_gzrf1rs.fixedflag ?     ((void)((int)((a_gzrf1rs/target)*MAX_PG_IAMP)), ia_gzrf1rs) : (int)((a_gzrf1rs/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1099_target=target,&_temp1099_target) : &target, (WF_PROCESSOR)wg_gxkbsrs, &rsloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1100_rtime=rtime,&_temp1100_rtime) : &rtime, _ftime.fixedflag ? (_temp1101_ftime=ftime,&_temp1101_ftime) : &ftime, (WF_PROCESSOR)wg_gxkbsrs, &rsloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxkbsrs.fixedflag ? (_temp1102_a_gxkbsrs=a_gxkbsrs,&_temp1102_a_gxkbsrs) : &a_gxkbsrs, _pw_gxkbsrsa.fixedflag ? (_temp1103_pw_gxkbsrsa=pw_gxkbsrsa,&_temp1103_pw_gxkbsrsa) : &pw_gxkbsrsa, _pw_gxkbsrs.fixedflag ? (_temp1104_pw_gxkbsrs=pw_gxkbsrs,&_temp1104_pw_gxkbsrs) : &pw_gxkbsrs,
                          _pw_gxkbsrsd.fixedflag ? (_temp1105_pw_gxkbsrsd=pw_gxkbsrsd,&_temp1105_pw_gxkbsrsd) : &pw_gxkbsrsd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxkbsrs  = _ia_gxkbsrs.fixedflag ?     ((void)((int)((a_gxkbsrs/target)*MAX_PG_IAMP)), ia_gxkbsrs) : (int)((a_gxkbsrs/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1106_target=target,&_temp1106_target) : &target, (WF_PROCESSOR)wg_gz1rs, &rsloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1107_rtime=rtime,&_temp1107_rtime) : &rtime, _ftime.fixedflag ? (_temp1108_ftime=ftime,&_temp1108_ftime) : &ftime, (WF_PROCESSOR)wg_gz1rs, &rsloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz1rs.fixedflag ? (_temp1109_a_gz1rs=a_gz1rs,&_temp1109_a_gz1rs) : &a_gz1rs, _pw_gz1rsa.fixedflag ? (_temp1110_pw_gz1rsa=pw_gz1rsa,&_temp1110_pw_gz1rsa) : &pw_gz1rsa, _pw_gz1rs.fixedflag ? (_temp1111_pw_gz1rs=pw_gz1rs,&_temp1111_pw_gz1rs) : &pw_gz1rs,
                          _pw_gz1rsd.fixedflag ? (_temp1112_pw_gz1rsd=pw_gz1rsd,&_temp1112_pw_gz1rsd) : &pw_gz1rsd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz1rs  = _ia_gz1rs.fixedflag ?     ((void)((int)((a_gz1rs/target)*MAX_PG_IAMP)), ia_gz1rs) : (int)((a_gz1rs/target)*MAX_PG_IAMP);
    }

    {
        ia_rfbrs    = _ia_rfbrs.fixedflag ?    ((void)((int)(a_rfbrs*MAX_PG_IAMP)), ia_rfbrs) : (int)(a_rfbrs*MAX_PG_IAMP);
    }

    {
        ia_thetarfbrs    = _ia_thetarfbrs.fixedflag ?    ((void)((int)(a_thetarfbrs*MAX_PG_IAMP)), ia_thetarfbrs) : (int)(a_thetarfbrs*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1113_target=target,&_temp1113_target) : &target, (WF_PROCESSOR)wg_gzkbsrs, &rsloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1114_rtime=rtime,&_temp1114_rtime) : &rtime, _ftime.fixedflag ? (_temp1115_ftime=ftime,&_temp1115_ftime) : &ftime, (WF_PROCESSOR)wg_gzkbsrs, &rsloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzkbsrs.fixedflag ? (_temp1116_a_gzkbsrs=a_gzkbsrs,&_temp1116_a_gzkbsrs) : &a_gzkbsrs, _pw_gzkbsrsa.fixedflag ? (_temp1117_pw_gzkbsrsa=pw_gzkbsrsa,&_temp1117_pw_gzkbsrsa) : &pw_gzkbsrsa, _pw_gzkbsrs.fixedflag ? (_temp1118_pw_gzkbsrs=pw_gzkbsrs,&_temp1118_pw_gzkbsrs) : &pw_gzkbsrs,
                          _pw_gzkbsrsd.fixedflag ? (_temp1119_pw_gzkbsrsd=pw_gzkbsrsd,&_temp1119_pw_gzkbsrsd) : &pw_gzkbsrsd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzkbsrs  = _ia_gzkbsrs.fixedflag ?     ((void)((int)((a_gzkbsrs/target)*MAX_PG_IAMP)), ia_gzkbsrs) : (int)((a_gzkbsrs/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1120_target=target,&_temp1120_target) : &target, (WF_PROCESSOR)wg_gxwrs, &rsloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1121_rtime=rtime,&_temp1121_rtime) : &rtime, _ftime.fixedflag ? (_temp1122_ftime=ftime,&_temp1122_ftime) : &ftime, (WF_PROCESSOR)wg_gxwrs, &rsloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxwrs.fixedflag ? (_temp1123_a_gxwrs=a_gxwrs,&_temp1123_a_gxwrs) : &a_gxwrs, _pw_gxwrsa.fixedflag ? (_temp1124_pw_gxwrsa=pw_gxwrsa,&_temp1124_pw_gxwrsa) : &pw_gxwrsa, _pw_gxwrs.fixedflag ? (_temp1125_pw_gxwrs=pw_gxwrs,&_temp1125_pw_gxwrs) : &pw_gxwrs,
                          _pw_gxwrsd.fixedflag ? (_temp1126_pw_gxwrsd=pw_gxwrsd,&_temp1126_pw_gxwrsd) : &pw_gxwrsd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxwrs  = _ia_gxwrs.fixedflag ?     ((void)((int)((a_gxwrs/target)*MAX_PG_IAMP)), ia_gxwrs) : (int)((a_gxwrs/target)*MAX_PG_IAMP);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1127_target=target,&_temp1127_target) : &target, (WF_PROCESSOR)wg_gx2rs, &rsloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1128_rtime=rtime,&_temp1128_rtime) : &rtime, _ftime.fixedflag ? (_temp1129_ftime=ftime,&_temp1129_ftime) : &ftime, (WF_PROCESSOR)wg_gx2rs, &rsloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx2rs.fixedflag ? (_temp1130_a_gx2rs=a_gx2rs,&_temp1130_a_gx2rs) : &a_gx2rs, _pw_gx2rsa.fixedflag ? (_temp1131_pw_gx2rsa=pw_gx2rsa,&_temp1131_pw_gx2rsa) : &pw_gx2rsa, _pw_gx2rs.fixedflag ? (_temp1132_pw_gx2rs=pw_gx2rs,&_temp1132_pw_gx2rs) : &pw_gx2rs,
                          _pw_gx2rsd.fixedflag ? (_temp1133_pw_gx2rsd=pw_gx2rsd,&_temp1133_pw_gx2rsd) : &pw_gx2rsd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx2rs  = _ia_gx2rs.fixedflag ?     ((void)((int)((a_gx2rs/target)*MAX_PG_IAMP)), ia_gx2rs) : (int)((a_gx2rs/target)*MAX_PG_IAMP);
    }

    {
        float target;

        gettarget(_target.fixedflag ? (_temp1134_target=target,&_temp1134_target) : &target,(WF_PROCESSOR)wg_gy2rs,&rsloggrd);
        ia_gy2rs  = _ia_gy2rs.fixedflag ?      
            ((void)((int)((endview_scalers*a_gy2rs/target)*MAX_PG_IAMP)), ia_gy2rs) : (int)((endview_scalers*a_gy2rs/target)*MAX_PG_IAMP);
        ia_gy2rswa  = _ia_gy2rswa.fixedflag ?      
            ((void)((int)((endview_scalers*a_gy2rsa/target)*MAX_PG_IAMP)), ia_gy2rswa) : (int)((endview_scalers*a_gy2rsa/target)*MAX_PG_IAMP);
        ia_gy2rswb  = _ia_gy2rswb.fixedflag ?      
            ((void)((int)((endview_scalers*a_gy2rsb/target)*MAX_PG_IAMP)), ia_gy2rswb) : (int)((endview_scalers*a_gy2rsb/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1135_target=target,&_temp1135_target) : &target, (WF_PROCESSOR)wg_gxw2rs, &rsloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1136_rtime=rtime,&_temp1136_rtime) : &rtime, _ftime.fixedflag ? (_temp1137_ftime=ftime,&_temp1137_ftime) : &ftime, (WF_PROCESSOR)wg_gxw2rs, &rsloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxw2rs.fixedflag ? (_temp1138_a_gxw2rs=a_gxw2rs,&_temp1138_a_gxw2rs) : &a_gxw2rs, _pw_gxw2rsa.fixedflag ? (_temp1139_pw_gxw2rsa=pw_gxw2rsa,&_temp1139_pw_gxw2rsa) : &pw_gxw2rsa, _pw_gxw2rs.fixedflag ? (_temp1140_pw_gxw2rs=pw_gxw2rs,&_temp1140_pw_gxw2rs) : &pw_gxw2rs,
                          _pw_gxw2rsd.fixedflag ? (_temp1141_pw_gxw2rsd=pw_gxw2rsd,&_temp1141_pw_gxw2rsd) : &pw_gxw2rsd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxw2rs  = _ia_gxw2rs.fixedflag ?     ((void)((int)((a_gxw2rs/target)*MAX_PG_IAMP)), ia_gxw2rs) : (int)((a_gxw2rs/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1142_target=target,&_temp1142_target) : &target, (WF_PROCESSOR)wg_gx1rs, &rsloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1143_rtime=rtime,&_temp1143_rtime) : &rtime, _ftime.fixedflag ? (_temp1144_ftime=ftime,&_temp1144_ftime) : &ftime, (WF_PROCESSOR)wg_gx1rs, &rsloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx1rs.fixedflag ? (_temp1145_a_gx1rs=a_gx1rs,&_temp1145_a_gx1rs) : &a_gx1rs, _pw_gx1rsa.fixedflag ? (_temp1146_pw_gx1rsa=pw_gx1rsa,&_temp1146_pw_gx1rsa) : &pw_gx1rsa, _pw_gx1rs.fixedflag ? (_temp1147_pw_gx1rs=pw_gx1rs,&_temp1147_pw_gx1rs) : &pw_gx1rs,
                          _pw_gx1rsd.fixedflag ? (_temp1148_pw_gx1rsd=pw_gx1rsd,&_temp1148_pw_gx1rsd) : &pw_gx1rsd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx1rs  = _ia_gx1rs.fixedflag ?     ((void)((int)((a_gx1rs/target)*MAX_PG_IAMP)), ia_gx1rs) : (int)((a_gx1rs/target)*MAX_PG_IAMP);
    }

    {
        float target;

        gettarget(_target.fixedflag ? (_temp1149_target=target,&_temp1149_target) : &target,(WF_PROCESSOR)wg_gy1rrs,&rsloggrd);
        ia_gy1rrs  = _ia_gy1rrs.fixedflag ?      
            ((void)((int)((endview_scalers*a_gy1rrs/target)*MAX_PG_IAMP)), ia_gy1rrs) : (int)((endview_scalers*a_gy1rrs/target)*MAX_PG_IAMP);
        ia_gy1rrswa  = _ia_gy1rrswa.fixedflag ?      
            ((void)((int)((endview_scalers*a_gy1rrsa/target)*MAX_PG_IAMP)), ia_gy1rrswa) : (int)((endview_scalers*a_gy1rrsa/target)*MAX_PG_IAMP);
        ia_gy1rrswb  = _ia_gy1rrswb.fixedflag ?      
            ((void)((int)((endview_scalers*a_gy1rrsb/target)*MAX_PG_IAMP)), ia_gy1rrswb) : (int)((endview_scalers*a_gy1rrsb/target)*MAX_PG_IAMP);
    }

    {
        float target;

        gettarget(_target.fixedflag ? (_temp1150_target=target,&_temp1150_target) : &target,(WF_PROCESSOR)wg_gy1rs,&rsloggrd);
        ia_gy1rs  = _ia_gy1rs.fixedflag ?      
            ((void)((int)((endview_scalers*a_gy1rs/target)*MAX_PG_IAMP)), ia_gy1rs) : (int)((endview_scalers*a_gy1rs/target)*MAX_PG_IAMP);
        ia_gy1rswa  = _ia_gy1rswa.fixedflag ?      
            ((void)((int)((endview_scalers*a_gy1rsa/target)*MAX_PG_IAMP)), ia_gy1rswa) : (int)((endview_scalers*a_gy1rsa/target)*MAX_PG_IAMP);
        ia_gy1rswb  = _ia_gy1rswb.fixedflag ?      
            ((void)((int)((endview_scalers*a_gy1rsb/target)*MAX_PG_IAMP)), ia_gy1rswb) : (int)((endview_scalers*a_gy1rsb/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1151_target=target,&_temp1151_target) : &target, (WF_PROCESSOR)wg_gzkrs, &rsloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1152_rtime=rtime,&_temp1152_rtime) : &rtime, _ftime.fixedflag ? (_temp1153_ftime=ftime,&_temp1153_ftime) : &ftime, (WF_PROCESSOR)wg_gzkrs, &rsloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzkrs.fixedflag ? (_temp1154_a_gzkrs=a_gzkrs,&_temp1154_a_gzkrs) : &a_gzkrs, _pw_gzkrsa.fixedflag ? (_temp1155_pw_gzkrsa=pw_gzkrsa,&_temp1155_pw_gzkrsa) : &pw_gzkrsa, _pw_gzkrs.fixedflag ? (_temp1156_pw_gzkrs=pw_gzkrs,&_temp1156_pw_gzkrs) : &pw_gzkrs,
                          _pw_gzkrsd.fixedflag ? (_temp1157_pw_gzkrsd=pw_gzkrsd,&_temp1157_pw_gzkrsd) : &pw_gzkrsd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzkrs  = _ia_gzkrs.fixedflag ?     ((void)((int)((a_gzkrs/target)*MAX_PG_IAMP)), ia_gzkrs) : (int)((a_gzkrs/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1158_target=target,&_temp1158_target) : &target, (WF_PROCESSOR)wg_gxkrs, &rsloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1159_rtime=rtime,&_temp1159_rtime) : &rtime, _ftime.fixedflag ? (_temp1160_ftime=ftime,&_temp1160_ftime) : &ftime, (WF_PROCESSOR)wg_gxkrs, &rsloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxkrs.fixedflag ? (_temp1161_a_gxkrs=a_gxkrs,&_temp1161_a_gxkrs) : &a_gxkrs, _pw_gxkrsa.fixedflag ? (_temp1162_pw_gxkrsa=pw_gxkrsa,&_temp1162_pw_gxkrsa) : &pw_gxkrsa, _pw_gxkrs.fixedflag ? (_temp1163_pw_gxkrs=pw_gxkrs,&_temp1163_pw_gxkrs) : &pw_gxkrs,
                          _pw_gxkrsd.fixedflag ? (_temp1164_pw_gxkrsd=pw_gxkrsd,&_temp1164_pw_gxkrsd) : &pw_gxkrsd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxkrs  = _ia_gxkrs.fixedflag ?     ((void)((int)((a_gxkrs/target)*MAX_PG_IAMP)), ia_gxkrs) : (int)((a_gxkrs/target)*MAX_PG_IAMP);
    }





    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1165_target=target,&_temp1165_target) : &target, (WF_PROCESSOR)wg_gzrf1dtg, &dtgloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1166_rtime=rtime,&_temp1166_rtime) : &rtime, _ftime.fixedflag ? (_temp1167_ftime=ftime,&_temp1167_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf1dtg, &dtgloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf1dtg.fixedflag ? (_temp1168_a_gzrf1dtg=a_gzrf1dtg,&_temp1168_a_gzrf1dtg) : &a_gzrf1dtg, _pw_gzrf1dtga.fixedflag ? (_temp1169_pw_gzrf1dtga=pw_gzrf1dtga,&_temp1169_pw_gzrf1dtga) : &pw_gzrf1dtga, _pw_gzrf1dtg.fixedflag ? (_temp1170_pw_gzrf1dtg=pw_gzrf1dtg,&_temp1170_pw_gzrf1dtg) : &pw_gzrf1dtg,
                          _pw_gzrf1dtgd.fixedflag ? (_temp1171_pw_gzrf1dtgd=pw_gzrf1dtgd,&_temp1171_pw_gzrf1dtgd) : &pw_gzrf1dtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf1dtg  = _ia_gzrf1dtg.fixedflag ?     ((void)((int)((a_gzrf1dtg/target)*MAX_PG_IAMP)), ia_gzrf1dtg) : (int)((a_gzrf1dtg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1172_target=target,&_temp1172_target) : &target, (WF_PROCESSOR)wg_gxkbsdtg, &dtgloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1173_rtime=rtime,&_temp1173_rtime) : &rtime, _ftime.fixedflag ? (_temp1174_ftime=ftime,&_temp1174_ftime) : &ftime, (WF_PROCESSOR)wg_gxkbsdtg, &dtgloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxkbsdtg.fixedflag ? (_temp1175_a_gxkbsdtg=a_gxkbsdtg,&_temp1175_a_gxkbsdtg) : &a_gxkbsdtg, _pw_gxkbsdtga.fixedflag ? (_temp1176_pw_gxkbsdtga=pw_gxkbsdtga,&_temp1176_pw_gxkbsdtga) : &pw_gxkbsdtga, _pw_gxkbsdtg.fixedflag ? (_temp1177_pw_gxkbsdtg=pw_gxkbsdtg,&_temp1177_pw_gxkbsdtg) : &pw_gxkbsdtg,
                          _pw_gxkbsdtgd.fixedflag ? (_temp1178_pw_gxkbsdtgd=pw_gxkbsdtgd,&_temp1178_pw_gxkbsdtgd) : &pw_gxkbsdtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxkbsdtg  = _ia_gxkbsdtg.fixedflag ?     ((void)((int)((a_gxkbsdtg/target)*MAX_PG_IAMP)), ia_gxkbsdtg) : (int)((a_gxkbsdtg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1179_target=target,&_temp1179_target) : &target, (WF_PROCESSOR)wg_gz1dtg, &dtgloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1180_rtime=rtime,&_temp1180_rtime) : &rtime, _ftime.fixedflag ? (_temp1181_ftime=ftime,&_temp1181_ftime) : &ftime, (WF_PROCESSOR)wg_gz1dtg, &dtgloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gz1dtg.fixedflag ? (_temp1182_a_gz1dtg=a_gz1dtg,&_temp1182_a_gz1dtg) : &a_gz1dtg, _pw_gz1dtga.fixedflag ? (_temp1183_pw_gz1dtga=pw_gz1dtga,&_temp1183_pw_gz1dtga) : &pw_gz1dtga, _pw_gz1dtg.fixedflag ? (_temp1184_pw_gz1dtg=pw_gz1dtg,&_temp1184_pw_gz1dtg) : &pw_gz1dtg,
                          _pw_gz1dtgd.fixedflag ? (_temp1185_pw_gz1dtgd=pw_gz1dtgd,&_temp1185_pw_gz1dtgd) : &pw_gz1dtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gz1dtg  = _ia_gz1dtg.fixedflag ?     ((void)((int)((a_gz1dtg/target)*MAX_PG_IAMP)), ia_gz1dtg) : (int)((a_gz1dtg/target)*MAX_PG_IAMP);
    }

    {
        ia_rfbdtg    = _ia_rfbdtg.fixedflag ?    ((void)((int)(a_rfbdtg*MAX_PG_IAMP)), ia_rfbdtg) : (int)(a_rfbdtg*MAX_PG_IAMP);
    }

    {
        ia_thetarfbdtg    = _ia_thetarfbdtg.fixedflag ?    ((void)((int)(a_thetarfbdtg*MAX_PG_IAMP)), ia_thetarfbdtg) : (int)(a_thetarfbdtg*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1186_target=target,&_temp1186_target) : &target, (WF_PROCESSOR)wg_gzkbsdtg, &dtgloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1187_rtime=rtime,&_temp1187_rtime) : &rtime, _ftime.fixedflag ? (_temp1188_ftime=ftime,&_temp1188_ftime) : &ftime, (WF_PROCESSOR)wg_gzkbsdtg, &dtgloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzkbsdtg.fixedflag ? (_temp1189_a_gzkbsdtg=a_gzkbsdtg,&_temp1189_a_gzkbsdtg) : &a_gzkbsdtg, _pw_gzkbsdtga.fixedflag ? (_temp1190_pw_gzkbsdtga=pw_gzkbsdtga,&_temp1190_pw_gzkbsdtga) : &pw_gzkbsdtga, _pw_gzkbsdtg.fixedflag ? (_temp1191_pw_gzkbsdtg=pw_gzkbsdtg,&_temp1191_pw_gzkbsdtg) : &pw_gzkbsdtg,
                          _pw_gzkbsdtgd.fixedflag ? (_temp1192_pw_gzkbsdtgd=pw_gzkbsdtgd,&_temp1192_pw_gzkbsdtgd) : &pw_gzkbsdtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzkbsdtg  = _ia_gzkbsdtg.fixedflag ?     ((void)((int)((a_gzkbsdtg/target)*MAX_PG_IAMP)), ia_gzkbsdtg) : (int)((a_gzkbsdtg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1193_target=target,&_temp1193_target) : &target, (WF_PROCESSOR)wg_gxwdtg, &dtgloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1194_rtime=rtime,&_temp1194_rtime) : &rtime, _ftime.fixedflag ? (_temp1195_ftime=ftime,&_temp1195_ftime) : &ftime, (WF_PROCESSOR)wg_gxwdtg, &dtgloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxwdtg.fixedflag ? (_temp1196_a_gxwdtg=a_gxwdtg,&_temp1196_a_gxwdtg) : &a_gxwdtg, _pw_gxwdtga.fixedflag ? (_temp1197_pw_gxwdtga=pw_gxwdtga,&_temp1197_pw_gxwdtga) : &pw_gxwdtga, _pw_gxwdtg.fixedflag ? (_temp1198_pw_gxwdtg=pw_gxwdtg,&_temp1198_pw_gxwdtg) : &pw_gxwdtg,
                          _pw_gxwdtgd.fixedflag ? (_temp1199_pw_gxwdtgd=pw_gxwdtgd,&_temp1199_pw_gxwdtgd) : &pw_gxwdtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxwdtg  = _ia_gxwdtg.fixedflag ?     ((void)((int)((a_gxwdtg/target)*MAX_PG_IAMP)), ia_gxwdtg) : (int)((a_gxwdtg/target)*MAX_PG_IAMP);
    }


    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1200_target=target,&_temp1200_target) : &target, (WF_PROCESSOR)wg_gx2dtg, &dtgloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1201_rtime=rtime,&_temp1201_rtime) : &rtime, _ftime.fixedflag ? (_temp1202_ftime=ftime,&_temp1202_ftime) : &ftime, (WF_PROCESSOR)wg_gx2dtg, &dtgloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx2dtg.fixedflag ? (_temp1203_a_gx2dtg=a_gx2dtg,&_temp1203_a_gx2dtg) : &a_gx2dtg, _pw_gx2dtga.fixedflag ? (_temp1204_pw_gx2dtga=pw_gx2dtga,&_temp1204_pw_gx2dtga) : &pw_gx2dtga, _pw_gx2dtg.fixedflag ? (_temp1205_pw_gx2dtg=pw_gx2dtg,&_temp1205_pw_gx2dtg) : &pw_gx2dtg,
                          _pw_gx2dtgd.fixedflag ? (_temp1206_pw_gx2dtgd=pw_gx2dtgd,&_temp1206_pw_gx2dtgd) : &pw_gx2dtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx2dtg  = _ia_gx2dtg.fixedflag ?     ((void)((int)((a_gx2dtg/target)*MAX_PG_IAMP)), ia_gx2dtg) : (int)((a_gx2dtg/target)*MAX_PG_IAMP);
    }

    {
        float target;

        gettarget(_target.fixedflag ? (_temp1207_target=target,&_temp1207_target) : &target,(WF_PROCESSOR)wg_gy2dtg,&dtgloggrd);
        ia_gy2dtg  = _ia_gy2dtg.fixedflag ?      
            ((void)((int)((endview_scaledtg*a_gy2dtg/target)*MAX_PG_IAMP)), ia_gy2dtg) : (int)((endview_scaledtg*a_gy2dtg/target)*MAX_PG_IAMP);
        ia_gy2dtgwa  = _ia_gy2dtgwa.fixedflag ?      
            ((void)((int)((endview_scaledtg*a_gy2dtga/target)*MAX_PG_IAMP)), ia_gy2dtgwa) : (int)((endview_scaledtg*a_gy2dtga/target)*MAX_PG_IAMP);
        ia_gy2dtgwb  = _ia_gy2dtgwb.fixedflag ?      
            ((void)((int)((endview_scaledtg*a_gy2dtgb/target)*MAX_PG_IAMP)), ia_gy2dtgwb) : (int)((endview_scaledtg*a_gy2dtgb/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1208_target=target,&_temp1208_target) : &target, (WF_PROCESSOR)wg_gxw2dtg, &dtgloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1209_rtime=rtime,&_temp1209_rtime) : &rtime, _ftime.fixedflag ? (_temp1210_ftime=ftime,&_temp1210_ftime) : &ftime, (WF_PROCESSOR)wg_gxw2dtg, &dtgloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxw2dtg.fixedflag ? (_temp1211_a_gxw2dtg=a_gxw2dtg,&_temp1211_a_gxw2dtg) : &a_gxw2dtg, _pw_gxw2dtga.fixedflag ? (_temp1212_pw_gxw2dtga=pw_gxw2dtga,&_temp1212_pw_gxw2dtga) : &pw_gxw2dtga, _pw_gxw2dtg.fixedflag ? (_temp1213_pw_gxw2dtg=pw_gxw2dtg,&_temp1213_pw_gxw2dtg) : &pw_gxw2dtg,
                          _pw_gxw2dtgd.fixedflag ? (_temp1214_pw_gxw2dtgd=pw_gxw2dtgd,&_temp1214_pw_gxw2dtgd) : &pw_gxw2dtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxw2dtg  = _ia_gxw2dtg.fixedflag ?     ((void)((int)((a_gxw2dtg/target)*MAX_PG_IAMP)), ia_gxw2dtg) : (int)((a_gxw2dtg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1215_target=target,&_temp1215_target) : &target, (WF_PROCESSOR)wg_gx1dtg, &dtgloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1216_rtime=rtime,&_temp1216_rtime) : &rtime, _ftime.fixedflag ? (_temp1217_ftime=ftime,&_temp1217_ftime) : &ftime, (WF_PROCESSOR)wg_gx1dtg, &dtgloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gx1dtg.fixedflag ? (_temp1218_a_gx1dtg=a_gx1dtg,&_temp1218_a_gx1dtg) : &a_gx1dtg, _pw_gx1dtga.fixedflag ? (_temp1219_pw_gx1dtga=pw_gx1dtga,&_temp1219_pw_gx1dtga) : &pw_gx1dtga, _pw_gx1dtg.fixedflag ? (_temp1220_pw_gx1dtg=pw_gx1dtg,&_temp1220_pw_gx1dtg) : &pw_gx1dtg,
                          _pw_gx1dtgd.fixedflag ? (_temp1221_pw_gx1dtgd=pw_gx1dtgd,&_temp1221_pw_gx1dtgd) : &pw_gx1dtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gx1dtg  = _ia_gx1dtg.fixedflag ?     ((void)((int)((a_gx1dtg/target)*MAX_PG_IAMP)), ia_gx1dtg) : (int)((a_gx1dtg/target)*MAX_PG_IAMP);
    }

    {
        float target;

        gettarget(_target.fixedflag ? (_temp1222_target=target,&_temp1222_target) : &target,(WF_PROCESSOR)wg_gy1rdtg,&dtgloggrd);
        ia_gy1rdtg  = _ia_gy1rdtg.fixedflag ?      
            ((void)((int)((endview_scaledtg*a_gy1rdtg/target)*MAX_PG_IAMP)), ia_gy1rdtg) : (int)((endview_scaledtg*a_gy1rdtg/target)*MAX_PG_IAMP);
        ia_gy1rdtgwa  = _ia_gy1rdtgwa.fixedflag ?      
            ((void)((int)((endview_scaledtg*a_gy1rdtga/target)*MAX_PG_IAMP)), ia_gy1rdtgwa) : (int)((endview_scaledtg*a_gy1rdtga/target)*MAX_PG_IAMP);
        ia_gy1rdtgwb  = _ia_gy1rdtgwb.fixedflag ?      
            ((void)((int)((endview_scaledtg*a_gy1rdtgb/target)*MAX_PG_IAMP)), ia_gy1rdtgwb) : (int)((endview_scaledtg*a_gy1rdtgb/target)*MAX_PG_IAMP);
    }

    {
        float target;

        gettarget(_target.fixedflag ? (_temp1223_target=target,&_temp1223_target) : &target,(WF_PROCESSOR)wg_gy1dtg,&dtgloggrd);
        ia_gy1dtg  = _ia_gy1dtg.fixedflag ?      
            ((void)((int)((endview_scaledtg*a_gy1dtg/target)*MAX_PG_IAMP)), ia_gy1dtg) : (int)((endview_scaledtg*a_gy1dtg/target)*MAX_PG_IAMP);
        ia_gy1dtgwa  = _ia_gy1dtgwa.fixedflag ?      
            ((void)((int)((endview_scaledtg*a_gy1dtga/target)*MAX_PG_IAMP)), ia_gy1dtgwa) : (int)((endview_scaledtg*a_gy1dtga/target)*MAX_PG_IAMP);
        ia_gy1dtgwb  = _ia_gy1dtgwb.fixedflag ?      
            ((void)((int)((endview_scaledtg*a_gy1dtgb/target)*MAX_PG_IAMP)), ia_gy1dtgwb) : (int)((endview_scaledtg*a_gy1dtgb/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1224_target=target,&_temp1224_target) : &target, (WF_PROCESSOR)wg_gzkdtg, &dtgloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1225_rtime=rtime,&_temp1225_rtime) : &rtime, _ftime.fixedflag ? (_temp1226_ftime=ftime,&_temp1226_ftime) : &ftime, (WF_PROCESSOR)wg_gzkdtg, &dtgloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzkdtg.fixedflag ? (_temp1227_a_gzkdtg=a_gzkdtg,&_temp1227_a_gzkdtg) : &a_gzkdtg, _pw_gzkdtga.fixedflag ? (_temp1228_pw_gzkdtga=pw_gzkdtga,&_temp1228_pw_gzkdtga) : &pw_gzkdtga, _pw_gzkdtg.fixedflag ? (_temp1229_pw_gzkdtg=pw_gzkdtg,&_temp1229_pw_gzkdtg) : &pw_gzkdtg,
                          _pw_gzkdtgd.fixedflag ? (_temp1230_pw_gzkdtgd=pw_gzkdtgd,&_temp1230_pw_gzkdtgd) : &pw_gzkdtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzkdtg  = _ia_gzkdtg.fixedflag ?     ((void)((int)((a_gzkdtg/target)*MAX_PG_IAMP)), ia_gzkdtg) : (int)((a_gzkdtg/target)*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1231_target=target,&_temp1231_target) : &target, (WF_PROCESSOR)wg_gxkdtg, &dtgloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1232_rtime=rtime,&_temp1232_rtime) : &rtime, _ftime.fixedflag ? (_temp1233_ftime=ftime,&_temp1233_ftime) : &ftime, (WF_PROCESSOR)wg_gxkdtg, &dtgloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxkdtg.fixedflag ? (_temp1234_a_gxkdtg=a_gxkdtg,&_temp1234_a_gxkdtg) : &a_gxkdtg, _pw_gxkdtga.fixedflag ? (_temp1235_pw_gxkdtga=pw_gxkdtga,&_temp1235_pw_gxkdtga) : &pw_gxkdtga, _pw_gxkdtg.fixedflag ? (_temp1236_pw_gxkdtg=pw_gxkdtg,&_temp1236_pw_gxkdtg) : &pw_gxkdtg,
                          _pw_gxkdtgd.fixedflag ? (_temp1237_pw_gxkdtgd=pw_gxkdtgd,&_temp1237_pw_gxkdtgd) : &pw_gxkdtgd) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxkdtg  = _ia_gxkdtg.fixedflag ?     ((void)((int)((a_gxkdtg/target)*MAX_PG_IAMP)), ia_gxkdtg) : (int)((a_gxkdtg/target)*MAX_PG_IAMP);
    }




    {
        ia_rf1cal    = _ia_rf1cal.fixedflag ?    ((void)((int)(a_rf1cal*MAX_PG_IAMP)), ia_rf1cal) : (int)(a_rf1cal*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1238_target=target,&_temp1238_target) : &target, (WF_PROCESSOR)wg_gzrf1cal, &calloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1239_rtime=rtime,&_temp1239_rtime) : &rtime, _ftime.fixedflag ? (_temp1240_ftime=ftime,&_temp1240_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf1cal, &calloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf1cal.fixedflag ? (_temp1241_a_gzrf1cal=a_gzrf1cal,&_temp1241_a_gzrf1cal) : &a_gzrf1cal, _pw_gzrf1cala.fixedflag ? (_temp1242_pw_gzrf1cala=pw_gzrf1cala,&_temp1242_pw_gzrf1cala) : &pw_gzrf1cala, _pw_gzrf1cal.fixedflag ? (_temp1243_pw_gzrf1cal=pw_gzrf1cal,&_temp1243_pw_gzrf1cal) : &pw_gzrf1cal,
                          _pw_gzrf1cald.fixedflag ? (_temp1244_pw_gzrf1cald=pw_gzrf1cald,&_temp1244_pw_gzrf1cald) : &pw_gzrf1cald) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf1cal  = _ia_gzrf1cal.fixedflag ?     ((void)((int)((a_gzrf1cal/target)*MAX_PG_IAMP)), ia_gzrf1cal) : (int)((a_gzrf1cal/target)*MAX_PG_IAMP);
    }

{
   float target;
   int rtime,ftime;

   gettarget(_target.fixedflag ? (_temp1245_target=target,&_temp1245_target) : &target, (WF_PROCESSOR)wg_gzcombcal, &calloggrd);
   getramptime(_rtime.fixedflag ? (_temp1246_rtime=rtime,&_temp1246_rtime) : &rtime, _ftime.fixedflag ? (_temp1247_ftime=ftime,&_temp1247_ftime) : &ftime, (WF_PROCESSOR)wg_gzcombcal, &calloggrd);
   if (TYPNDEF == TYPDEF) {
     if (amppwgrad((float)(0.0),target,0.0,0.0,rtime,MIN_PLATEAU_TIME,
				 _a_gzcombcal.fixedflag ? (_temp1248_a_gzcombcal=a_gzcombcal,&_temp1248_a_gzcombcal) : &a_gzcombcal, _pw_gzcombcala.fixedflag ? (_temp1249_pw_gzcombcala=pw_gzcombcala,&_temp1249_pw_gzcombcala) : &pw_gzcombcala, _pw_gzcombcal.fixedflag ? (_temp1250_pw_gzcombcal=pw_gzcombcal,&_temp1250_pw_gzcombcal) : &pw_gzcombcal,
				 _pw_gzcombcald.fixedflag ? (_temp1251_pw_gzcombcald=pw_gzcombcald,&_temp1251_pw_gzcombcald) : &pw_gzcombcald) == FAILURE) return FAILURE;
   }
   if (TRAP_ALL_SLOPED & TRAP_SLOPED)
     {
       ia_gzcombcal  = _ia_gzcombcal.fixedflag ?       ((void)((int)((endviewz_scalecal*a_gzcombcal/target)*MAX_PG_IAMP)), ia_gzcombcal) : (int)((endviewz_scalecal*a_gzcombcal/target)*MAX_PG_IAMP);
       ia_gzcombcalwa  = _ia_gzcombcalwa.fixedflag ?       ((void)((int)((endviewz_scalecal*a_gzcombcala/target)*MAX_PG_IAMP)), ia_gzcombcalwa) : (int)((endviewz_scalecal*a_gzcombcala/target)*MAX_PG_IAMP);
       ia_gzcombcalwb  = _ia_gzcombcalwb.fixedflag ?       ((void)((int)((endviewz_scalecal*a_gzcombcalb/target)*MAX_PG_IAMP)), ia_gzcombcalwb) : (int)((endviewz_scalecal*a_gzcombcalb/target)*MAX_PG_IAMP);
     }
   else  /* standard trapezoid */
     {
       ia_gzcombcal  = _ia_gzcombcal.fixedflag ?     ((void)((int)((a_gzcombcal/target)*MAX_PG_IAMP)), ia_gzcombcal) : (int)((a_gzcombcal/target)*MAX_PG_IAMP);
       ia_gzcombcalwa  = _ia_gzcombcalwa.fixedflag ?   ((void)(MAX_PG_WAMP), ia_gzcombcalwa) : MAX_PG_WAMP;
       ia_gzcombcalwb  = _ia_gzcombcalwb.fixedflag ?  ((void)(MAX_PG_WAMP), ia_gzcombcalwb) : MAX_PG_WAMP;
     }

   if ((wg_gzcombcal==TYPRHO1)||(wg_gzcombcal==TYPRHO2) ||
       (wg_gzcombcal==TYPTHETA)||(wg_gzcombcal==TYPOMEGA))
     {				/* Determine min period */
       per_gzcombcal  = _per_gzcombcal.fixedflag ?  ((void)((RF_UPDATE_TIME)), per_gzcombcal) : (RF_UPDATE_TIME); 
     }
   else
     {
       per_gzcombcal  = _per_gzcombcal.fixedflag ?  ((void)((GRAD_UPDATE_TIME)), per_gzcombcal) : (GRAD_UPDATE_TIME);
     }

   /* set leading edge pulse width */
   if (0 != 0)
     pw_gzcombcalf  = _pw_gzcombcalf.fixedflag ?  ((void)(IMax(2,GRAD_UPDATE_TIME,0)), pw_gzcombcalf) : IMax(2,GRAD_UPDATE_TIME,0);
   else
     pw_gzcombcalf  = _pw_gzcombcalf.fixedflag ?  ((void)(0), pw_gzcombcalf) : 0;

   if ((wg_gzcombcal==TYPRHO1)||(wg_gzcombcal==TYPRHO2) ||
       (wg_gzcombcal==TYPTHETA)||(wg_gzcombcal==TYPOMEGA))
     pw_gzcombcal  = _pw_gzcombcal.fixedflag ?  ((void)(0), pw_gzcombcal) : 0;    /* no need for leading edge if rf */

   res_gzcombcal  = _res_gzcombcal.fixedflag ? 		/* Find resolution */
           
       ((void)((pw_gzcombcalf+pw_gzcombcala+pw_gzcombcal+pw_gzcombcald)/per_gzcombcal), res_gzcombcal) : (pw_gzcombcalf+pw_gzcombcala+pw_gzcombcal+pw_gzcombcald)/per_gzcombcal;
}

{
   float target;
   int rtime,ftime;

   gettarget(_target.fixedflag ? (_temp1252_target=target,&_temp1252_target) : &target, (WF_PROCESSOR)wg_gzprcal, &calloggrd);
   getramptime(_rtime.fixedflag ? (_temp1253_rtime=rtime,&_temp1253_rtime) : &rtime, _ftime.fixedflag ? (_temp1254_ftime=ftime,&_temp1254_ftime) : &ftime, (WF_PROCESSOR)wg_gzprcal, &calloggrd);
   if (TYPNDEF == TYPDEF) {
     if (amppwgrad((float)(0.0),target,0.0,0.0,rtime,MIN_PLATEAU_TIME,
				 _a_gzprcal.fixedflag ? (_temp1255_a_gzprcal=a_gzprcal,&_temp1255_a_gzprcal) : &a_gzprcal, _pw_gzprcala.fixedflag ? (_temp1256_pw_gzprcala=pw_gzprcala,&_temp1256_pw_gzprcala) : &pw_gzprcala, _pw_gzprcal.fixedflag ? (_temp1257_pw_gzprcal=pw_gzprcal,&_temp1257_pw_gzprcal) : &pw_gzprcal,
				 _pw_gzprcald.fixedflag ? (_temp1258_pw_gzprcald=pw_gzprcald,&_temp1258_pw_gzprcald) : &pw_gzprcald) == FAILURE) return FAILURE;
   }
   if (TRAP_ALL_SLOPED & TRAP_SLOPED)
     {
       ia_gzprcal  = _ia_gzprcal.fixedflag ?       ((void)((int)((endviewz_scalecal*a_gzprcal/target)*MAX_PG_IAMP)), ia_gzprcal) : (int)((endviewz_scalecal*a_gzprcal/target)*MAX_PG_IAMP);
       ia_gzprcalwa  = _ia_gzprcalwa.fixedflag ?       ((void)((int)((endviewz_scalecal*a_gzprcala/target)*MAX_PG_IAMP)), ia_gzprcalwa) : (int)((endviewz_scalecal*a_gzprcala/target)*MAX_PG_IAMP);
       ia_gzprcalwb  = _ia_gzprcalwb.fixedflag ?       ((void)((int)((endviewz_scalecal*a_gzprcalb/target)*MAX_PG_IAMP)), ia_gzprcalwb) : (int)((endviewz_scalecal*a_gzprcalb/target)*MAX_PG_IAMP);
     }
   else  /* standard trapezoid */
     {
       ia_gzprcal  = _ia_gzprcal.fixedflag ?     ((void)((int)((a_gzprcal/target)*MAX_PG_IAMP)), ia_gzprcal) : (int)((a_gzprcal/target)*MAX_PG_IAMP);
       ia_gzprcalwa  = _ia_gzprcalwa.fixedflag ?   ((void)(MAX_PG_WAMP), ia_gzprcalwa) : MAX_PG_WAMP;
       ia_gzprcalwb  = _ia_gzprcalwb.fixedflag ?  ((void)(MAX_PG_WAMP), ia_gzprcalwb) : MAX_PG_WAMP;
     }

   if ((wg_gzprcal==TYPRHO1)||(wg_gzprcal==TYPRHO2) ||
       (wg_gzprcal==TYPTHETA)||(wg_gzprcal==TYPOMEGA))
     {				/* Determine min period */
       per_gzprcal  = _per_gzprcal.fixedflag ?  ((void)((RF_UPDATE_TIME)), per_gzprcal) : (RF_UPDATE_TIME); 
     }
   else
     {
       per_gzprcal  = _per_gzprcal.fixedflag ?  ((void)((GRAD_UPDATE_TIME)), per_gzprcal) : (GRAD_UPDATE_TIME);
     }

   /* set leading edge pulse width */
   if (0 != 0)
     pw_gzprcalf  = _pw_gzprcalf.fixedflag ?  ((void)(IMax(2,GRAD_UPDATE_TIME,0)), pw_gzprcalf) : IMax(2,GRAD_UPDATE_TIME,0);
   else
     pw_gzprcalf  = _pw_gzprcalf.fixedflag ?  ((void)(0), pw_gzprcalf) : 0;

   if ((wg_gzprcal==TYPRHO1)||(wg_gzprcal==TYPRHO2) ||
       (wg_gzprcal==TYPTHETA)||(wg_gzprcal==TYPOMEGA))
     pw_gzprcal  = _pw_gzprcal.fixedflag ?  ((void)(0), pw_gzprcal) : 0;    /* no need for leading edge if rf */

   res_gzprcal  = _res_gzprcal.fixedflag ? 		/* Find resolution */
           
       ((void)((pw_gzprcalf+pw_gzprcala+pw_gzprcal+pw_gzprcald)/per_gzprcal), res_gzprcal) : (pw_gzprcalf+pw_gzprcala+pw_gzprcal+pw_gzprcald)/per_gzprcal;
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1259_target=target,&_temp1259_target) : &target, (WF_PROCESSOR)wg_gxwcal, &calloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1260_rtime=rtime,&_temp1260_rtime) : &rtime, _ftime.fixedflag ? (_temp1261_ftime=ftime,&_temp1261_ftime) : &ftime, (WF_PROCESSOR)wg_gxwcal, &calloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxwcal.fixedflag ? (_temp1262_a_gxwcal=a_gxwcal,&_temp1262_a_gxwcal) : &a_gxwcal, _pw_gxwcala.fixedflag ? (_temp1263_pw_gxwcala=pw_gxwcala,&_temp1263_pw_gxwcala) : &pw_gxwcala, _pw_gxwcal.fixedflag ? (_temp1264_pw_gxwcal=pw_gxwcal,&_temp1264_pw_gxwcal) : &pw_gxwcal,
                          _pw_gxwcald.fixedflag ? (_temp1265_pw_gxwcald=pw_gxwcald,&_temp1265_pw_gxwcald) : &pw_gxwcald) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxwcal  = _ia_gxwcal.fixedflag ?     ((void)((int)((a_gxwcal/target)*MAX_PG_IAMP)), ia_gxwcal) : (int)((a_gxwcal/target)*MAX_PG_IAMP);
    }



{
   float target;
   int rtime,ftime;

   gettarget(_target.fixedflag ? (_temp1266_target=target,&_temp1266_target) : &target, (WF_PROCESSOR)wg_gx1cal, &calloggrd);
   getramptime(_rtime.fixedflag ? (_temp1267_rtime=rtime,&_temp1267_rtime) : &rtime, _ftime.fixedflag ? (_temp1268_ftime=ftime,&_temp1268_ftime) : &ftime, (WF_PROCESSOR)wg_gx1cal, &calloggrd);
   if (TYPNDEF == TYPDEF) {
     if (amppwgrad((float)(0),target,0.0,0.0,rtime,MIN_PLATEAU_TIME,
				 _a_gx1cal.fixedflag ? (_temp1269_a_gx1cal=a_gx1cal,&_temp1269_a_gx1cal) : &a_gx1cal, _pw_gx1cala.fixedflag ? (_temp1270_pw_gx1cala=pw_gx1cala,&_temp1270_pw_gx1cala) : &pw_gx1cala, _pw_gx1cal.fixedflag ? (_temp1271_pw_gx1cal=pw_gx1cal,&_temp1271_pw_gx1cal) : &pw_gx1cal,
				 _pw_gx1cald.fixedflag ? (_temp1272_pw_gx1cald=pw_gx1cald,&_temp1272_pw_gx1cald) : &pw_gx1cald) == FAILURE) return FAILURE;
   }
   if (TRAP_ALL & TRAP_SLOPED)
     {
       ia_gx1cal  = _ia_gx1cal.fixedflag ?       ((void)((int)((1.0*a_gx1cal/target)*MAX_PG_IAMP)), ia_gx1cal) : (int)((1.0*a_gx1cal/target)*MAX_PG_IAMP);
       ia_gx1calwa  = _ia_gx1calwa.fixedflag ?       ((void)((int)((1.0*a_gx1cala/target)*MAX_PG_IAMP)), ia_gx1calwa) : (int)((1.0*a_gx1cala/target)*MAX_PG_IAMP);
       ia_gx1calwb  = _ia_gx1calwb.fixedflag ?       ((void)((int)((1.0*a_gx1calb/target)*MAX_PG_IAMP)), ia_gx1calwb) : (int)((1.0*a_gx1calb/target)*MAX_PG_IAMP);
     }
   else  /* standard trapezoid */
     {
       ia_gx1cal  = _ia_gx1cal.fixedflag ?     ((void)((int)((a_gx1cal/target)*MAX_PG_IAMP)), ia_gx1cal) : (int)((a_gx1cal/target)*MAX_PG_IAMP);
       ia_gx1calwa  = _ia_gx1calwa.fixedflag ?   ((void)(MAX_PG_WAMP), ia_gx1calwa) : MAX_PG_WAMP;
       ia_gx1calwb  = _ia_gx1calwb.fixedflag ?  ((void)(MAX_PG_WAMP), ia_gx1calwb) : MAX_PG_WAMP;
     }

   if ((wg_gx1cal==TYPRHO1)||(wg_gx1cal==TYPRHO2) ||
       (wg_gx1cal==TYPTHETA)||(wg_gx1cal==TYPOMEGA))
     {				/* Determine min period */
       per_gx1cal  = _per_gx1cal.fixedflag ?  ((void)((RF_UPDATE_TIME)), per_gx1cal) : (RF_UPDATE_TIME); 
     }
   else
     {
       per_gx1cal  = _per_gx1cal.fixedflag ?  ((void)((GRAD_UPDATE_TIME)), per_gx1cal) : (GRAD_UPDATE_TIME);
     }

   /* set leading edge pulse width */
   if (0 != 0)
     pw_gx1calf  = _pw_gx1calf.fixedflag ?  ((void)(IMax(2,GRAD_UPDATE_TIME,0)), pw_gx1calf) : IMax(2,GRAD_UPDATE_TIME,0);
   else
     pw_gx1calf  = _pw_gx1calf.fixedflag ?  ((void)(0), pw_gx1calf) : 0;

   if ((wg_gx1cal==TYPRHO1)||(wg_gx1cal==TYPRHO2) ||
       (wg_gx1cal==TYPTHETA)||(wg_gx1cal==TYPOMEGA))
     pw_gx1cal  = _pw_gx1cal.fixedflag ?  ((void)(0), pw_gx1cal) : 0;    /* no need for leading edge if rf */

   res_gx1cal  = _res_gx1cal.fixedflag ? 		/* Find resolution */
           
       ((void)((pw_gx1calf+pw_gx1cala+pw_gx1cal+pw_gx1cald)/per_gx1cal), res_gx1cal) : (pw_gx1calf+pw_gx1cala+pw_gx1cal+pw_gx1cald)/per_gx1cal;
}

{
   float target;
   int rtime,ftime;

   gettarget(_target.fixedflag ? (_temp1273_target=target,&_temp1273_target) : &target, (WF_PROCESSOR)wg_gy1cal, &calloggrd);
   getramptime(_rtime.fixedflag ? (_temp1274_rtime=rtime,&_temp1274_rtime) : &rtime, _ftime.fixedflag ? (_temp1275_ftime=ftime,&_temp1275_ftime) : &ftime, (WF_PROCESSOR)wg_gy1cal, &calloggrd);
   if (TYPNDEF == TYPDEF) {
     if (amppwgrad((float)(0.0),target,0.0,0.0,rtime,MIN_PLATEAU_TIME,
				 _a_gy1cal.fixedflag ? (_temp1276_a_gy1cal=a_gy1cal,&_temp1276_a_gy1cal) : &a_gy1cal, _pw_gy1cala.fixedflag ? (_temp1277_pw_gy1cala=pw_gy1cala,&_temp1277_pw_gy1cala) : &pw_gy1cala, _pw_gy1cal.fixedflag ? (_temp1278_pw_gy1cal=pw_gy1cal,&_temp1278_pw_gy1cal) : &pw_gy1cal,
				 _pw_gy1cald.fixedflag ? (_temp1279_pw_gy1cald=pw_gy1cald,&_temp1279_pw_gy1cald) : &pw_gy1cald) == FAILURE) return FAILURE;
   }
   if (TRAP_ALL_SLOPED & TRAP_SLOPED)
     {
       ia_gy1cal  = _ia_gy1cal.fixedflag ?       ((void)((int)((endview_scalecal*a_gy1cal/target)*MAX_PG_IAMP)), ia_gy1cal) : (int)((endview_scalecal*a_gy1cal/target)*MAX_PG_IAMP);
       ia_gy1calwa  = _ia_gy1calwa.fixedflag ?       ((void)((int)((endview_scalecal*a_gy1cala/target)*MAX_PG_IAMP)), ia_gy1calwa) : (int)((endview_scalecal*a_gy1cala/target)*MAX_PG_IAMP);
       ia_gy1calwb  = _ia_gy1calwb.fixedflag ?       ((void)((int)((endview_scalecal*a_gy1calb/target)*MAX_PG_IAMP)), ia_gy1calwb) : (int)((endview_scalecal*a_gy1calb/target)*MAX_PG_IAMP);
     }
   else  /* standard trapezoid */
     {
       ia_gy1cal  = _ia_gy1cal.fixedflag ?     ((void)((int)((a_gy1cal/target)*MAX_PG_IAMP)), ia_gy1cal) : (int)((a_gy1cal/target)*MAX_PG_IAMP);
       ia_gy1calwa  = _ia_gy1calwa.fixedflag ?   ((void)(MAX_PG_WAMP), ia_gy1calwa) : MAX_PG_WAMP;
       ia_gy1calwb  = _ia_gy1calwb.fixedflag ?  ((void)(MAX_PG_WAMP), ia_gy1calwb) : MAX_PG_WAMP;
     }

   if ((wg_gy1cal==TYPRHO1)||(wg_gy1cal==TYPRHO2) ||
       (wg_gy1cal==TYPTHETA)||(wg_gy1cal==TYPOMEGA))
     {				/* Determine min period */
       per_gy1cal  = _per_gy1cal.fixedflag ?  ((void)((RF_UPDATE_TIME)), per_gy1cal) : (RF_UPDATE_TIME); 
     }
   else
     {
       per_gy1cal  = _per_gy1cal.fixedflag ?  ((void)((GRAD_UPDATE_TIME)), per_gy1cal) : (GRAD_UPDATE_TIME);
     }

   /* set leading edge pulse width */
   if (0 != 0)
     pw_gy1calf  = _pw_gy1calf.fixedflag ?  ((void)(IMax(2,GRAD_UPDATE_TIME,0)), pw_gy1calf) : IMax(2,GRAD_UPDATE_TIME,0);
   else
     pw_gy1calf  = _pw_gy1calf.fixedflag ?  ((void)(0), pw_gy1calf) : 0;

   if ((wg_gy1cal==TYPRHO1)||(wg_gy1cal==TYPRHO2) ||
       (wg_gy1cal==TYPTHETA)||(wg_gy1cal==TYPOMEGA))
     pw_gy1cal  = _pw_gy1cal.fixedflag ?  ((void)(0), pw_gy1cal) : 0;    /* no need for leading edge if rf */

   res_gy1cal  = _res_gy1cal.fixedflag ? 		/* Find resolution */
           
       ((void)((pw_gy1calf+pw_gy1cala+pw_gy1cal+pw_gy1cald)/per_gy1cal), res_gy1cal) : (pw_gy1calf+pw_gy1cala+pw_gy1cal+pw_gy1cald)/per_gy1cal;
}

{
   float target;
   int rtime,ftime;

   gettarget(_target.fixedflag ? (_temp1280_target=target,&_temp1280_target) : &target, (WF_PROCESSOR)wg_gy1rcal, &calloggrd);
   getramptime(_rtime.fixedflag ? (_temp1281_rtime=rtime,&_temp1281_rtime) : &rtime, _ftime.fixedflag ? (_temp1282_ftime=ftime,&_temp1282_ftime) : &ftime, (WF_PROCESSOR)wg_gy1rcal, &calloggrd);
   if (TYPNDEF == TYPDEF) {
     if (amppwgrad((float)(0.0),target,0.0,0.0,rtime,MIN_PLATEAU_TIME,
				 _a_gy1rcal.fixedflag ? (_temp1283_a_gy1rcal=a_gy1rcal,&_temp1283_a_gy1rcal) : &a_gy1rcal, _pw_gy1rcala.fixedflag ? (_temp1284_pw_gy1rcala=pw_gy1rcala,&_temp1284_pw_gy1rcala) : &pw_gy1rcala, _pw_gy1rcal.fixedflag ? (_temp1285_pw_gy1rcal=pw_gy1rcal,&_temp1285_pw_gy1rcal) : &pw_gy1rcal,
				 _pw_gy1rcald.fixedflag ? (_temp1286_pw_gy1rcald=pw_gy1rcald,&_temp1286_pw_gy1rcald) : &pw_gy1rcald) == FAILURE) return FAILURE;
   }
   if (TRAP_ALL_SLOPED & TRAP_SLOPED)
     {
       ia_gy1rcal  = _ia_gy1rcal.fixedflag ?       ((void)((int)((endview_scalecal*a_gy1rcal/target)*MAX_PG_IAMP)), ia_gy1rcal) : (int)((endview_scalecal*a_gy1rcal/target)*MAX_PG_IAMP);
       ia_gy1rcalwa  = _ia_gy1rcalwa.fixedflag ?       ((void)((int)((endview_scalecal*a_gy1rcala/target)*MAX_PG_IAMP)), ia_gy1rcalwa) : (int)((endview_scalecal*a_gy1rcala/target)*MAX_PG_IAMP);
       ia_gy1rcalwb  = _ia_gy1rcalwb.fixedflag ?       ((void)((int)((endview_scalecal*a_gy1rcalb/target)*MAX_PG_IAMP)), ia_gy1rcalwb) : (int)((endview_scalecal*a_gy1rcalb/target)*MAX_PG_IAMP);
     }
   else  /* standard trapezoid */
     {
       ia_gy1rcal  = _ia_gy1rcal.fixedflag ?     ((void)((int)((a_gy1rcal/target)*MAX_PG_IAMP)), ia_gy1rcal) : (int)((a_gy1rcal/target)*MAX_PG_IAMP);
       ia_gy1rcalwa  = _ia_gy1rcalwa.fixedflag ?   ((void)(MAX_PG_WAMP), ia_gy1rcalwa) : MAX_PG_WAMP;
       ia_gy1rcalwb  = _ia_gy1rcalwb.fixedflag ?  ((void)(MAX_PG_WAMP), ia_gy1rcalwb) : MAX_PG_WAMP;
     }

   if ((wg_gy1rcal==TYPRHO1)||(wg_gy1rcal==TYPRHO2) ||
       (wg_gy1rcal==TYPTHETA)||(wg_gy1rcal==TYPOMEGA))
     {				/* Determine min period */
       per_gy1rcal  = _per_gy1rcal.fixedflag ?  ((void)((RF_UPDATE_TIME)), per_gy1rcal) : (RF_UPDATE_TIME); 
     }
   else
     {
       per_gy1rcal  = _per_gy1rcal.fixedflag ?  ((void)((GRAD_UPDATE_TIME)), per_gy1rcal) : (GRAD_UPDATE_TIME);
     }

   /* set leading edge pulse width */
   if (0 != 0)
     pw_gy1rcalf  = _pw_gy1rcalf.fixedflag ?  ((void)(IMax(2,GRAD_UPDATE_TIME,0)), pw_gy1rcalf) : IMax(2,GRAD_UPDATE_TIME,0);
   else
     pw_gy1rcalf  = _pw_gy1rcalf.fixedflag ?  ((void)(0), pw_gy1rcalf) : 0;

   if ((wg_gy1rcal==TYPRHO1)||(wg_gy1rcal==TYPRHO2) ||
       (wg_gy1rcal==TYPTHETA)||(wg_gy1rcal==TYPOMEGA))
     pw_gy1rcal  = _pw_gy1rcal.fixedflag ?  ((void)(0), pw_gy1rcal) : 0;    /* no need for leading edge if rf */

   res_gy1rcal  = _res_gy1rcal.fixedflag ? 		/* Find resolution */
           
       ((void)((pw_gy1rcalf+pw_gy1rcala+pw_gy1rcal+pw_gy1rcald)/per_gy1rcal), res_gy1rcal) : (pw_gy1rcalf+pw_gy1rcala+pw_gy1rcal+pw_gy1rcald)/per_gy1rcal;
}





    {
        ia_rf1coil    = _ia_rf1coil.fixedflag ?    ((void)((int)(a_rf1coil*MAX_PG_IAMP)), ia_rf1coil) : (int)(a_rf1coil*MAX_PG_IAMP);
    }

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1287_target=target,&_temp1287_target) : &target, (WF_PROCESSOR)wg_gzrf1coil, &coilloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1288_rtime=rtime,&_temp1288_rtime) : &rtime, _ftime.fixedflag ? (_temp1289_ftime=ftime,&_temp1289_ftime) : &ftime, (WF_PROCESSOR)wg_gzrf1coil, &coilloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gzrf1coil.fixedflag ? (_temp1290_a_gzrf1coil=a_gzrf1coil,&_temp1290_a_gzrf1coil) : &a_gzrf1coil, _pw_gzrf1coila.fixedflag ? (_temp1291_pw_gzrf1coila=pw_gzrf1coila,&_temp1291_pw_gzrf1coila) : &pw_gzrf1coila, _pw_gzrf1coil.fixedflag ? (_temp1292_pw_gzrf1coil=pw_gzrf1coil,&_temp1292_pw_gzrf1coil) : &pw_gzrf1coil,
                          _pw_gzrf1coild.fixedflag ? (_temp1293_pw_gzrf1coild=pw_gzrf1coild,&_temp1293_pw_gzrf1coild) : &pw_gzrf1coild) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gzrf1coil  = _ia_gzrf1coil.fixedflag ?     ((void)((int)((a_gzrf1coil/target)*MAX_PG_IAMP)), ia_gzrf1coil) : (int)((a_gzrf1coil/target)*MAX_PG_IAMP);
    }

{
   float target;
   int rtime,ftime;

   gettarget(_target.fixedflag ? (_temp1294_target=target,&_temp1294_target) : &target, (WF_PROCESSOR)wg_gzcombcoil, &coilloggrd);
   getramptime(_rtime.fixedflag ? (_temp1295_rtime=rtime,&_temp1295_rtime) : &rtime, _ftime.fixedflag ? (_temp1296_ftime=ftime,&_temp1296_ftime) : &ftime, (WF_PROCESSOR)wg_gzcombcoil, &coilloggrd);
   if (TYPNDEF == TYPDEF) {
     if (amppwgrad((float)(0.0),target,0.0,0.0,rtime,MIN_PLATEAU_TIME,
				 _a_gzcombcoil.fixedflag ? (_temp1297_a_gzcombcoil=a_gzcombcoil,&_temp1297_a_gzcombcoil) : &a_gzcombcoil, _pw_gzcombcoila.fixedflag ? (_temp1298_pw_gzcombcoila=pw_gzcombcoila,&_temp1298_pw_gzcombcoila) : &pw_gzcombcoila, _pw_gzcombcoil.fixedflag ? (_temp1299_pw_gzcombcoil=pw_gzcombcoil,&_temp1299_pw_gzcombcoil) : &pw_gzcombcoil,
				 _pw_gzcombcoild.fixedflag ? (_temp1300_pw_gzcombcoild=pw_gzcombcoild,&_temp1300_pw_gzcombcoild) : &pw_gzcombcoild) == FAILURE) return FAILURE;
   }
   if (TRAP_ALL_SLOPED & TRAP_SLOPED)
     {
       ia_gzcombcoil  = _ia_gzcombcoil.fixedflag ?       ((void)((int)((endviewz_scalecoil*a_gzcombcoil/target)*MAX_PG_IAMP)), ia_gzcombcoil) : (int)((endviewz_scalecoil*a_gzcombcoil/target)*MAX_PG_IAMP);
       ia_gzcombcoilwa  = _ia_gzcombcoilwa.fixedflag ?       ((void)((int)((endviewz_scalecoil*a_gzcombcoila/target)*MAX_PG_IAMP)), ia_gzcombcoilwa) : (int)((endviewz_scalecoil*a_gzcombcoila/target)*MAX_PG_IAMP);
       ia_gzcombcoilwb  = _ia_gzcombcoilwb.fixedflag ?       ((void)((int)((endviewz_scalecoil*a_gzcombcoilb/target)*MAX_PG_IAMP)), ia_gzcombcoilwb) : (int)((endviewz_scalecoil*a_gzcombcoilb/target)*MAX_PG_IAMP);
     }
   else  /* standard trapezoid */
     {
       ia_gzcombcoil  = _ia_gzcombcoil.fixedflag ?     ((void)((int)((a_gzcombcoil/target)*MAX_PG_IAMP)), ia_gzcombcoil) : (int)((a_gzcombcoil/target)*MAX_PG_IAMP);
       ia_gzcombcoilwa  = _ia_gzcombcoilwa.fixedflag ?   ((void)(MAX_PG_WAMP), ia_gzcombcoilwa) : MAX_PG_WAMP;
       ia_gzcombcoilwb  = _ia_gzcombcoilwb.fixedflag ?  ((void)(MAX_PG_WAMP), ia_gzcombcoilwb) : MAX_PG_WAMP;
     }

   if ((wg_gzcombcoil==TYPRHO1)||(wg_gzcombcoil==TYPRHO2) ||
       (wg_gzcombcoil==TYPTHETA)||(wg_gzcombcoil==TYPOMEGA))
     {				/* Determine min period */
       per_gzcombcoil  = _per_gzcombcoil.fixedflag ?  ((void)((RF_UPDATE_TIME)), per_gzcombcoil) : (RF_UPDATE_TIME); 
     }
   else
     {
       per_gzcombcoil  = _per_gzcombcoil.fixedflag ?  ((void)((GRAD_UPDATE_TIME)), per_gzcombcoil) : (GRAD_UPDATE_TIME);
     }

   /* set leading edge pulse width */
   if (0 != 0)
     pw_gzcombcoilf  = _pw_gzcombcoilf.fixedflag ?  ((void)(IMax(2,GRAD_UPDATE_TIME,0)), pw_gzcombcoilf) : IMax(2,GRAD_UPDATE_TIME,0);
   else
     pw_gzcombcoilf  = _pw_gzcombcoilf.fixedflag ?  ((void)(0), pw_gzcombcoilf) : 0;

   if ((wg_gzcombcoil==TYPRHO1)||(wg_gzcombcoil==TYPRHO2) ||
       (wg_gzcombcoil==TYPTHETA)||(wg_gzcombcoil==TYPOMEGA))
     pw_gzcombcoil  = _pw_gzcombcoil.fixedflag ?  ((void)(0), pw_gzcombcoil) : 0;    /* no need for leading edge if rf */

   res_gzcombcoil  = _res_gzcombcoil.fixedflag ? 		/* Find resolution */
           
       ((void)((pw_gzcombcoilf+pw_gzcombcoila+pw_gzcombcoil+pw_gzcombcoild)/per_gzcombcoil), res_gzcombcoil) : (pw_gzcombcoilf+pw_gzcombcoila+pw_gzcombcoil+pw_gzcombcoild)/per_gzcombcoil;
}

{
   float target;
   int rtime,ftime;

   gettarget(_target.fixedflag ? (_temp1301_target=target,&_temp1301_target) : &target, (WF_PROCESSOR)wg_gzprcoil, &coilloggrd);
   getramptime(_rtime.fixedflag ? (_temp1302_rtime=rtime,&_temp1302_rtime) : &rtime, _ftime.fixedflag ? (_temp1303_ftime=ftime,&_temp1303_ftime) : &ftime, (WF_PROCESSOR)wg_gzprcoil, &coilloggrd);
   if (TYPNDEF == TYPDEF) {
     if (amppwgrad((float)(0.0),target,0.0,0.0,rtime,MIN_PLATEAU_TIME,
				 _a_gzprcoil.fixedflag ? (_temp1304_a_gzprcoil=a_gzprcoil,&_temp1304_a_gzprcoil) : &a_gzprcoil, _pw_gzprcoila.fixedflag ? (_temp1305_pw_gzprcoila=pw_gzprcoila,&_temp1305_pw_gzprcoila) : &pw_gzprcoila, _pw_gzprcoil.fixedflag ? (_temp1306_pw_gzprcoil=pw_gzprcoil,&_temp1306_pw_gzprcoil) : &pw_gzprcoil,
				 _pw_gzprcoild.fixedflag ? (_temp1307_pw_gzprcoild=pw_gzprcoild,&_temp1307_pw_gzprcoild) : &pw_gzprcoild) == FAILURE) return FAILURE;
   }
   if (TRAP_ALL_SLOPED & TRAP_SLOPED)
     {
       ia_gzprcoil  = _ia_gzprcoil.fixedflag ?       ((void)((int)((endviewz_scalecoil*a_gzprcoil/target)*MAX_PG_IAMP)), ia_gzprcoil) : (int)((endviewz_scalecoil*a_gzprcoil/target)*MAX_PG_IAMP);
       ia_gzprcoilwa  = _ia_gzprcoilwa.fixedflag ?       ((void)((int)((endviewz_scalecoil*a_gzprcoila/target)*MAX_PG_IAMP)), ia_gzprcoilwa) : (int)((endviewz_scalecoil*a_gzprcoila/target)*MAX_PG_IAMP);
       ia_gzprcoilwb  = _ia_gzprcoilwb.fixedflag ?       ((void)((int)((endviewz_scalecoil*a_gzprcoilb/target)*MAX_PG_IAMP)), ia_gzprcoilwb) : (int)((endviewz_scalecoil*a_gzprcoilb/target)*MAX_PG_IAMP);
     }
   else  /* standard trapezoid */
     {
       ia_gzprcoil  = _ia_gzprcoil.fixedflag ?     ((void)((int)((a_gzprcoil/target)*MAX_PG_IAMP)), ia_gzprcoil) : (int)((a_gzprcoil/target)*MAX_PG_IAMP);
       ia_gzprcoilwa  = _ia_gzprcoilwa.fixedflag ?   ((void)(MAX_PG_WAMP), ia_gzprcoilwa) : MAX_PG_WAMP;
       ia_gzprcoilwb  = _ia_gzprcoilwb.fixedflag ?  ((void)(MAX_PG_WAMP), ia_gzprcoilwb) : MAX_PG_WAMP;
     }

   if ((wg_gzprcoil==TYPRHO1)||(wg_gzprcoil==TYPRHO2) ||
       (wg_gzprcoil==TYPTHETA)||(wg_gzprcoil==TYPOMEGA))
     {				/* Determine min period */
       per_gzprcoil  = _per_gzprcoil.fixedflag ?  ((void)((RF_UPDATE_TIME)), per_gzprcoil) : (RF_UPDATE_TIME); 
     }
   else
     {
       per_gzprcoil  = _per_gzprcoil.fixedflag ?  ((void)((GRAD_UPDATE_TIME)), per_gzprcoil) : (GRAD_UPDATE_TIME);
     }

   /* set leading edge pulse width */
   if (0 != 0)
     pw_gzprcoilf  = _pw_gzprcoilf.fixedflag ?  ((void)(IMax(2,GRAD_UPDATE_TIME,0)), pw_gzprcoilf) : IMax(2,GRAD_UPDATE_TIME,0);
   else
     pw_gzprcoilf  = _pw_gzprcoilf.fixedflag ?  ((void)(0), pw_gzprcoilf) : 0;

   if ((wg_gzprcoil==TYPRHO1)||(wg_gzprcoil==TYPRHO2) ||
       (wg_gzprcoil==TYPTHETA)||(wg_gzprcoil==TYPOMEGA))
     pw_gzprcoil  = _pw_gzprcoil.fixedflag ?  ((void)(0), pw_gzprcoil) : 0;    /* no need for leading edge if rf */

   res_gzprcoil  = _res_gzprcoil.fixedflag ? 		/* Find resolution */
           
       ((void)((pw_gzprcoilf+pw_gzprcoila+pw_gzprcoil+pw_gzprcoild)/per_gzprcoil), res_gzprcoil) : (pw_gzprcoilf+pw_gzprcoila+pw_gzprcoil+pw_gzprcoild)/per_gzprcoil;
}

    {
        float target;
        int rtime, ftime;

        gettarget(_target.fixedflag ? (_temp1308_target=target,&_temp1308_target) : &target, (WF_PROCESSOR)wg_gxwcoil, &coilloggrd);
        if (TYPNDEF == TYPDEF)
        {
            getramptime(_rtime.fixedflag ? (_temp1309_rtime=rtime,&_temp1309_rtime) : &rtime, _ftime.fixedflag ? (_temp1310_ftime=ftime,&_temp1310_ftime) : &ftime, (WF_PROCESSOR)wg_gxwcoil, &coilloggrd);
            if (amppwgrad((float)(0),target, 0.0, 0.0, rtime,
                          MIN_PLATEAU_TIME,
                          _a_gxwcoil.fixedflag ? (_temp1311_a_gxwcoil=a_gxwcoil,&_temp1311_a_gxwcoil) : &a_gxwcoil, _pw_gxwcoila.fixedflag ? (_temp1312_pw_gxwcoila=pw_gxwcoila,&_temp1312_pw_gxwcoila) : &pw_gxwcoila, _pw_gxwcoil.fixedflag ? (_temp1313_pw_gxwcoil=pw_gxwcoil,&_temp1313_pw_gxwcoil) : &pw_gxwcoil,
                          _pw_gxwcoild.fixedflag ? (_temp1314_pw_gxwcoild=pw_gxwcoild,&_temp1314_pw_gxwcoild) : &pw_gxwcoild) == FAILURE)
            {
                return FAILURE;
            }
        }

        ia_gxwcoil  = _ia_gxwcoil.fixedflag ?     ((void)((int)((a_gxwcoil/target)*MAX_PG_IAMP)), ia_gxwcoil) : (int)((a_gxwcoil/target)*MAX_PG_IAMP);
    }



{
   float target;
   int rtime,ftime;

   gettarget(_target.fixedflag ? (_temp1315_target=target,&_temp1315_target) : &target, (WF_PROCESSOR)wg_gx1coil, &coilloggrd);
   getramptime(_rtime.fixedflag ? (_temp1316_rtime=rtime,&_temp1316_rtime) : &rtime, _ftime.fixedflag ? (_temp1317_ftime=ftime,&_temp1317_ftime) : &ftime, (WF_PROCESSOR)wg_gx1coil, &coilloggrd);
   if (TYPNDEF == TYPDEF) {
     if (amppwgrad((float)(0),target,0.0,0.0,rtime,MIN_PLATEAU_TIME,
				 _a_gx1coil.fixedflag ? (_temp1318_a_gx1coil=a_gx1coil,&_temp1318_a_gx1coil) : &a_gx1coil, _pw_gx1coila.fixedflag ? (_temp1319_pw_gx1coila=pw_gx1coila,&_temp1319_pw_gx1coila) : &pw_gx1coila, _pw_gx1coil.fixedflag ? (_temp1320_pw_gx1coil=pw_gx1coil,&_temp1320_pw_gx1coil) : &pw_gx1coil,
				 _pw_gx1coild.fixedflag ? (_temp1321_pw_gx1coild=pw_gx1coild,&_temp1321_pw_gx1coild) : &pw_gx1coild) == FAILURE) return FAILURE;
   }
   if (TRAP_ALL & TRAP_SLOPED)
     {
       ia_gx1coil  = _ia_gx1coil.fixedflag ?       ((void)((int)((1.0*a_gx1coil/target)*MAX_PG_IAMP)), ia_gx1coil) : (int)((1.0*a_gx1coil/target)*MAX_PG_IAMP);
       ia_gx1coilwa  = _ia_gx1coilwa.fixedflag ?       ((void)((int)((1.0*a_gx1coila/target)*MAX_PG_IAMP)), ia_gx1coilwa) : (int)((1.0*a_gx1coila/target)*MAX_PG_IAMP);
       ia_gx1coilwb  = _ia_gx1coilwb.fixedflag ?       ((void)((int)((1.0*a_gx1coilb/target)*MAX_PG_IAMP)), ia_gx1coilwb) : (int)((1.0*a_gx1coilb/target)*MAX_PG_IAMP);
     }
   else  /* standard trapezoid */
     {
       ia_gx1coil  = _ia_gx1coil.fixedflag ?     ((void)((int)((a_gx1coil/target)*MAX_PG_IAMP)), ia_gx1coil) : (int)((a_gx1coil/target)*MAX_PG_IAMP);
       ia_gx1coilwa  = _ia_gx1coilwa.fixedflag ?   ((void)(MAX_PG_WAMP), ia_gx1coilwa) : MAX_PG_WAMP;
       ia_gx1coilwb  = _ia_gx1coilwb.fixedflag ?  ((void)(MAX_PG_WAMP), ia_gx1coilwb) : MAX_PG_WAMP;
     }

   if ((wg_gx1coil==TYPRHO1)||(wg_gx1coil==TYPRHO2) ||
       (wg_gx1coil==TYPTHETA)||(wg_gx1coil==TYPOMEGA))
     {				/* Determine min period */
       per_gx1coil  = _per_gx1coil.fixedflag ?  ((void)((RF_UPDATE_TIME)), per_gx1coil) : (RF_UPDATE_TIME); 
     }
   else
     {
       per_gx1coil  = _per_gx1coil.fixedflag ?  ((void)((GRAD_UPDATE_TIME)), per_gx1coil) : (GRAD_UPDATE_TIME);
     }

   /* set leading edge pulse width */
   if (0 != 0)
     pw_gx1coilf  = _pw_gx1coilf.fixedflag ?  ((void)(IMax(2,GRAD_UPDATE_TIME,0)), pw_gx1coilf) : IMax(2,GRAD_UPDATE_TIME,0);
   else
     pw_gx1coilf  = _pw_gx1coilf.fixedflag ?  ((void)(0), pw_gx1coilf) : 0;

   if ((wg_gx1coil==TYPRHO1)||(wg_gx1coil==TYPRHO2) ||
       (wg_gx1coil==TYPTHETA)||(wg_gx1coil==TYPOMEGA))
     pw_gx1coil  = _pw_gx1coil.fixedflag ?  ((void)(0), pw_gx1coil) : 0;    /* no need for leading edge if rf */

   res_gx1coil  = _res_gx1coil.fixedflag ? 		/* Find resolution */
           
       ((void)((pw_gx1coilf+pw_gx1coila+pw_gx1coil+pw_gx1coild)/per_gx1coil), res_gx1coil) : (pw_gx1coilf+pw_gx1coila+pw_gx1coil+pw_gx1coild)/per_gx1coil;
}

{
   float target;
   int rtime,ftime;

   gettarget(_target.fixedflag ? (_temp1322_target=target,&_temp1322_target) : &target, (WF_PROCESSOR)wg_gy1coil, &coilloggrd);
   getramptime(_rtime.fixedflag ? (_temp1323_rtime=rtime,&_temp1323_rtime) : &rtime, _ftime.fixedflag ? (_temp1324_ftime=ftime,&_temp1324_ftime) : &ftime, (WF_PROCESSOR)wg_gy1coil, &coilloggrd);
   if (TYPNDEF == TYPDEF) {
     if (amppwgrad((float)(0.0),target,0.0,0.0,rtime,MIN_PLATEAU_TIME,
				 _a_gy1coil.fixedflag ? (_temp1325_a_gy1coil=a_gy1coil,&_temp1325_a_gy1coil) : &a_gy1coil, _pw_gy1coila.fixedflag ? (_temp1326_pw_gy1coila=pw_gy1coila,&_temp1326_pw_gy1coila) : &pw_gy1coila, _pw_gy1coil.fixedflag ? (_temp1327_pw_gy1coil=pw_gy1coil,&_temp1327_pw_gy1coil) : &pw_gy1coil,
				 _pw_gy1coild.fixedflag ? (_temp1328_pw_gy1coild=pw_gy1coild,&_temp1328_pw_gy1coild) : &pw_gy1coild) == FAILURE) return FAILURE;
   }
   if (TRAP_ALL_SLOPED & TRAP_SLOPED)
     {
       ia_gy1coil  = _ia_gy1coil.fixedflag ?       ((void)((int)((endview_scalecoil*a_gy1coil/target)*MAX_PG_IAMP)), ia_gy1coil) : (int)((endview_scalecoil*a_gy1coil/target)*MAX_PG_IAMP);
       ia_gy1coilwa  = _ia_gy1coilwa.fixedflag ?       ((void)((int)((endview_scalecoil*a_gy1coila/target)*MAX_PG_IAMP)), ia_gy1coilwa) : (int)((endview_scalecoil*a_gy1coila/target)*MAX_PG_IAMP);
       ia_gy1coilwb  = _ia_gy1coilwb.fixedflag ?       ((void)((int)((endview_scalecoil*a_gy1coilb/target)*MAX_PG_IAMP)), ia_gy1coilwb) : (int)((endview_scalecoil*a_gy1coilb/target)*MAX_PG_IAMP);
     }
   else  /* standard trapezoid */
     {
       ia_gy1coil  = _ia_gy1coil.fixedflag ?     ((void)((int)((a_gy1coil/target)*MAX_PG_IAMP)), ia_gy1coil) : (int)((a_gy1coil/target)*MAX_PG_IAMP);
       ia_gy1coilwa  = _ia_gy1coilwa.fixedflag ?   ((void)(MAX_PG_WAMP), ia_gy1coilwa) : MAX_PG_WAMP;
       ia_gy1coilwb  = _ia_gy1coilwb.fixedflag ?  ((void)(MAX_PG_WAMP), ia_gy1coilwb) : MAX_PG_WAMP;
     }

   if ((wg_gy1coil==TYPRHO1)||(wg_gy1coil==TYPRHO2) ||
       (wg_gy1coil==TYPTHETA)||(wg_gy1coil==TYPOMEGA))
     {				/* Determine min period */
       per_gy1coil  = _per_gy1coil.fixedflag ?  ((void)((RF_UPDATE_TIME)), per_gy1coil) : (RF_UPDATE_TIME); 
     }
   else
     {
       per_gy1coil  = _per_gy1coil.fixedflag ?  ((void)((GRAD_UPDATE_TIME)), per_gy1coil) : (GRAD_UPDATE_TIME);
     }

   /* set leading edge pulse width */
   if (0 != 0)
     pw_gy1coilf  = _pw_gy1coilf.fixedflag ?  ((void)(IMax(2,GRAD_UPDATE_TIME,0)), pw_gy1coilf) : IMax(2,GRAD_UPDATE_TIME,0);
   else
     pw_gy1coilf  = _pw_gy1coilf.fixedflag ?  ((void)(0), pw_gy1coilf) : 0;

   if ((wg_gy1coil==TYPRHO1)||(wg_gy1coil==TYPRHO2) ||
       (wg_gy1coil==TYPTHETA)||(wg_gy1coil==TYPOMEGA))
     pw_gy1coil  = _pw_gy1coil.fixedflag ?  ((void)(0), pw_gy1coil) : 0;    /* no need for leading edge if rf */

   res_gy1coil  = _res_gy1coil.fixedflag ? 		/* Find resolution */
           
       ((void)((pw_gy1coilf+pw_gy1coila+pw_gy1coil+pw_gy1coild)/per_gy1coil), res_gy1coil) : (pw_gy1coilf+pw_gy1coila+pw_gy1coil+pw_gy1coild)/per_gy1coil;
}

{
   float target;
   int rtime,ftime;

   gettarget(_target.fixedflag ? (_temp1329_target=target,&_temp1329_target) : &target, (WF_PROCESSOR)wg_gy1rcoil, &coilloggrd);
   getramptime(_rtime.fixedflag ? (_temp1330_rtime=rtime,&_temp1330_rtime) : &rtime, _ftime.fixedflag ? (_temp1331_ftime=ftime,&_temp1331_ftime) : &ftime, (WF_PROCESSOR)wg_gy1rcoil, &coilloggrd);
   if (TYPNDEF == TYPDEF) {
     if (amppwgrad((float)(0.0),target,0.0,0.0,rtime,MIN_PLATEAU_TIME,
				 _a_gy1rcoil.fixedflag ? (_temp1332_a_gy1rcoil=a_gy1rcoil,&_temp1332_a_gy1rcoil) : &a_gy1rcoil, _pw_gy1rcoila.fixedflag ? (_temp1333_pw_gy1rcoila=pw_gy1rcoila,&_temp1333_pw_gy1rcoila) : &pw_gy1rcoila, _pw_gy1rcoil.fixedflag ? (_temp1334_pw_gy1rcoil=pw_gy1rcoil,&_temp1334_pw_gy1rcoil) : &pw_gy1rcoil,
				 _pw_gy1rcoild.fixedflag ? (_temp1335_pw_gy1rcoild=pw_gy1rcoild,&_temp1335_pw_gy1rcoild) : &pw_gy1rcoild) == FAILURE) return FAILURE;
   }
   if (TRAP_ALL_SLOPED & TRAP_SLOPED)
     {
       ia_gy1rcoil  = _ia_gy1rcoil.fixedflag ?       ((void)((int)((endview_scalecoil*a_gy1rcoil/target)*MAX_PG_IAMP)), ia_gy1rcoil) : (int)((endview_scalecoil*a_gy1rcoil/target)*MAX_PG_IAMP);
       ia_gy1rcoilwa  = _ia_gy1rcoilwa.fixedflag ?       ((void)((int)((endview_scalecoil*a_gy1rcoila/target)*MAX_PG_IAMP)), ia_gy1rcoilwa) : (int)((endview_scalecoil*a_gy1rcoila/target)*MAX_PG_IAMP);
       ia_gy1rcoilwb  = _ia_gy1rcoilwb.fixedflag ?       ((void)((int)((endview_scalecoil*a_gy1rcoilb/target)*MAX_PG_IAMP)), ia_gy1rcoilwb) : (int)((endview_scalecoil*a_gy1rcoilb/target)*MAX_PG_IAMP);
     }
   else  /* standard trapezoid */
     {
       ia_gy1rcoil  = _ia_gy1rcoil.fixedflag ?     ((void)((int)((a_gy1rcoil/target)*MAX_PG_IAMP)), ia_gy1rcoil) : (int)((a_gy1rcoil/target)*MAX_PG_IAMP);
       ia_gy1rcoilwa  = _ia_gy1rcoilwa.fixedflag ?   ((void)(MAX_PG_WAMP), ia_gy1rcoilwa) : MAX_PG_WAMP;
       ia_gy1rcoilwb  = _ia_gy1rcoilwb.fixedflag ?  ((void)(MAX_PG_WAMP), ia_gy1rcoilwb) : MAX_PG_WAMP;
     }

   if ((wg_gy1rcoil==TYPRHO1)||(wg_gy1rcoil==TYPRHO2) ||
       (wg_gy1rcoil==TYPTHETA)||(wg_gy1rcoil==TYPOMEGA))
     {				/* Determine min period */
       per_gy1rcoil  = _per_gy1rcoil.fixedflag ?  ((void)((RF_UPDATE_TIME)), per_gy1rcoil) : (RF_UPDATE_TIME); 
     }
   else
     {
       per_gy1rcoil  = _per_gy1rcoil.fixedflag ?  ((void)((GRAD_UPDATE_TIME)), per_gy1rcoil) : (GRAD_UPDATE_TIME);
     }

   /* set leading edge pulse width */
   if (0 != 0)
     pw_gy1rcoilf  = _pw_gy1rcoilf.fixedflag ?  ((void)(IMax(2,GRAD_UPDATE_TIME,0)), pw_gy1rcoilf) : IMax(2,GRAD_UPDATE_TIME,0);
   else
     pw_gy1rcoilf  = _pw_gy1rcoilf.fixedflag ?  ((void)(0), pw_gy1rcoilf) : 0;

   if ((wg_gy1rcoil==TYPRHO1)||(wg_gy1rcoil==TYPRHO2) ||
       (wg_gy1rcoil==TYPTHETA)||(wg_gy1rcoil==TYPOMEGA))
     pw_gy1rcoil  = _pw_gy1rcoil.fixedflag ?  ((void)(0), pw_gy1rcoil) : 0;    /* no need for leading edge if rf */

   res_gy1rcoil  = _res_gy1rcoil.fixedflag ? 		/* Find resolution */
           
       ((void)((pw_gy1rcoilf+pw_gy1rcoila+pw_gy1rcoil+pw_gy1rcoild)/per_gy1rcoil), res_gy1rcoil) : (pw_gy1rcoilf+pw_gy1rcoila+pw_gy1rcoil+pw_gy1rcoild)/per_gy1rcoil;
}






